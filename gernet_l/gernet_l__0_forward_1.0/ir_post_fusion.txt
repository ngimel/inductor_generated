buf0: ExternKernelSchedulerNode(Convolution)
buf0.writes = [StarDep(name='buf0')]
buf0.unmet_dependencies = []
buf0.met_dependencies = [StarDep(name='primals_1'), StarDep(name='primals_60')]
buf0.node.kernel = aten.convolution


buf1: SchedulerNode(ComputedBuffer)
buf1.writes = 
    [   MemoryDep(name='buf1', index=c0, size=(512, 8192)),
        MemoryDep(name='buf1', index=c0, size=(512,))]
buf1.unmet_dependencies = [   MemoryDep(name='buf0', index=16384*c0 + 524288*((8192*c1 + c2)//16384) + ModularIndexing(c2, 1, 128) + 128*ModularIndexing(8192*c1 + c2, 128, 128), size=(32, 16, 8192))]
buf1.met_dependencies = []
buf1.group.device = cuda:0
buf1.group.iteration = (512, 8192)
buf1.sizes = ([32, 16], [8192])
class buf1_loop_body:
    var_ranges = {z0: 32, z1: 16, z2: 8192}
    index0 = 16384*z0 + 524288*((8192*z1 + z2)//16384) + ModularIndexing(z2, 1, 128) + 128*ModularIndexing(8192*z1 + z2, 128, 128)
    index1 = 16*z0 + z1
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf0', get_index)
        get_index_1 = self.get_index('index1')
        reduction = ops.reduction('buf1', torch.float32, torch.float32, 'sum', get_index_1, load)
        return reduction


buf2_buf3_buf7: FusedSchedulerNode(NoneType)
buf2_buf3_buf7.writes = 
    [   MemoryDep(name='buf2', index=c0, size=(32, 16)),
        MemoryDep(name='buf2', index=c0, size=(32,)),
        MemoryDep(name='buf3', index=c0, size=(32,)),
        MemoryDep(name='buf7', index=c0, size=(32,))]
buf2_buf3_buf7.unmet_dependencies = [MemoryDep(name='buf1', index=c0, size=(512,))]
buf2_buf3_buf7.met_dependencies = [MemoryDep(name='primals_62', index=c0, size=(32,))]
buf2_buf3_buf7.snodes = ['buf2', 'buf3', 'buf7']


buf4: SchedulerNode(ComputedBuffer)
buf4.writes = 
    [   MemoryDep(name='buf4', index=c0, size=(512, 8192)),
        MemoryDep(name='buf4', index=c0, size=(512,))]
buf4.unmet_dependencies = 
    [   MemoryDep(name='buf0', index=16384*c0 + 524288*((8192*c1 + c2)//16384) + ModularIndexing(c2, 1, 128) + 128*ModularIndexing(8192*c1 + c2, 128, 128), size=(32, 16, 8192)),
        MemoryDep(name='buf3', index=c0, size=(32, 131072))]
buf4.met_dependencies = []
buf4.group.device = cuda:0
buf4.group.iteration = (512, 8192)
buf4.sizes = ([32, 16], [8192])
class buf4_loop_body:
    var_ranges = {z0: 32, z1: 16, z2: 8192}
    index0 = 16384*z0 + 524288*((8192*z1 + z2)//16384) + ModularIndexing(z2, 1, 128) + 128*ModularIndexing(8192*z1 + z2, 128, 128)
    index1 = z0
    index2 = 16*z0 + z1
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf0', get_index)
        get_index_1 = self.get_index('index1')
        load_1 = ops.load('buf3', get_index_1)
        sub = ops.sub(load, load_1)
        square = ops.square(sub)
        get_index_2 = self.get_index('index2')
        reduction = ops.reduction('buf4', torch.float32, torch.float32, 'sum', get_index_2, square)
        return reduction


buf5_buf6_buf8: FusedSchedulerNode(NoneType)
buf5_buf6_buf8.writes = 
    [   MemoryDep(name='buf5', index=c0, size=(32, 16)),
        MemoryDep(name='buf5', index=c0, size=(32,)),
        MemoryDep(name='buf6', index=c0, size=(32,)),
        MemoryDep(name='buf8', index=c0, size=(32,))]
buf5_buf6_buf8.unmet_dependencies = [MemoryDep(name='buf4', index=c0, size=(512,))]
buf5_buf6_buf8.met_dependencies = [MemoryDep(name='primals_63', index=c0, size=(32,))]
buf5_buf6_buf8.snodes = ['buf5', 'buf6', 'buf8']


buf9: SchedulerNode(ComputedBuffer)
buf9.writes = [MemoryDep(name='buf9', index=c0, size=(4194304,))]
buf9.unmet_dependencies = 
    [   MemoryDep(name='buf0', index=c0, size=(4194304,)),
        MemoryDep(name='buf3', index=c1, size=(8, 32, 16384)),
        MemoryDep(name='buf5', index=c1, size=(8, 32, 16384))]
buf9.met_dependencies = 
    [   MemoryDep(name='primals_64', index=c1, size=(8, 32, 16384)),
        MemoryDep(name='primals_65', index=c1, size=(8, 32, 16384))]
buf9.group.device = cuda:0
buf9.group.iteration = (4194304, 1)
buf9.sizes = ([8, 32, 16384], [])
class buf9_loop_body:
    var_ranges = {z0: 8, z1: 32, z2: 16384}
    index0 = 524288*z0 + 16384*z1 + z2
    index1 = z1
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf0', get_index)
        get_index_1 = self.get_index('index1')
        load_1 = ops.load('buf3', get_index_1)
        sub = ops.sub(load, load_1)
        get_index_2 = self.get_index('index1')
        load_2 = ops.load('buf5', get_index_2)
        constant = ops.constant(131072, torch.float32)
        div = ops.div(load_2, constant)
        constant_1 = ops.constant(1e-05, torch.float32)
        add = ops.add(div, constant_1)
        rsqrt = ops.rsqrt(add)
        mul = ops.mul(sub, rsqrt)
        get_index_3 = self.get_index('index1')
        load_3 = ops.load('primals_64', get_index_3)
        mul_1 = ops.mul(mul, load_3)
        get_index_4 = self.get_index('index1')
        load_4 = ops.load('primals_65', get_index_4)
        add_1 = ops.add(mul_1, load_4)
        relu = ops.relu(add_1)
        get_index_5 = self.get_index('index0')
        store = ops.store('buf9', get_index_5, relu, None)
        return store


buf10: ExternKernelSchedulerNode(Convolution)
buf10.writes = [StarDep(name='buf10')]
buf10.unmet_dependencies = [StarDep(name='buf9')]
buf10.met_dependencies = [StarDep(name='primals_2')]
buf10.node.kernel = aten.convolution


buf11: SchedulerNode(ComputedBuffer)
buf11.writes = 
    [   MemoryDep(name='buf11', index=c0, size=(512, 8192)),
        MemoryDep(name='buf11', index=c0, size=(512,))]
buf11.unmet_dependencies = [   MemoryDep(name='buf10', index=1048576*c0 + 4096*c1 + 524288*(c2//4096) + ModularIndexing(c2, 1, 4096), size=(4, 128, 8192))]
buf11.met_dependencies = []
buf11.group.device = cuda:0
buf11.group.iteration = (512, 8192)
buf11.sizes = ([4, 128], [8192])
class buf11_loop_body:
    var_ranges = {z0: 4, z1: 128, z2: 8192}
    index0 = 1048576*z0 + 4096*z1 + 524288*(z2//4096) + ModularIndexing(z2, 1, 4096)
    index1 = 128*z0 + z1
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf10', get_index)
        get_index_1 = self.get_index('index1')
        reduction = ops.reduction('buf11', torch.float32, torch.float32, 'sum', get_index_1, load)
        return reduction


buf12_buf13_buf17: FusedSchedulerNode(NoneType)
buf12_buf13_buf17.writes = 
    [   MemoryDep(name='buf12', index=c0, size=(128, 4)),
        MemoryDep(name='buf12', index=c0, size=(128,)),
        MemoryDep(name='buf13', index=c0, size=(128,)),
        MemoryDep(name='buf17', index=c0, size=(128,))]
buf12_buf13_buf17.unmet_dependencies = [MemoryDep(name='buf11', index=c0 + 128*c1, size=(128, 4))]
buf12_buf13_buf17.met_dependencies = [MemoryDep(name='primals_67', index=c0, size=(128,))]
buf12_buf13_buf17.snodes = ['buf12', 'buf13', 'buf17']


buf14: SchedulerNode(ComputedBuffer)
buf14.writes = 
    [   MemoryDep(name='buf14', index=c0, size=(512, 8192)),
        MemoryDep(name='buf14', index=c0, size=(512,))]
buf14.unmet_dependencies = 
    [   MemoryDep(name='buf10', index=1048576*c0 + 4096*c1 + 524288*(c2//4096) + ModularIndexing(c2, 1, 4096), size=(4, 128, 8192)),
        MemoryDep(name='buf13', index=c1, size=(4, 128, 8192))]
buf14.met_dependencies = []
buf14.group.device = cuda:0
buf14.group.iteration = (512, 8192)
buf14.sizes = ([4, 128], [8192])
class buf14_loop_body:
    var_ranges = {z0: 4, z1: 128, z2: 8192}
    index0 = 1048576*z0 + 4096*z1 + 524288*(z2//4096) + ModularIndexing(z2, 1, 4096)
    index1 = z1
    index2 = 128*z0 + z1
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf10', get_index)
        get_index_1 = self.get_index('index1')
        load_1 = ops.load('buf13', get_index_1)
        sub = ops.sub(load, load_1)
        square = ops.square(sub)
        get_index_2 = self.get_index('index2')
        reduction = ops.reduction('buf14', torch.float32, torch.float32, 'sum', get_index_2, square)
        return reduction


buf15_buf16_buf18: FusedSchedulerNode(NoneType)
buf15_buf16_buf18.writes = 
    [   MemoryDep(name='buf15', index=c0, size=(128, 4)),
        MemoryDep(name='buf15', index=c0, size=(128,)),
        MemoryDep(name='buf16', index=c0, size=(128,)),
        MemoryDep(name='buf18', index=c0, size=(128,))]
buf15_buf16_buf18.unmet_dependencies = [MemoryDep(name='buf14', index=c0 + 128*c1, size=(128, 4))]
buf15_buf16_buf18.met_dependencies = [MemoryDep(name='primals_68', index=c0, size=(128,))]
buf15_buf16_buf18.snodes = ['buf15', 'buf16', 'buf18']


buf19: SchedulerNode(ComputedBuffer)
buf19.writes = [MemoryDep(name='buf19', index=c0, size=(4194304,))]
buf19.unmet_dependencies = 
    [   MemoryDep(name='buf10', index=c0, size=(4194304,)),
        MemoryDep(name='buf13', index=c1, size=(8, 128, 4096)),
        MemoryDep(name='buf15', index=c1, size=(8, 128, 4096))]
buf19.met_dependencies = 
    [   MemoryDep(name='primals_69', index=c1, size=(8, 128, 4096)),
        MemoryDep(name='primals_70', index=c1, size=(8, 128, 4096))]
buf19.group.device = cuda:0
buf19.group.iteration = (4194304, 1)
buf19.sizes = ([8, 128, 4096], [])
class buf19_loop_body:
    var_ranges = {z0: 8, z1: 128, z2: 4096}
    index0 = 524288*z0 + 4096*z1 + z2
    index1 = z1
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf10', get_index)
        get_index_1 = self.get_index('index1')
        load_1 = ops.load('buf13', get_index_1)
        sub = ops.sub(load, load_1)
        get_index_2 = self.get_index('index1')
        load_2 = ops.load('buf15', get_index_2)
        constant = ops.constant(32768, torch.float32)
        div = ops.div(load_2, constant)
        constant_1 = ops.constant(1e-05, torch.float32)
        add = ops.add(div, constant_1)
        rsqrt = ops.rsqrt(add)
        mul = ops.mul(sub, rsqrt)
        get_index_3 = self.get_index('index1')
        load_3 = ops.load('primals_69', get_index_3)
        mul_1 = ops.mul(mul, load_3)
        get_index_4 = self.get_index('index1')
        load_4 = ops.load('primals_70', get_index_4)
        add_1 = ops.add(mul_1, load_4)
        relu = ops.relu(add_1)
        get_index_5 = self.get_index('index0')
        store = ops.store('buf19', get_index_5, relu, None)
        return store


buf20: ExternKernelSchedulerNode(Convolution)
buf20.writes = [StarDep(name='buf20')]
buf20.unmet_dependencies = [StarDep(name='buf19')]
buf20.met_dependencies = [StarDep(name='primals_3')]
buf20.node.kernel = aten.convolution


buf21: SchedulerNode(ComputedBuffer)
buf21.writes = 
    [   MemoryDep(name='buf21', index=c0, size=(512, 8192)),
        MemoryDep(name='buf21', index=c0, size=(512,))]
buf21.unmet_dependencies = [   MemoryDep(name='buf20', index=1048576*c0 + 4096*c1 + 524288*(c2//4096) + ModularIndexing(c2, 1, 4096), size=(4, 128, 8192))]
buf21.met_dependencies = []
buf21.group.device = cuda:0
buf21.group.iteration = (512, 8192)
buf21.sizes = ([4, 128], [8192])
class buf21_loop_body:
    var_ranges = {z0: 4, z1: 128, z2: 8192}
    index0 = 1048576*z0 + 4096*z1 + 524288*(z2//4096) + ModularIndexing(z2, 1, 4096)
    index1 = 128*z0 + z1
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf20', get_index)
        get_index_1 = self.get_index('index1')
        reduction = ops.reduction('buf21', torch.float32, torch.float32, 'sum', get_index_1, load)
        return reduction


buf22_buf23_buf27: FusedSchedulerNode(NoneType)
buf22_buf23_buf27.writes = 
    [   MemoryDep(name='buf22', index=c0, size=(128, 4)),
        MemoryDep(name='buf22', index=c0, size=(128,)),
        MemoryDep(name='buf23', index=c0, size=(128,)),
        MemoryDep(name='buf27', index=c0, size=(128,))]
buf22_buf23_buf27.unmet_dependencies = [MemoryDep(name='buf21', index=c0 + 128*c1, size=(128, 4))]
buf22_buf23_buf27.met_dependencies = [MemoryDep(name='primals_72', index=c0, size=(128,))]
buf22_buf23_buf27.snodes = ['buf22', 'buf23', 'buf27']


buf24: SchedulerNode(ComputedBuffer)
buf24.writes = 
    [   MemoryDep(name='buf24', index=c0, size=(512, 8192)),
        MemoryDep(name='buf24', index=c0, size=(512,))]
buf24.unmet_dependencies = 
    [   MemoryDep(name='buf20', index=1048576*c0 + 4096*c1 + 524288*(c2//4096) + ModularIndexing(c2, 1, 4096), size=(4, 128, 8192)),
        MemoryDep(name='buf23', index=c1, size=(4, 128, 8192))]
buf24.met_dependencies = []
buf24.group.device = cuda:0
buf24.group.iteration = (512, 8192)
buf24.sizes = ([4, 128], [8192])
class buf24_loop_body:
    var_ranges = {z0: 4, z1: 128, z2: 8192}
    index0 = 1048576*z0 + 4096*z1 + 524288*(z2//4096) + ModularIndexing(z2, 1, 4096)
    index1 = z1
    index2 = 128*z0 + z1
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf20', get_index)
        get_index_1 = self.get_index('index1')
        load_1 = ops.load('buf23', get_index_1)
        sub = ops.sub(load, load_1)
        square = ops.square(sub)
        get_index_2 = self.get_index('index2')
        reduction = ops.reduction('buf24', torch.float32, torch.float32, 'sum', get_index_2, square)
        return reduction


buf25_buf26_buf28: FusedSchedulerNode(NoneType)
buf25_buf26_buf28.writes = 
    [   MemoryDep(name='buf25', index=c0, size=(128, 4)),
        MemoryDep(name='buf25', index=c0, size=(128,)),
        MemoryDep(name='buf26', index=c0, size=(128,)),
        MemoryDep(name='buf28', index=c0, size=(128,))]
buf25_buf26_buf28.unmet_dependencies = [MemoryDep(name='buf24', index=c0 + 128*c1, size=(128, 4))]
buf25_buf26_buf28.met_dependencies = [MemoryDep(name='primals_73', index=c0, size=(128,))]
buf25_buf26_buf28.snodes = ['buf25', 'buf26', 'buf28']


buf29: ExternKernelSchedulerNode(Convolution)
buf29.writes = [StarDep(name='buf29')]
buf29.unmet_dependencies = [StarDep(name='buf9')]
buf29.met_dependencies = [StarDep(name='primals_4')]
buf29.node.kernel = aten.convolution


buf30: SchedulerNode(ComputedBuffer)
buf30.writes = 
    [   MemoryDep(name='buf30', index=c0, size=(512, 8192)),
        MemoryDep(name='buf30', index=c0, size=(512,))]
buf30.unmet_dependencies = [   MemoryDep(name='buf29', index=1048576*c0 + 4096*c1 + 524288*(c2//4096) + ModularIndexing(c2, 1, 4096), size=(4, 128, 8192))]
buf30.met_dependencies = []
buf30.group.device = cuda:0
buf30.group.iteration = (512, 8192)
buf30.sizes = ([4, 128], [8192])
class buf30_loop_body:
    var_ranges = {z0: 4, z1: 128, z2: 8192}
    index0 = 1048576*z0 + 4096*z1 + 524288*(z2//4096) + ModularIndexing(z2, 1, 4096)
    index1 = 128*z0 + z1
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf29', get_index)
        get_index_1 = self.get_index('index1')
        reduction = ops.reduction('buf30', torch.float32, torch.float32, 'sum', get_index_1, load)
        return reduction


buf31_buf32_buf36: FusedSchedulerNode(NoneType)
buf31_buf32_buf36.writes = 
    [   MemoryDep(name='buf31', index=c0, size=(128, 4)),
        MemoryDep(name='buf31', index=c0, size=(128,)),
        MemoryDep(name='buf32', index=c0, size=(128,)),
        MemoryDep(name='buf36', index=c0, size=(128,))]
buf31_buf32_buf36.unmet_dependencies = [MemoryDep(name='buf30', index=c0 + 128*c1, size=(128, 4))]
buf31_buf32_buf36.met_dependencies = [MemoryDep(name='primals_77', index=c0, size=(128,))]
buf31_buf32_buf36.snodes = ['buf31', 'buf32', 'buf36']


buf33: SchedulerNode(ComputedBuffer)
buf33.writes = 
    [   MemoryDep(name='buf33', index=c0, size=(512, 8192)),
        MemoryDep(name='buf33', index=c0, size=(512,))]
buf33.unmet_dependencies = 
    [   MemoryDep(name='buf29', index=1048576*c0 + 4096*c1 + 524288*(c2//4096) + ModularIndexing(c2, 1, 4096), size=(4, 128, 8192)),
        MemoryDep(name='buf32', index=c1, size=(4, 128, 8192))]
buf33.met_dependencies = []
buf33.group.device = cuda:0
buf33.group.iteration = (512, 8192)
buf33.sizes = ([4, 128], [8192])
class buf33_loop_body:
    var_ranges = {z0: 4, z1: 128, z2: 8192}
    index0 = 1048576*z0 + 4096*z1 + 524288*(z2//4096) + ModularIndexing(z2, 1, 4096)
    index1 = z1
    index2 = 128*z0 + z1
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf29', get_index)
        get_index_1 = self.get_index('index1')
        load_1 = ops.load('buf32', get_index_1)
        sub = ops.sub(load, load_1)
        square = ops.square(sub)
        get_index_2 = self.get_index('index2')
        reduction = ops.reduction('buf33', torch.float32, torch.float32, 'sum', get_index_2, square)
        return reduction


buf34_buf35_buf37: FusedSchedulerNode(NoneType)
buf34_buf35_buf37.writes = 
    [   MemoryDep(name='buf34', index=c0, size=(128, 4)),
        MemoryDep(name='buf34', index=c0, size=(128,)),
        MemoryDep(name='buf35', index=c0, size=(128,)),
        MemoryDep(name='buf37', index=c0, size=(128,))]
buf34_buf35_buf37.unmet_dependencies = [MemoryDep(name='buf33', index=c0 + 128*c1, size=(128, 4))]
buf34_buf35_buf37.met_dependencies = [MemoryDep(name='primals_78', index=c0, size=(128,))]
buf34_buf35_buf37.snodes = ['buf34', 'buf35', 'buf37']


buf38_buf39: FusedSchedulerNode(NoneType)
buf38_buf39.writes = 
    [   MemoryDep(name='buf38', index=c0, size=(4194304,)),
        MemoryDep(name='buf39', index=c0, size=(4194304,))]
buf38_buf39.unmet_dependencies = 
    [   MemoryDep(name='buf20', index=c0, size=(4194304,)),
        MemoryDep(name='buf23', index=c1, size=(8, 128, 4096)),
        MemoryDep(name='buf25', index=c1, size=(8, 128, 4096)),
        MemoryDep(name='buf29', index=c0, size=(4194304,)),
        MemoryDep(name='buf32', index=c1, size=(8, 128, 4096)),
        MemoryDep(name='buf34', index=c1, size=(8, 128, 4096))]
buf38_buf39.met_dependencies = 
    [   MemoryDep(name='primals_74', index=c1, size=(8, 128, 4096)),
        MemoryDep(name='primals_75', index=c1, size=(8, 128, 4096)),
        MemoryDep(name='primals_79', index=c1, size=(8, 128, 4096)),
        MemoryDep(name='primals_80', index=c1, size=(8, 128, 4096))]
buf38_buf39.snodes = ['buf38', 'buf39']


buf40: ExternKernelSchedulerNode(Convolution)
buf40.writes = [StarDep(name='buf40')]
buf40.unmet_dependencies = [StarDep(name='buf39')]
buf40.met_dependencies = [StarDep(name='primals_5')]
buf40.node.kernel = aten.convolution


buf41_buf42_buf45_buf43_buf44_buf46: FusedSchedulerNode(NoneType)
buf41_buf42_buf45_buf43_buf44_buf46.writes = 
    [   MemoryDep(name='buf41', index=c0, size=(192, 8192)),
        MemoryDep(name='buf41', index=c0, size=(192,)),
        MemoryDep(name='buf42', index=c0, size=(192,)),
        MemoryDep(name='buf43', index=c0, size=(192, 8192)),
        MemoryDep(name='buf43', index=c0, size=(192,)),
        MemoryDep(name='buf44', index=c0, size=(192,)),
        MemoryDep(name='buf45', index=c0, size=(192,)),
        MemoryDep(name='buf46', index=c0, size=(192,))]
buf41_buf42_buf45_buf43_buf44_buf46.unmet_dependencies = 
    [   MemoryDep(name='buf40', index=1024*c0 + 196608*c1 + c2, size=(192, 8, 1024)),
        MemoryDep(name='buf42', index=c0, size=(192, 8192))]
buf41_buf42_buf45_buf43_buf44_buf46.met_dependencies = 
    [   MemoryDep(name='primals_82', index=c0, size=(192,)),
        MemoryDep(name='primals_83', index=c0, size=(192,))]
buf41_buf42_buf45_buf43_buf44_buf46.snodes = ['buf41', 'buf42', 'buf45', 'buf43', 'buf44', 'buf46']


buf47: SchedulerNode(ComputedBuffer)
buf47.writes = [MemoryDep(name='buf47', index=c0, size=(1572864,))]
buf47.unmet_dependencies = 
    [   MemoryDep(name='buf40', index=c0, size=(1572864,)),
        MemoryDep(name='buf42', index=c1, size=(8, 192, 1024)),
        MemoryDep(name='buf43', index=c1, size=(8, 192, 1024))]
buf47.met_dependencies = 
    [   MemoryDep(name='primals_84', index=c1, size=(8, 192, 1024)),
        MemoryDep(name='primals_85', index=c1, size=(8, 192, 1024))]
buf47.group.device = cuda:0
buf47.group.iteration = (1572864, 1)
buf47.sizes = ([8, 192, 1024], [])
class buf47_loop_body:
    var_ranges = {z0: 8, z1: 192, z2: 1024}
    index0 = 196608*z0 + 1024*z1 + z2
    index1 = z1
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf40', get_index)
        get_index_1 = self.get_index('index1')
        load_1 = ops.load('buf42', get_index_1)
        sub = ops.sub(load, load_1)
        get_index_2 = self.get_index('index1')
        load_2 = ops.load('buf43', get_index_2)
        constant = ops.constant(8192, torch.float32)
        div = ops.div(load_2, constant)
        constant_1 = ops.constant(1e-05, torch.float32)
        add = ops.add(div, constant_1)
        rsqrt = ops.rsqrt(add)
        mul = ops.mul(sub, rsqrt)
        get_index_3 = self.get_index('index1')
        load_3 = ops.load('primals_84', get_index_3)
        mul_1 = ops.mul(mul, load_3)
        get_index_4 = self.get_index('index1')
        load_4 = ops.load('primals_85', get_index_4)
        add_1 = ops.add(mul_1, load_4)
        relu = ops.relu(add_1)
        get_index_5 = self.get_index('index0')
        store = ops.store('buf47', get_index_5, relu, None)
        return store


buf48: ExternKernelSchedulerNode(Convolution)
buf48.writes = [StarDep(name='buf48')]
buf48.unmet_dependencies = [StarDep(name='buf47')]
buf48.met_dependencies = [StarDep(name='primals_6')]
buf48.node.kernel = aten.convolution


buf49_buf50_buf53_buf51_buf52_buf54: FusedSchedulerNode(NoneType)
buf49_buf50_buf53_buf51_buf52_buf54.writes = 
    [   MemoryDep(name='buf49', index=c0, size=(192, 8192)),
        MemoryDep(name='buf49', index=c0, size=(192,)),
        MemoryDep(name='buf50', index=c0, size=(192,)),
        MemoryDep(name='buf51', index=c0, size=(192, 8192)),
        MemoryDep(name='buf51', index=c0, size=(192,)),
        MemoryDep(name='buf52', index=c0, size=(192,)),
        MemoryDep(name='buf53', index=c0, size=(192,)),
        MemoryDep(name='buf54', index=c0, size=(192,))]
buf49_buf50_buf53_buf51_buf52_buf54.unmet_dependencies = 
    [   MemoryDep(name='buf48', index=1024*c0 + 196608*c1 + c2, size=(192, 8, 1024)),
        MemoryDep(name='buf50', index=c0, size=(192, 8192))]
buf49_buf50_buf53_buf51_buf52_buf54.met_dependencies = 
    [   MemoryDep(name='primals_87', index=c0, size=(192,)),
        MemoryDep(name='primals_88', index=c0, size=(192,))]
buf49_buf50_buf53_buf51_buf52_buf54.snodes = ['buf49', 'buf50', 'buf53', 'buf51', 'buf52', 'buf54']


buf55: ExternKernelSchedulerNode(Convolution)
buf55.writes = [StarDep(name='buf55')]
buf55.unmet_dependencies = [StarDep(name='buf39')]
buf55.met_dependencies = [StarDep(name='primals_7')]
buf55.node.kernel = aten.convolution


buf56_buf57_buf60_buf58_buf59_buf61: FusedSchedulerNode(NoneType)
buf56_buf57_buf60_buf58_buf59_buf61.writes = 
    [   MemoryDep(name='buf56', index=c0, size=(192, 8192)),
        MemoryDep(name='buf56', index=c0, size=(192,)),
        MemoryDep(name='buf57', index=c0, size=(192,)),
        MemoryDep(name='buf58', index=c0, size=(192, 8192)),
        MemoryDep(name='buf58', index=c0, size=(192,)),
        MemoryDep(name='buf59', index=c0, size=(192,)),
        MemoryDep(name='buf60', index=c0, size=(192,)),
        MemoryDep(name='buf61', index=c0, size=(192,))]
buf56_buf57_buf60_buf58_buf59_buf61.unmet_dependencies = 
    [   MemoryDep(name='buf55', index=1024*c0 + 196608*c1 + c2, size=(192, 8, 1024)),
        MemoryDep(name='buf57', index=c0, size=(192, 8192))]
buf56_buf57_buf60_buf58_buf59_buf61.met_dependencies = 
    [   MemoryDep(name='primals_92', index=c0, size=(192,)),
        MemoryDep(name='primals_93', index=c0, size=(192,))]
buf56_buf57_buf60_buf58_buf59_buf61.snodes = ['buf56', 'buf57', 'buf60', 'buf58', 'buf59', 'buf61']


buf62_buf63: FusedSchedulerNode(NoneType)
buf62_buf63.writes = 
    [   MemoryDep(name='buf62', index=c0, size=(1572864,)),
        MemoryDep(name='buf63', index=c0, size=(1572864,))]
buf62_buf63.unmet_dependencies = 
    [   MemoryDep(name='buf48', index=c0, size=(1572864,)),
        MemoryDep(name='buf50', index=c1, size=(8, 192, 1024)),
        MemoryDep(name='buf51', index=c1, size=(8, 192, 1024)),
        MemoryDep(name='buf55', index=c0, size=(1572864,)),
        MemoryDep(name='buf57', index=c1, size=(8, 192, 1024)),
        MemoryDep(name='buf58', index=c1, size=(8, 192, 1024))]
buf62_buf63.met_dependencies = 
    [   MemoryDep(name='primals_89', index=c1, size=(8, 192, 1024)),
        MemoryDep(name='primals_90', index=c1, size=(8, 192, 1024)),
        MemoryDep(name='primals_94', index=c1, size=(8, 192, 1024)),
        MemoryDep(name='primals_95', index=c1, size=(8, 192, 1024))]
buf62_buf63.snodes = ['buf62', 'buf63']


buf64: ExternKernelSchedulerNode(Convolution)
buf64.writes = [StarDep(name='buf64')]
buf64.unmet_dependencies = [StarDep(name='buf63')]
buf64.met_dependencies = [StarDep(name='primals_8')]
buf64.node.kernel = aten.convolution


buf65_buf66_buf69_buf67_buf68_buf70: FusedSchedulerNode(NoneType)
buf65_buf66_buf69_buf67_buf68_buf70.writes = 
    [   MemoryDep(name='buf65', index=c0, size=(192, 8192)),
        MemoryDep(name='buf65', index=c0, size=(192,)),
        MemoryDep(name='buf66', index=c0, size=(192,)),
        MemoryDep(name='buf67', index=c0, size=(192, 8192)),
        MemoryDep(name='buf67', index=c0, size=(192,)),
        MemoryDep(name='buf68', index=c0, size=(192,)),
        MemoryDep(name='buf69', index=c0, size=(192,)),
        MemoryDep(name='buf70', index=c0, size=(192,))]
buf65_buf66_buf69_buf67_buf68_buf70.unmet_dependencies = 
    [   MemoryDep(name='buf64', index=1024*c0 + 196608*c1 + c2, size=(192, 8, 1024)),
        MemoryDep(name='buf66', index=c0, size=(192, 8192))]
buf65_buf66_buf69_buf67_buf68_buf70.met_dependencies = 
    [   MemoryDep(name='primals_97', index=c0, size=(192,)),
        MemoryDep(name='primals_98', index=c0, size=(192,))]
buf65_buf66_buf69_buf67_buf68_buf70.snodes = ['buf65', 'buf66', 'buf69', 'buf67', 'buf68', 'buf70']


buf71: SchedulerNode(ComputedBuffer)
buf71.writes = [MemoryDep(name='buf71', index=c0, size=(1572864,))]
buf71.unmet_dependencies = 
    [   MemoryDep(name='buf64', index=c0, size=(1572864,)),
        MemoryDep(name='buf66', index=c1, size=(8, 192, 1024)),
        MemoryDep(name='buf67', index=c1, size=(8, 192, 1024))]
buf71.met_dependencies = 
    [   MemoryDep(name='primals_100', index=c1, size=(8, 192, 1024)),
        MemoryDep(name='primals_99', index=c1, size=(8, 192, 1024))]
buf71.group.device = cuda:0
buf71.group.iteration = (1572864, 1)
buf71.sizes = ([8, 192, 1024], [])
class buf71_loop_body:
    var_ranges = {z0: 8, z1: 192, z2: 1024}
    index0 = 196608*z0 + 1024*z1 + z2
    index1 = z1
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf64', get_index)
        get_index_1 = self.get_index('index1')
        load_1 = ops.load('buf66', get_index_1)
        sub = ops.sub(load, load_1)
        get_index_2 = self.get_index('index1')
        load_2 = ops.load('buf67', get_index_2)
        constant = ops.constant(8192, torch.float32)
        div = ops.div(load_2, constant)
        constant_1 = ops.constant(1e-05, torch.float32)
        add = ops.add(div, constant_1)
        rsqrt = ops.rsqrt(add)
        mul = ops.mul(sub, rsqrt)
        get_index_3 = self.get_index('index1')
        load_3 = ops.load('primals_99', get_index_3)
        mul_1 = ops.mul(mul, load_3)
        get_index_4 = self.get_index('index1')
        load_4 = ops.load('primals_100', get_index_4)
        add_1 = ops.add(mul_1, load_4)
        relu = ops.relu(add_1)
        get_index_5 = self.get_index('index0')
        store = ops.store('buf71', get_index_5, relu, None)
        return store


buf72: ExternKernelSchedulerNode(Convolution)
buf72.writes = [StarDep(name='buf72')]
buf72.unmet_dependencies = [StarDep(name='buf71')]
buf72.met_dependencies = [StarDep(name='primals_9')]
buf72.node.kernel = aten.convolution


buf73_buf74_buf77_buf75_buf76_buf78: FusedSchedulerNode(NoneType)
buf73_buf74_buf77_buf75_buf76_buf78.writes = 
    [   MemoryDep(name='buf73', index=c0, size=(192, 8192)),
        MemoryDep(name='buf73', index=c0, size=(192,)),
        MemoryDep(name='buf74', index=c0, size=(192,)),
        MemoryDep(name='buf75', index=c0, size=(192, 8192)),
        MemoryDep(name='buf75', index=c0, size=(192,)),
        MemoryDep(name='buf76', index=c0, size=(192,)),
        MemoryDep(name='buf77', index=c0, size=(192,)),
        MemoryDep(name='buf78', index=c0, size=(192,))]
buf73_buf74_buf77_buf75_buf76_buf78.unmet_dependencies = 
    [   MemoryDep(name='buf72', index=1024*c0 + 196608*c1 + c2, size=(192, 8, 1024)),
        MemoryDep(name='buf74', index=c0, size=(192, 8192))]
buf73_buf74_buf77_buf75_buf76_buf78.met_dependencies = 
    [   MemoryDep(name='primals_102', index=c0, size=(192,)),
        MemoryDep(name='primals_103', index=c0, size=(192,))]
buf73_buf74_buf77_buf75_buf76_buf78.snodes = ['buf73', 'buf74', 'buf77', 'buf75', 'buf76', 'buf78']


buf79: SchedulerNode(ComputedBuffer)
buf79.writes = [MemoryDep(name='buf79', index=c0, size=(1572864,))]
buf79.unmet_dependencies = 
    [   MemoryDep(name='buf63', index=c0, size=(1572864,)),
        MemoryDep(name='buf72', index=c0, size=(1572864,)),
        MemoryDep(name='buf74', index=c1, size=(8, 192, 1024)),
        MemoryDep(name='buf75', index=c1, size=(8, 192, 1024))]
buf79.met_dependencies = 
    [   MemoryDep(name='primals_104', index=c1, size=(8, 192, 1024)),
        MemoryDep(name='primals_105', index=c1, size=(8, 192, 1024))]
buf79.group.device = cuda:0
buf79.group.iteration = (1572864, 1)
buf79.sizes = ([8, 192, 1024], [])
class buf79_loop_body:
    var_ranges = {z0: 8, z1: 192, z2: 1024}
    index0 = 196608*z0 + 1024*z1 + z2
    index1 = z1
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf72', get_index)
        get_index_1 = self.get_index('index1')
        load_1 = ops.load('buf74', get_index_1)
        sub = ops.sub(load, load_1)
        get_index_2 = self.get_index('index1')
        load_2 = ops.load('buf75', get_index_2)
        constant = ops.constant(8192, torch.float32)
        div = ops.div(load_2, constant)
        constant_1 = ops.constant(1e-05, torch.float32)
        add = ops.add(div, constant_1)
        rsqrt = ops.rsqrt(add)
        mul = ops.mul(sub, rsqrt)
        get_index_3 = self.get_index('index1')
        load_3 = ops.load('primals_104', get_index_3)
        mul_1 = ops.mul(mul, load_3)
        get_index_4 = self.get_index('index1')
        load_4 = ops.load('primals_105', get_index_4)
        add_1 = ops.add(mul_1, load_4)
        get_index_5 = self.get_index('index0')
        load_5 = ops.load('buf63', get_index_5)
        add_2 = ops.add(add_1, load_5)
        relu = ops.relu(add_2)
        get_index_6 = self.get_index('index0')
        store = ops.store('buf79', get_index_6, relu, None)
        return store


buf80: ExternKernelSchedulerNode(Convolution)
buf80.writes = [StarDep(name='buf80')]
buf80.unmet_dependencies = [StarDep(name='buf79')]
buf80.met_dependencies = [StarDep(name='primals_10')]
buf80.node.kernel = aten.convolution


buf81_buf82_buf85_buf83_buf84_buf86: FusedSchedulerNode(NoneType)
buf81_buf82_buf85_buf83_buf84_buf86.writes = 
    [   MemoryDep(name='buf81', index=c0, size=(160, 8192)),
        MemoryDep(name='buf81', index=c0, size=(160,)),
        MemoryDep(name='buf82', index=c0, size=(160,)),
        MemoryDep(name='buf83', index=c0, size=(160, 8192)),
        MemoryDep(name='buf83', index=c0, size=(160,)),
        MemoryDep(name='buf84', index=c0, size=(160,)),
        MemoryDep(name='buf85', index=c0, size=(160,)),
        MemoryDep(name='buf86', index=c0, size=(160,))]
buf81_buf82_buf85_buf83_buf84_buf86.unmet_dependencies = 
    [   MemoryDep(name='buf80', index=1024*c0 + 163840*c1 + c2, size=(160, 8, 1024)),
        MemoryDep(name='buf82', index=c0, size=(160, 8192))]
buf81_buf82_buf85_buf83_buf84_buf86.met_dependencies = 
    [   MemoryDep(name='primals_107', index=c0, size=(160,)),
        MemoryDep(name='primals_108', index=c0, size=(160,))]
buf81_buf82_buf85_buf83_buf84_buf86.snodes = ['buf81', 'buf82', 'buf85', 'buf83', 'buf84', 'buf86']


buf87: SchedulerNode(ComputedBuffer)
buf87.writes = [MemoryDep(name='buf87', index=c0, size=(1310720,))]
buf87.unmet_dependencies = 
    [   MemoryDep(name='buf80', index=c0, size=(1310720,)),
        MemoryDep(name='buf82', index=c1, size=(8, 160, 1024)),
        MemoryDep(name='buf83', index=c1, size=(8, 160, 1024))]
buf87.met_dependencies = 
    [   MemoryDep(name='primals_109', index=c1, size=(8, 160, 1024)),
        MemoryDep(name='primals_110', index=c1, size=(8, 160, 1024))]
buf87.group.device = cuda:0
buf87.group.iteration = (1310720, 1)
buf87.sizes = ([8, 160, 1024], [])
class buf87_loop_body:
    var_ranges = {z0: 8, z1: 160, z2: 1024}
    index0 = 163840*z0 + 1024*z1 + z2
    index1 = z1
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf80', get_index)
        get_index_1 = self.get_index('index1')
        load_1 = ops.load('buf82', get_index_1)
        sub = ops.sub(load, load_1)
        get_index_2 = self.get_index('index1')
        load_2 = ops.load('buf83', get_index_2)
        constant = ops.constant(8192, torch.float32)
        div = ops.div(load_2, constant)
        constant_1 = ops.constant(1e-05, torch.float32)
        add = ops.add(div, constant_1)
        rsqrt = ops.rsqrt(add)
        mul = ops.mul(sub, rsqrt)
        get_index_3 = self.get_index('index1')
        load_3 = ops.load('primals_109', get_index_3)
        mul_1 = ops.mul(mul, load_3)
        get_index_4 = self.get_index('index1')
        load_4 = ops.load('primals_110', get_index_4)
        add_1 = ops.add(mul_1, load_4)
        relu = ops.relu(add_1)
        get_index_5 = self.get_index('index0')
        store = ops.store('buf87', get_index_5, relu, None)
        return store


buf88: ExternKernelSchedulerNode(Convolution)
buf88.writes = [StarDep(name='buf88')]
buf88.unmet_dependencies = [StarDep(name='buf87')]
buf88.met_dependencies = [StarDep(name='primals_11')]
buf88.node.kernel = aten.convolution


buf89_buf90_buf93_buf91_buf92_buf94: FusedSchedulerNode(NoneType)
buf89_buf90_buf93_buf91_buf92_buf94.writes = 
    [   MemoryDep(name='buf89', index=c0, size=(160, 2048)),
        MemoryDep(name='buf89', index=c0, size=(160,)),
        MemoryDep(name='buf90', index=c0, size=(160,)),
        MemoryDep(name='buf91', index=c0, size=(160, 2048)),
        MemoryDep(name='buf91', index=c0, size=(160,)),
        MemoryDep(name='buf92', index=c0, size=(160,)),
        MemoryDep(name='buf93', index=c0, size=(160,)),
        MemoryDep(name='buf94', index=c0, size=(160,))]
buf89_buf90_buf93_buf91_buf92_buf94.unmet_dependencies = 
    [   MemoryDep(name='buf88', index=256*c0 + 40960*c1 + c2, size=(160, 8, 256)),
        MemoryDep(name='buf90', index=c0, size=(160, 2048))]
buf89_buf90_buf93_buf91_buf92_buf94.met_dependencies = 
    [   MemoryDep(name='primals_112', index=c0, size=(160,)),
        MemoryDep(name='primals_113', index=c0, size=(160,))]
buf89_buf90_buf93_buf91_buf92_buf94.snodes = ['buf89', 'buf90', 'buf93', 'buf91', 'buf92', 'buf94']


buf95: SchedulerNode(ComputedBuffer)
buf95.writes = [MemoryDep(name='buf95', index=c0, size=(327680,))]
buf95.unmet_dependencies = 
    [   MemoryDep(name='buf88', index=c0, size=(327680,)),
        MemoryDep(name='buf90', index=c1, size=(8, 160, 256)),
        MemoryDep(name='buf91', index=c1, size=(8, 160, 256))]
buf95.met_dependencies = 
    [   MemoryDep(name='primals_114', index=c1, size=(8, 160, 256)),
        MemoryDep(name='primals_115', index=c1, size=(8, 160, 256))]
buf95.group.device = cuda:0
buf95.group.iteration = (327680, 1)
buf95.sizes = ([8, 160, 256], [])
class buf95_loop_body:
    var_ranges = {z0: 8, z1: 160, z2: 256}
    index0 = 40960*z0 + 256*z1 + z2
    index1 = z1
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf88', get_index)
        get_index_1 = self.get_index('index1')
        load_1 = ops.load('buf90', get_index_1)
        sub = ops.sub(load, load_1)
        get_index_2 = self.get_index('index1')
        load_2 = ops.load('buf91', get_index_2)
        constant = ops.constant(2048, torch.float32)
        div = ops.div(load_2, constant)
        constant_1 = ops.constant(1e-05, torch.float32)
        add = ops.add(div, constant_1)
        rsqrt = ops.rsqrt(add)
        mul = ops.mul(sub, rsqrt)
        get_index_3 = self.get_index('index1')
        load_3 = ops.load('primals_114', get_index_3)
        mul_1 = ops.mul(mul, load_3)
        get_index_4 = self.get_index('index1')
        load_4 = ops.load('primals_115', get_index_4)
        add_1 = ops.add(mul_1, load_4)
        relu = ops.relu(add_1)
        get_index_5 = self.get_index('index0')
        store = ops.store('buf95', get_index_5, relu, None)
        return store


buf96: ExternKernelSchedulerNode(Convolution)
buf96.writes = [StarDep(name='buf96')]
buf96.unmet_dependencies = [StarDep(name='buf95')]
buf96.met_dependencies = [StarDep(name='primals_12')]
buf96.node.kernel = aten.convolution


buf97_buf98_buf101_buf99_buf100_buf102: FusedSchedulerNode(NoneType)
buf97_buf98_buf101_buf99_buf100_buf102.writes = 
    [   MemoryDep(name='buf100', index=c0, size=(640,)),
        MemoryDep(name='buf101', index=c0, size=(640,)),
        MemoryDep(name='buf102', index=c0, size=(640,)),
        MemoryDep(name='buf97', index=c0, size=(640, 2048)),
        MemoryDep(name='buf97', index=c0, size=(640,)),
        MemoryDep(name='buf98', index=c0, size=(640,)),
        MemoryDep(name='buf99', index=c0, size=(640, 2048)),
        MemoryDep(name='buf99', index=c0, size=(640,))]
buf97_buf98_buf101_buf99_buf100_buf102.unmet_dependencies = 
    [   MemoryDep(name='buf96', index=256*c0 + 163840*c1 + c2, size=(640, 8, 256)),
        MemoryDep(name='buf98', index=c0, size=(640, 2048))]
buf97_buf98_buf101_buf99_buf100_buf102.met_dependencies = 
    [   MemoryDep(name='primals_117', index=c0, size=(640,)),
        MemoryDep(name='primals_118', index=c0, size=(640,))]
buf97_buf98_buf101_buf99_buf100_buf102.snodes = ['buf97', 'buf98', 'buf101', 'buf99', 'buf100', 'buf102']


buf103: ExternKernelSchedulerNode(Convolution)
buf103.writes = [StarDep(name='buf103')]
buf103.unmet_dependencies = [StarDep(name='buf79')]
buf103.met_dependencies = [StarDep(name='primals_13')]
buf103.node.kernel = aten.convolution


buf104_buf105_buf108_buf106_buf107_buf109: FusedSchedulerNode(NoneType)
buf104_buf105_buf108_buf106_buf107_buf109.writes = 
    [   MemoryDep(name='buf104', index=c0, size=(640, 2048)),
        MemoryDep(name='buf104', index=c0, size=(640,)),
        MemoryDep(name='buf105', index=c0, size=(640,)),
        MemoryDep(name='buf106', index=c0, size=(640, 2048)),
        MemoryDep(name='buf106', index=c0, size=(640,)),
        MemoryDep(name='buf107', index=c0, size=(640,)),
        MemoryDep(name='buf108', index=c0, size=(640,)),
        MemoryDep(name='buf109', index=c0, size=(640,))]
buf104_buf105_buf108_buf106_buf107_buf109.unmet_dependencies = 
    [   MemoryDep(name='buf103', index=256*c0 + 163840*c1 + c2, size=(640, 8, 256)),
        MemoryDep(name='buf105', index=c0, size=(640, 2048))]
buf104_buf105_buf108_buf106_buf107_buf109.met_dependencies = 
    [   MemoryDep(name='primals_122', index=c0, size=(640,)),
        MemoryDep(name='primals_123', index=c0, size=(640,))]
buf104_buf105_buf108_buf106_buf107_buf109.snodes = ['buf104', 'buf105', 'buf108', 'buf106', 'buf107', 'buf109']


buf110_buf111: FusedSchedulerNode(NoneType)
buf110_buf111.writes = 
    [   MemoryDep(name='buf110', index=c0, size=(1310720,)),
        MemoryDep(name='buf111', index=c0, size=(1310720,))]
buf110_buf111.unmet_dependencies = 
    [   MemoryDep(name='buf103', index=c0, size=(1310720,)),
        MemoryDep(name='buf105', index=c1, size=(8, 640, 256)),
        MemoryDep(name='buf106', index=c1, size=(8, 640, 256)),
        MemoryDep(name='buf96', index=c0, size=(1310720,)),
        MemoryDep(name='buf98', index=c1, size=(8, 640, 256)),
        MemoryDep(name='buf99', index=c1, size=(8, 640, 256))]
buf110_buf111.met_dependencies = 
    [   MemoryDep(name='primals_119', index=c1, size=(8, 640, 256)),
        MemoryDep(name='primals_120', index=c1, size=(8, 640, 256)),
        MemoryDep(name='primals_124', index=c1, size=(8, 640, 256)),
        MemoryDep(name='primals_125', index=c1, size=(8, 640, 256))]
buf110_buf111.snodes = ['buf110', 'buf111']


buf112: ExternKernelSchedulerNode(Convolution)
buf112.writes = [StarDep(name='buf112')]
buf112.unmet_dependencies = [StarDep(name='buf111')]
buf112.met_dependencies = [StarDep(name='primals_14')]
buf112.node.kernel = aten.convolution


buf113_buf114_buf117_buf115_buf116_buf118: FusedSchedulerNode(NoneType)
buf113_buf114_buf117_buf115_buf116_buf118.writes = 
    [   MemoryDep(name='buf113', index=c0, size=(160, 2048)),
        MemoryDep(name='buf113', index=c0, size=(160,)),
        MemoryDep(name='buf114', index=c0, size=(160,)),
        MemoryDep(name='buf115', index=c0, size=(160, 2048)),
        MemoryDep(name='buf115', index=c0, size=(160,)),
        MemoryDep(name='buf116', index=c0, size=(160,)),
        MemoryDep(name='buf117', index=c0, size=(160,)),
        MemoryDep(name='buf118', index=c0, size=(160,))]
buf113_buf114_buf117_buf115_buf116_buf118.unmet_dependencies = 
    [   MemoryDep(name='buf112', index=256*c0 + 40960*c1 + c2, size=(160, 8, 256)),
        MemoryDep(name='buf114', index=c0, size=(160, 2048))]
buf113_buf114_buf117_buf115_buf116_buf118.met_dependencies = 
    [   MemoryDep(name='primals_127', index=c0, size=(160,)),
        MemoryDep(name='primals_128', index=c0, size=(160,))]
buf113_buf114_buf117_buf115_buf116_buf118.snodes = ['buf113', 'buf114', 'buf117', 'buf115', 'buf116', 'buf118']


buf119: SchedulerNode(ComputedBuffer)
buf119.writes = [MemoryDep(name='buf119', index=c0, size=(327680,))]
buf119.unmet_dependencies = 
    [   MemoryDep(name='buf112', index=c0, size=(327680,)),
        MemoryDep(name='buf114', index=c1, size=(8, 160, 256)),
        MemoryDep(name='buf115', index=c1, size=(8, 160, 256))]
buf119.met_dependencies = 
    [   MemoryDep(name='primals_129', index=c1, size=(8, 160, 256)),
        MemoryDep(name='primals_130', index=c1, size=(8, 160, 256))]
buf119.group.device = cuda:0
buf119.group.iteration = (327680, 1)
buf119.sizes = ([8, 160, 256], [])
class buf119_loop_body:
    var_ranges = {z0: 8, z1: 160, z2: 256}
    index0 = 40960*z0 + 256*z1 + z2
    index1 = z1
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf112', get_index)
        get_index_1 = self.get_index('index1')
        load_1 = ops.load('buf114', get_index_1)
        sub = ops.sub(load, load_1)
        get_index_2 = self.get_index('index1')
        load_2 = ops.load('buf115', get_index_2)
        constant = ops.constant(2048, torch.float32)
        div = ops.div(load_2, constant)
        constant_1 = ops.constant(1e-05, torch.float32)
        add = ops.add(div, constant_1)
        rsqrt = ops.rsqrt(add)
        mul = ops.mul(sub, rsqrt)
        get_index_3 = self.get_index('index1')
        load_3 = ops.load('primals_129', get_index_3)
        mul_1 = ops.mul(mul, load_3)
        get_index_4 = self.get_index('index1')
        load_4 = ops.load('primals_130', get_index_4)
        add_1 = ops.add(mul_1, load_4)
        relu = ops.relu(add_1)
        get_index_5 = self.get_index('index0')
        store = ops.store('buf119', get_index_5, relu, None)
        return store


buf120: ExternKernelSchedulerNode(Convolution)
buf120.writes = [StarDep(name='buf120')]
buf120.unmet_dependencies = [StarDep(name='buf119')]
buf120.met_dependencies = [StarDep(name='primals_15')]
buf120.node.kernel = aten.convolution


buf121_buf122_buf125_buf123_buf124_buf126: FusedSchedulerNode(NoneType)
buf121_buf122_buf125_buf123_buf124_buf126.writes = 
    [   MemoryDep(name='buf121', index=c0, size=(160, 2048)),
        MemoryDep(name='buf121', index=c0, size=(160,)),
        MemoryDep(name='buf122', index=c0, size=(160,)),
        MemoryDep(name='buf123', index=c0, size=(160, 2048)),
        MemoryDep(name='buf123', index=c0, size=(160,)),
        MemoryDep(name='buf124', index=c0, size=(160,)),
        MemoryDep(name='buf125', index=c0, size=(160,)),
        MemoryDep(name='buf126', index=c0, size=(160,))]
buf121_buf122_buf125_buf123_buf124_buf126.unmet_dependencies = 
    [   MemoryDep(name='buf120', index=256*c0 + 40960*c1 + c2, size=(160, 8, 256)),
        MemoryDep(name='buf122', index=c0, size=(160, 2048))]
buf121_buf122_buf125_buf123_buf124_buf126.met_dependencies = 
    [   MemoryDep(name='primals_132', index=c0, size=(160,)),
        MemoryDep(name='primals_133', index=c0, size=(160,))]
buf121_buf122_buf125_buf123_buf124_buf126.snodes = ['buf121', 'buf122', 'buf125', 'buf123', 'buf124', 'buf126']


buf127: SchedulerNode(ComputedBuffer)
buf127.writes = [MemoryDep(name='buf127', index=c0, size=(327680,))]
buf127.unmet_dependencies = 
    [   MemoryDep(name='buf120', index=c0, size=(327680,)),
        MemoryDep(name='buf122', index=c1, size=(8, 160, 256)),
        MemoryDep(name='buf123', index=c1, size=(8, 160, 256))]
buf127.met_dependencies = 
    [   MemoryDep(name='primals_134', index=c1, size=(8, 160, 256)),
        MemoryDep(name='primals_135', index=c1, size=(8, 160, 256))]
buf127.group.device = cuda:0
buf127.group.iteration = (327680, 1)
buf127.sizes = ([8, 160, 256], [])
class buf127_loop_body:
    var_ranges = {z0: 8, z1: 160, z2: 256}
    index0 = 40960*z0 + 256*z1 + z2
    index1 = z1
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf120', get_index)
        get_index_1 = self.get_index('index1')
        load_1 = ops.load('buf122', get_index_1)
        sub = ops.sub(load, load_1)
        get_index_2 = self.get_index('index1')
        load_2 = ops.load('buf123', get_index_2)
        constant = ops.constant(2048, torch.float32)
        div = ops.div(load_2, constant)
        constant_1 = ops.constant(1e-05, torch.float32)
        add = ops.add(div, constant_1)
        rsqrt = ops.rsqrt(add)
        mul = ops.mul(sub, rsqrt)
        get_index_3 = self.get_index('index1')
        load_3 = ops.load('primals_134', get_index_3)
        mul_1 = ops.mul(mul, load_3)
        get_index_4 = self.get_index('index1')
        load_4 = ops.load('primals_135', get_index_4)
        add_1 = ops.add(mul_1, load_4)
        relu = ops.relu(add_1)
        get_index_5 = self.get_index('index0')
        store = ops.store('buf127', get_index_5, relu, None)
        return store


buf128: ExternKernelSchedulerNode(Convolution)
buf128.writes = [StarDep(name='buf128')]
buf128.unmet_dependencies = [StarDep(name='buf127')]
buf128.met_dependencies = [StarDep(name='primals_16')]
buf128.node.kernel = aten.convolution


buf129_buf130_buf133_buf131_buf132_buf134: FusedSchedulerNode(NoneType)
buf129_buf130_buf133_buf131_buf132_buf134.writes = 
    [   MemoryDep(name='buf129', index=c0, size=(640, 2048)),
        MemoryDep(name='buf129', index=c0, size=(640,)),
        MemoryDep(name='buf130', index=c0, size=(640,)),
        MemoryDep(name='buf131', index=c0, size=(640, 2048)),
        MemoryDep(name='buf131', index=c0, size=(640,)),
        MemoryDep(name='buf132', index=c0, size=(640,)),
        MemoryDep(name='buf133', index=c0, size=(640,)),
        MemoryDep(name='buf134', index=c0, size=(640,))]
buf129_buf130_buf133_buf131_buf132_buf134.unmet_dependencies = 
    [   MemoryDep(name='buf128', index=256*c0 + 163840*c1 + c2, size=(640, 8, 256)),
        MemoryDep(name='buf130', index=c0, size=(640, 2048))]
buf129_buf130_buf133_buf131_buf132_buf134.met_dependencies = 
    [   MemoryDep(name='primals_137', index=c0, size=(640,)),
        MemoryDep(name='primals_138', index=c0, size=(640,))]
buf129_buf130_buf133_buf131_buf132_buf134.snodes = ['buf129', 'buf130', 'buf133', 'buf131', 'buf132', 'buf134']


buf135: SchedulerNode(ComputedBuffer)
buf135.writes = [MemoryDep(name='buf135', index=c0, size=(1310720,))]
buf135.unmet_dependencies = 
    [   MemoryDep(name='buf111', index=c0, size=(1310720,)),
        MemoryDep(name='buf128', index=c0, size=(1310720,)),
        MemoryDep(name='buf130', index=c1, size=(8, 640, 256)),
        MemoryDep(name='buf131', index=c1, size=(8, 640, 256))]
buf135.met_dependencies = 
    [   MemoryDep(name='primals_139', index=c1, size=(8, 640, 256)),
        MemoryDep(name='primals_140', index=c1, size=(8, 640, 256))]
buf135.group.device = cuda:0
buf135.group.iteration = (1310720, 1)
buf135.sizes = ([8, 640, 256], [])
class buf135_loop_body:
    var_ranges = {z0: 8, z1: 640, z2: 256}
    index0 = 163840*z0 + 256*z1 + z2
    index1 = z1
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf128', get_index)
        get_index_1 = self.get_index('index1')
        load_1 = ops.load('buf130', get_index_1)
        sub = ops.sub(load, load_1)
        get_index_2 = self.get_index('index1')
        load_2 = ops.load('buf131', get_index_2)
        constant = ops.constant(2048, torch.float32)
        div = ops.div(load_2, constant)
        constant_1 = ops.constant(1e-05, torch.float32)
        add = ops.add(div, constant_1)
        rsqrt = ops.rsqrt(add)
        mul = ops.mul(sub, rsqrt)
        get_index_3 = self.get_index('index1')
        load_3 = ops.load('primals_139', get_index_3)
        mul_1 = ops.mul(mul, load_3)
        get_index_4 = self.get_index('index1')
        load_4 = ops.load('primals_140', get_index_4)
        add_1 = ops.add(mul_1, load_4)
        get_index_5 = self.get_index('index0')
        load_5 = ops.load('buf111', get_index_5)
        add_2 = ops.add(add_1, load_5)
        relu = ops.relu(add_2)
        get_index_6 = self.get_index('index0')
        store = ops.store('buf135', get_index_6, relu, None)
        return store


buf136: ExternKernelSchedulerNode(Convolution)
buf136.writes = [StarDep(name='buf136')]
buf136.unmet_dependencies = [StarDep(name='buf135')]
buf136.met_dependencies = [StarDep(name='primals_17')]
buf136.node.kernel = aten.convolution


buf137_buf138_buf141_buf139_buf140_buf142: FusedSchedulerNode(NoneType)
buf137_buf138_buf141_buf139_buf140_buf142.writes = 
    [   MemoryDep(name='buf137', index=c0, size=(160, 2048)),
        MemoryDep(name='buf137', index=c0, size=(160,)),
        MemoryDep(name='buf138', index=c0, size=(160,)),
        MemoryDep(name='buf139', index=c0, size=(160, 2048)),
        MemoryDep(name='buf139', index=c0, size=(160,)),
        MemoryDep(name='buf140', index=c0, size=(160,)),
        MemoryDep(name='buf141', index=c0, size=(160,)),
        MemoryDep(name='buf142', index=c0, size=(160,))]
buf137_buf138_buf141_buf139_buf140_buf142.unmet_dependencies = 
    [   MemoryDep(name='buf136', index=256*c0 + 40960*c1 + c2, size=(160, 8, 256)),
        MemoryDep(name='buf138', index=c0, size=(160, 2048))]
buf137_buf138_buf141_buf139_buf140_buf142.met_dependencies = 
    [   MemoryDep(name='primals_142', index=c0, size=(160,)),
        MemoryDep(name='primals_143', index=c0, size=(160,))]
buf137_buf138_buf141_buf139_buf140_buf142.snodes = ['buf137', 'buf138', 'buf141', 'buf139', 'buf140', 'buf142']


buf143: SchedulerNode(ComputedBuffer)
buf143.writes = [MemoryDep(name='buf143', index=c0, size=(327680,))]
buf143.unmet_dependencies = 
    [   MemoryDep(name='buf136', index=c0, size=(327680,)),
        MemoryDep(name='buf138', index=c1, size=(8, 160, 256)),
        MemoryDep(name='buf139', index=c1, size=(8, 160, 256))]
buf143.met_dependencies = 
    [   MemoryDep(name='primals_144', index=c1, size=(8, 160, 256)),
        MemoryDep(name='primals_145', index=c1, size=(8, 160, 256))]
buf143.group.device = cuda:0
buf143.group.iteration = (327680, 1)
buf143.sizes = ([8, 160, 256], [])
class buf143_loop_body:
    var_ranges = {z0: 8, z1: 160, z2: 256}
    index0 = 40960*z0 + 256*z1 + z2
    index1 = z1
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf136', get_index)
        get_index_1 = self.get_index('index1')
        load_1 = ops.load('buf138', get_index_1)
        sub = ops.sub(load, load_1)
        get_index_2 = self.get_index('index1')
        load_2 = ops.load('buf139', get_index_2)
        constant = ops.constant(2048, torch.float32)
        div = ops.div(load_2, constant)
        constant_1 = ops.constant(1e-05, torch.float32)
        add = ops.add(div, constant_1)
        rsqrt = ops.rsqrt(add)
        mul = ops.mul(sub, rsqrt)
        get_index_3 = self.get_index('index1')
        load_3 = ops.load('primals_144', get_index_3)
        mul_1 = ops.mul(mul, load_3)
        get_index_4 = self.get_index('index1')
        load_4 = ops.load('primals_145', get_index_4)
        add_1 = ops.add(mul_1, load_4)
        relu = ops.relu(add_1)
        get_index_5 = self.get_index('index0')
        store = ops.store('buf143', get_index_5, relu, None)
        return store


buf144: ExternKernelSchedulerNode(Convolution)
buf144.writes = [StarDep(name='buf144')]
buf144.unmet_dependencies = [StarDep(name='buf143')]
buf144.met_dependencies = [StarDep(name='primals_18')]
buf144.node.kernel = aten.convolution


buf145_buf146_buf149_buf147_buf148_buf150: FusedSchedulerNode(NoneType)
buf145_buf146_buf149_buf147_buf148_buf150.writes = 
    [   MemoryDep(name='buf145', index=c0, size=(160, 2048)),
        MemoryDep(name='buf145', index=c0, size=(160,)),
        MemoryDep(name='buf146', index=c0, size=(160,)),
        MemoryDep(name='buf147', index=c0, size=(160, 2048)),
        MemoryDep(name='buf147', index=c0, size=(160,)),
        MemoryDep(name='buf148', index=c0, size=(160,)),
        MemoryDep(name='buf149', index=c0, size=(160,)),
        MemoryDep(name='buf150', index=c0, size=(160,))]
buf145_buf146_buf149_buf147_buf148_buf150.unmet_dependencies = 
    [   MemoryDep(name='buf144', index=256*c0 + 40960*c1 + c2, size=(160, 8, 256)),
        MemoryDep(name='buf146', index=c0, size=(160, 2048))]
buf145_buf146_buf149_buf147_buf148_buf150.met_dependencies = 
    [   MemoryDep(name='primals_147', index=c0, size=(160,)),
        MemoryDep(name='primals_148', index=c0, size=(160,))]
buf145_buf146_buf149_buf147_buf148_buf150.snodes = ['buf145', 'buf146', 'buf149', 'buf147', 'buf148', 'buf150']


buf151: SchedulerNode(ComputedBuffer)
buf151.writes = [MemoryDep(name='buf151', index=c0, size=(327680,))]
buf151.unmet_dependencies = 
    [   MemoryDep(name='buf144', index=c0, size=(327680,)),
        MemoryDep(name='buf146', index=c1, size=(8, 160, 256)),
        MemoryDep(name='buf147', index=c1, size=(8, 160, 256))]
buf151.met_dependencies = 
    [   MemoryDep(name='primals_149', index=c1, size=(8, 160, 256)),
        MemoryDep(name='primals_150', index=c1, size=(8, 160, 256))]
buf151.group.device = cuda:0
buf151.group.iteration = (327680, 1)
buf151.sizes = ([8, 160, 256], [])
class buf151_loop_body:
    var_ranges = {z0: 8, z1: 160, z2: 256}
    index0 = 40960*z0 + 256*z1 + z2
    index1 = z1
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf144', get_index)
        get_index_1 = self.get_index('index1')
        load_1 = ops.load('buf146', get_index_1)
        sub = ops.sub(load, load_1)
        get_index_2 = self.get_index('index1')
        load_2 = ops.load('buf147', get_index_2)
        constant = ops.constant(2048, torch.float32)
        div = ops.div(load_2, constant)
        constant_1 = ops.constant(1e-05, torch.float32)
        add = ops.add(div, constant_1)
        rsqrt = ops.rsqrt(add)
        mul = ops.mul(sub, rsqrt)
        get_index_3 = self.get_index('index1')
        load_3 = ops.load('primals_149', get_index_3)
        mul_1 = ops.mul(mul, load_3)
        get_index_4 = self.get_index('index1')
        load_4 = ops.load('primals_150', get_index_4)
        add_1 = ops.add(mul_1, load_4)
        relu = ops.relu(add_1)
        get_index_5 = self.get_index('index0')
        store = ops.store('buf151', get_index_5, relu, None)
        return store


buf152: ExternKernelSchedulerNode(Convolution)
buf152.writes = [StarDep(name='buf152')]
buf152.unmet_dependencies = [StarDep(name='buf151')]
buf152.met_dependencies = [StarDep(name='primals_19')]
buf152.node.kernel = aten.convolution


buf153_buf154_buf157_buf155_buf156_buf158: FusedSchedulerNode(NoneType)
buf153_buf154_buf157_buf155_buf156_buf158.writes = 
    [   MemoryDep(name='buf153', index=c0, size=(640, 2048)),
        MemoryDep(name='buf153', index=c0, size=(640,)),
        MemoryDep(name='buf154', index=c0, size=(640,)),
        MemoryDep(name='buf155', index=c0, size=(640, 2048)),
        MemoryDep(name='buf155', index=c0, size=(640,)),
        MemoryDep(name='buf156', index=c0, size=(640,)),
        MemoryDep(name='buf157', index=c0, size=(640,)),
        MemoryDep(name='buf158', index=c0, size=(640,))]
buf153_buf154_buf157_buf155_buf156_buf158.unmet_dependencies = 
    [   MemoryDep(name='buf152', index=256*c0 + 163840*c1 + c2, size=(640, 8, 256)),
        MemoryDep(name='buf154', index=c0, size=(640, 2048))]
buf153_buf154_buf157_buf155_buf156_buf158.met_dependencies = 
    [   MemoryDep(name='primals_152', index=c0, size=(640,)),
        MemoryDep(name='primals_153', index=c0, size=(640,))]
buf153_buf154_buf157_buf155_buf156_buf158.snodes = ['buf153', 'buf154', 'buf157', 'buf155', 'buf156', 'buf158']


buf159: SchedulerNode(ComputedBuffer)
buf159.writes = [MemoryDep(name='buf159', index=c0, size=(1310720,))]
buf159.unmet_dependencies = 
    [   MemoryDep(name='buf135', index=c0, size=(1310720,)),
        MemoryDep(name='buf152', index=c0, size=(1310720,)),
        MemoryDep(name='buf154', index=c1, size=(8, 640, 256)),
        MemoryDep(name='buf155', index=c1, size=(8, 640, 256))]
buf159.met_dependencies = 
    [   MemoryDep(name='primals_154', index=c1, size=(8, 640, 256)),
        MemoryDep(name='primals_155', index=c1, size=(8, 640, 256))]
buf159.group.device = cuda:0
buf159.group.iteration = (1310720, 1)
buf159.sizes = ([8, 640, 256], [])
class buf159_loop_body:
    var_ranges = {z0: 8, z1: 640, z2: 256}
    index0 = 163840*z0 + 256*z1 + z2
    index1 = z1
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf152', get_index)
        get_index_1 = self.get_index('index1')
        load_1 = ops.load('buf154', get_index_1)
        sub = ops.sub(load, load_1)
        get_index_2 = self.get_index('index1')
        load_2 = ops.load('buf155', get_index_2)
        constant = ops.constant(2048, torch.float32)
        div = ops.div(load_2, constant)
        constant_1 = ops.constant(1e-05, torch.float32)
        add = ops.add(div, constant_1)
        rsqrt = ops.rsqrt(add)
        mul = ops.mul(sub, rsqrt)
        get_index_3 = self.get_index('index1')
        load_3 = ops.load('primals_154', get_index_3)
        mul_1 = ops.mul(mul, load_3)
        get_index_4 = self.get_index('index1')
        load_4 = ops.load('primals_155', get_index_4)
        add_1 = ops.add(mul_1, load_4)
        get_index_5 = self.get_index('index0')
        load_5 = ops.load('buf135', get_index_5)
        add_2 = ops.add(add_1, load_5)
        relu = ops.relu(add_2)
        get_index_6 = self.get_index('index0')
        store = ops.store('buf159', get_index_6, relu, None)
        return store


buf160: ExternKernelSchedulerNode(Convolution)
buf160.writes = [StarDep(name='buf160')]
buf160.unmet_dependencies = [StarDep(name='buf159')]
buf160.met_dependencies = [StarDep(name='primals_20')]
buf160.node.kernel = aten.convolution


buf161_buf162_buf165_buf163_buf164_buf166: FusedSchedulerNode(NoneType)
buf161_buf162_buf165_buf163_buf164_buf166.writes = 
    [   MemoryDep(name='buf161', index=c0, size=(160, 2048)),
        MemoryDep(name='buf161', index=c0, size=(160,)),
        MemoryDep(name='buf162', index=c0, size=(160,)),
        MemoryDep(name='buf163', index=c0, size=(160, 2048)),
        MemoryDep(name='buf163', index=c0, size=(160,)),
        MemoryDep(name='buf164', index=c0, size=(160,)),
        MemoryDep(name='buf165', index=c0, size=(160,)),
        MemoryDep(name='buf166', index=c0, size=(160,))]
buf161_buf162_buf165_buf163_buf164_buf166.unmet_dependencies = 
    [   MemoryDep(name='buf160', index=256*c0 + 40960*c1 + c2, size=(160, 8, 256)),
        MemoryDep(name='buf162', index=c0, size=(160, 2048))]
buf161_buf162_buf165_buf163_buf164_buf166.met_dependencies = 
    [   MemoryDep(name='primals_157', index=c0, size=(160,)),
        MemoryDep(name='primals_158', index=c0, size=(160,))]
buf161_buf162_buf165_buf163_buf164_buf166.snodes = ['buf161', 'buf162', 'buf165', 'buf163', 'buf164', 'buf166']


buf167: SchedulerNode(ComputedBuffer)
buf167.writes = [MemoryDep(name='buf167', index=c0, size=(327680,))]
buf167.unmet_dependencies = 
    [   MemoryDep(name='buf160', index=c0, size=(327680,)),
        MemoryDep(name='buf162', index=c1, size=(8, 160, 256)),
        MemoryDep(name='buf163', index=c1, size=(8, 160, 256))]
buf167.met_dependencies = 
    [   MemoryDep(name='primals_159', index=c1, size=(8, 160, 256)),
        MemoryDep(name='primals_160', index=c1, size=(8, 160, 256))]
buf167.group.device = cuda:0
buf167.group.iteration = (327680, 1)
buf167.sizes = ([8, 160, 256], [])
class buf167_loop_body:
    var_ranges = {z0: 8, z1: 160, z2: 256}
    index0 = 40960*z0 + 256*z1 + z2
    index1 = z1
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf160', get_index)
        get_index_1 = self.get_index('index1')
        load_1 = ops.load('buf162', get_index_1)
        sub = ops.sub(load, load_1)
        get_index_2 = self.get_index('index1')
        load_2 = ops.load('buf163', get_index_2)
        constant = ops.constant(2048, torch.float32)
        div = ops.div(load_2, constant)
        constant_1 = ops.constant(1e-05, torch.float32)
        add = ops.add(div, constant_1)
        rsqrt = ops.rsqrt(add)
        mul = ops.mul(sub, rsqrt)
        get_index_3 = self.get_index('index1')
        load_3 = ops.load('primals_159', get_index_3)
        mul_1 = ops.mul(mul, load_3)
        get_index_4 = self.get_index('index1')
        load_4 = ops.load('primals_160', get_index_4)
        add_1 = ops.add(mul_1, load_4)
        relu = ops.relu(add_1)
        get_index_5 = self.get_index('index0')
        store = ops.store('buf167', get_index_5, relu, None)
        return store


buf168: ExternKernelSchedulerNode(Convolution)
buf168.writes = [StarDep(name='buf168')]
buf168.unmet_dependencies = [StarDep(name='buf167')]
buf168.met_dependencies = [StarDep(name='primals_21')]
buf168.node.kernel = aten.convolution


buf169_buf170_buf173_buf171_buf172_buf174: FusedSchedulerNode(NoneType)
buf169_buf170_buf173_buf171_buf172_buf174.writes = 
    [   MemoryDep(name='buf169', index=c0, size=(160, 2048)),
        MemoryDep(name='buf169', index=c0, size=(160,)),
        MemoryDep(name='buf170', index=c0, size=(160,)),
        MemoryDep(name='buf171', index=c0, size=(160, 2048)),
        MemoryDep(name='buf171', index=c0, size=(160,)),
        MemoryDep(name='buf172', index=c0, size=(160,)),
        MemoryDep(name='buf173', index=c0, size=(160,)),
        MemoryDep(name='buf174', index=c0, size=(160,))]
buf169_buf170_buf173_buf171_buf172_buf174.unmet_dependencies = 
    [   MemoryDep(name='buf168', index=256*c0 + 40960*c1 + c2, size=(160, 8, 256)),
        MemoryDep(name='buf170', index=c0, size=(160, 2048))]
buf169_buf170_buf173_buf171_buf172_buf174.met_dependencies = 
    [   MemoryDep(name='primals_162', index=c0, size=(160,)),
        MemoryDep(name='primals_163', index=c0, size=(160,))]
buf169_buf170_buf173_buf171_buf172_buf174.snodes = ['buf169', 'buf170', 'buf173', 'buf171', 'buf172', 'buf174']


buf175: SchedulerNode(ComputedBuffer)
buf175.writes = [MemoryDep(name='buf175', index=c0, size=(327680,))]
buf175.unmet_dependencies = 
    [   MemoryDep(name='buf168', index=c0, size=(327680,)),
        MemoryDep(name='buf170', index=c1, size=(8, 160, 256)),
        MemoryDep(name='buf171', index=c1, size=(8, 160, 256))]
buf175.met_dependencies = 
    [   MemoryDep(name='primals_164', index=c1, size=(8, 160, 256)),
        MemoryDep(name='primals_165', index=c1, size=(8, 160, 256))]
buf175.group.device = cuda:0
buf175.group.iteration = (327680, 1)
buf175.sizes = ([8, 160, 256], [])
class buf175_loop_body:
    var_ranges = {z0: 8, z1: 160, z2: 256}
    index0 = 40960*z0 + 256*z1 + z2
    index1 = z1
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf168', get_index)
        get_index_1 = self.get_index('index1')
        load_1 = ops.load('buf170', get_index_1)
        sub = ops.sub(load, load_1)
        get_index_2 = self.get_index('index1')
        load_2 = ops.load('buf171', get_index_2)
        constant = ops.constant(2048, torch.float32)
        div = ops.div(load_2, constant)
        constant_1 = ops.constant(1e-05, torch.float32)
        add = ops.add(div, constant_1)
        rsqrt = ops.rsqrt(add)
        mul = ops.mul(sub, rsqrt)
        get_index_3 = self.get_index('index1')
        load_3 = ops.load('primals_164', get_index_3)
        mul_1 = ops.mul(mul, load_3)
        get_index_4 = self.get_index('index1')
        load_4 = ops.load('primals_165', get_index_4)
        add_1 = ops.add(mul_1, load_4)
        relu = ops.relu(add_1)
        get_index_5 = self.get_index('index0')
        store = ops.store('buf175', get_index_5, relu, None)
        return store


buf176: ExternKernelSchedulerNode(Convolution)
buf176.writes = [StarDep(name='buf176')]
buf176.unmet_dependencies = [StarDep(name='buf175')]
buf176.met_dependencies = [StarDep(name='primals_22')]
buf176.node.kernel = aten.convolution


buf177_buf178_buf181_buf179_buf180_buf182: FusedSchedulerNode(NoneType)
buf177_buf178_buf181_buf179_buf180_buf182.writes = 
    [   MemoryDep(name='buf177', index=c0, size=(640, 2048)),
        MemoryDep(name='buf177', index=c0, size=(640,)),
        MemoryDep(name='buf178', index=c0, size=(640,)),
        MemoryDep(name='buf179', index=c0, size=(640, 2048)),
        MemoryDep(name='buf179', index=c0, size=(640,)),
        MemoryDep(name='buf180', index=c0, size=(640,)),
        MemoryDep(name='buf181', index=c0, size=(640,)),
        MemoryDep(name='buf182', index=c0, size=(640,))]
buf177_buf178_buf181_buf179_buf180_buf182.unmet_dependencies = 
    [   MemoryDep(name='buf176', index=256*c0 + 163840*c1 + c2, size=(640, 8, 256)),
        MemoryDep(name='buf178', index=c0, size=(640, 2048))]
buf177_buf178_buf181_buf179_buf180_buf182.met_dependencies = 
    [   MemoryDep(name='primals_167', index=c0, size=(640,)),
        MemoryDep(name='primals_168', index=c0, size=(640,))]
buf177_buf178_buf181_buf179_buf180_buf182.snodes = ['buf177', 'buf178', 'buf181', 'buf179', 'buf180', 'buf182']


buf183: SchedulerNode(ComputedBuffer)
buf183.writes = [MemoryDep(name='buf183', index=c0, size=(1310720,))]
buf183.unmet_dependencies = 
    [   MemoryDep(name='buf159', index=c0, size=(1310720,)),
        MemoryDep(name='buf176', index=c0, size=(1310720,)),
        MemoryDep(name='buf178', index=c1, size=(8, 640, 256)),
        MemoryDep(name='buf179', index=c1, size=(8, 640, 256))]
buf183.met_dependencies = 
    [   MemoryDep(name='primals_169', index=c1, size=(8, 640, 256)),
        MemoryDep(name='primals_170', index=c1, size=(8, 640, 256))]
buf183.group.device = cuda:0
buf183.group.iteration = (1310720, 1)
buf183.sizes = ([8, 640, 256], [])
class buf183_loop_body:
    var_ranges = {z0: 8, z1: 640, z2: 256}
    index0 = 163840*z0 + 256*z1 + z2
    index1 = z1
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf176', get_index)
        get_index_1 = self.get_index('index1')
        load_1 = ops.load('buf178', get_index_1)
        sub = ops.sub(load, load_1)
        get_index_2 = self.get_index('index1')
        load_2 = ops.load('buf179', get_index_2)
        constant = ops.constant(2048, torch.float32)
        div = ops.div(load_2, constant)
        constant_1 = ops.constant(1e-05, torch.float32)
        add = ops.add(div, constant_1)
        rsqrt = ops.rsqrt(add)
        mul = ops.mul(sub, rsqrt)
        get_index_3 = self.get_index('index1')
        load_3 = ops.load('primals_169', get_index_3)
        mul_1 = ops.mul(mul, load_3)
        get_index_4 = self.get_index('index1')
        load_4 = ops.load('primals_170', get_index_4)
        add_1 = ops.add(mul_1, load_4)
        get_index_5 = self.get_index('index0')
        load_5 = ops.load('buf159', get_index_5)
        add_2 = ops.add(add_1, load_5)
        relu = ops.relu(add_2)
        get_index_6 = self.get_index('index0')
        store = ops.store('buf183', get_index_6, relu, None)
        return store


buf184: ExternKernelSchedulerNode(Convolution)
buf184.writes = [StarDep(name='buf184')]
buf184.unmet_dependencies = [StarDep(name='buf183')]
buf184.met_dependencies = [StarDep(name='primals_23')]
buf184.node.kernel = aten.convolution


buf185_buf186_buf189_buf187_buf188_buf190: FusedSchedulerNode(NoneType)
buf185_buf186_buf189_buf187_buf188_buf190.writes = 
    [   MemoryDep(name='buf185', index=c0, size=(160, 2048)),
        MemoryDep(name='buf185', index=c0, size=(160,)),
        MemoryDep(name='buf186', index=c0, size=(160,)),
        MemoryDep(name='buf187', index=c0, size=(160, 2048)),
        MemoryDep(name='buf187', index=c0, size=(160,)),
        MemoryDep(name='buf188', index=c0, size=(160,)),
        MemoryDep(name='buf189', index=c0, size=(160,)),
        MemoryDep(name='buf190', index=c0, size=(160,))]
buf185_buf186_buf189_buf187_buf188_buf190.unmet_dependencies = 
    [   MemoryDep(name='buf184', index=256*c0 + 40960*c1 + c2, size=(160, 8, 256)),
        MemoryDep(name='buf186', index=c0, size=(160, 2048))]
buf185_buf186_buf189_buf187_buf188_buf190.met_dependencies = 
    [   MemoryDep(name='primals_172', index=c0, size=(160,)),
        MemoryDep(name='primals_173', index=c0, size=(160,))]
buf185_buf186_buf189_buf187_buf188_buf190.snodes = ['buf185', 'buf186', 'buf189', 'buf187', 'buf188', 'buf190']


buf191: SchedulerNode(ComputedBuffer)
buf191.writes = [MemoryDep(name='buf191', index=c0, size=(327680,))]
buf191.unmet_dependencies = 
    [   MemoryDep(name='buf184', index=c0, size=(327680,)),
        MemoryDep(name='buf186', index=c1, size=(8, 160, 256)),
        MemoryDep(name='buf187', index=c1, size=(8, 160, 256))]
buf191.met_dependencies = 
    [   MemoryDep(name='primals_174', index=c1, size=(8, 160, 256)),
        MemoryDep(name='primals_175', index=c1, size=(8, 160, 256))]
buf191.group.device = cuda:0
buf191.group.iteration = (327680, 1)
buf191.sizes = ([8, 160, 256], [])
class buf191_loop_body:
    var_ranges = {z0: 8, z1: 160, z2: 256}
    index0 = 40960*z0 + 256*z1 + z2
    index1 = z1
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf184', get_index)
        get_index_1 = self.get_index('index1')
        load_1 = ops.load('buf186', get_index_1)
        sub = ops.sub(load, load_1)
        get_index_2 = self.get_index('index1')
        load_2 = ops.load('buf187', get_index_2)
        constant = ops.constant(2048, torch.float32)
        div = ops.div(load_2, constant)
        constant_1 = ops.constant(1e-05, torch.float32)
        add = ops.add(div, constant_1)
        rsqrt = ops.rsqrt(add)
        mul = ops.mul(sub, rsqrt)
        get_index_3 = self.get_index('index1')
        load_3 = ops.load('primals_174', get_index_3)
        mul_1 = ops.mul(mul, load_3)
        get_index_4 = self.get_index('index1')
        load_4 = ops.load('primals_175', get_index_4)
        add_1 = ops.add(mul_1, load_4)
        relu = ops.relu(add_1)
        get_index_5 = self.get_index('index0')
        store = ops.store('buf191', get_index_5, relu, None)
        return store


buf192: ExternKernelSchedulerNode(Convolution)
buf192.writes = [StarDep(name='buf192')]
buf192.unmet_dependencies = [StarDep(name='buf191')]
buf192.met_dependencies = [StarDep(name='primals_24')]
buf192.node.kernel = aten.convolution


buf193_buf194_buf197_buf195_buf196_buf198: FusedSchedulerNode(NoneType)
buf193_buf194_buf197_buf195_buf196_buf198.writes = 
    [   MemoryDep(name='buf193', index=c0, size=(160, 2048)),
        MemoryDep(name='buf193', index=c0, size=(160,)),
        MemoryDep(name='buf194', index=c0, size=(160,)),
        MemoryDep(name='buf195', index=c0, size=(160, 2048)),
        MemoryDep(name='buf195', index=c0, size=(160,)),
        MemoryDep(name='buf196', index=c0, size=(160,)),
        MemoryDep(name='buf197', index=c0, size=(160,)),
        MemoryDep(name='buf198', index=c0, size=(160,))]
buf193_buf194_buf197_buf195_buf196_buf198.unmet_dependencies = 
    [   MemoryDep(name='buf192', index=256*c0 + 40960*c1 + c2, size=(160, 8, 256)),
        MemoryDep(name='buf194', index=c0, size=(160, 2048))]
buf193_buf194_buf197_buf195_buf196_buf198.met_dependencies = 
    [   MemoryDep(name='primals_177', index=c0, size=(160,)),
        MemoryDep(name='primals_178', index=c0, size=(160,))]
buf193_buf194_buf197_buf195_buf196_buf198.snodes = ['buf193', 'buf194', 'buf197', 'buf195', 'buf196', 'buf198']


buf199: SchedulerNode(ComputedBuffer)
buf199.writes = [MemoryDep(name='buf199', index=c0, size=(327680,))]
buf199.unmet_dependencies = 
    [   MemoryDep(name='buf192', index=c0, size=(327680,)),
        MemoryDep(name='buf194', index=c1, size=(8, 160, 256)),
        MemoryDep(name='buf195', index=c1, size=(8, 160, 256))]
buf199.met_dependencies = 
    [   MemoryDep(name='primals_179', index=c1, size=(8, 160, 256)),
        MemoryDep(name='primals_180', index=c1, size=(8, 160, 256))]
buf199.group.device = cuda:0
buf199.group.iteration = (327680, 1)
buf199.sizes = ([8, 160, 256], [])
class buf199_loop_body:
    var_ranges = {z0: 8, z1: 160, z2: 256}
    index0 = 40960*z0 + 256*z1 + z2
    index1 = z1
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf192', get_index)
        get_index_1 = self.get_index('index1')
        load_1 = ops.load('buf194', get_index_1)
        sub = ops.sub(load, load_1)
        get_index_2 = self.get_index('index1')
        load_2 = ops.load('buf195', get_index_2)
        constant = ops.constant(2048, torch.float32)
        div = ops.div(load_2, constant)
        constant_1 = ops.constant(1e-05, torch.float32)
        add = ops.add(div, constant_1)
        rsqrt = ops.rsqrt(add)
        mul = ops.mul(sub, rsqrt)
        get_index_3 = self.get_index('index1')
        load_3 = ops.load('primals_179', get_index_3)
        mul_1 = ops.mul(mul, load_3)
        get_index_4 = self.get_index('index1')
        load_4 = ops.load('primals_180', get_index_4)
        add_1 = ops.add(mul_1, load_4)
        relu = ops.relu(add_1)
        get_index_5 = self.get_index('index0')
        store = ops.store('buf199', get_index_5, relu, None)
        return store


buf200: ExternKernelSchedulerNode(Convolution)
buf200.writes = [StarDep(name='buf200')]
buf200.unmet_dependencies = [StarDep(name='buf199')]
buf200.met_dependencies = [StarDep(name='primals_25')]
buf200.node.kernel = aten.convolution


buf201_buf202_buf205_buf203_buf204_buf206: FusedSchedulerNode(NoneType)
buf201_buf202_buf205_buf203_buf204_buf206.writes = 
    [   MemoryDep(name='buf201', index=c0, size=(640, 2048)),
        MemoryDep(name='buf201', index=c0, size=(640,)),
        MemoryDep(name='buf202', index=c0, size=(640,)),
        MemoryDep(name='buf203', index=c0, size=(640, 2048)),
        MemoryDep(name='buf203', index=c0, size=(640,)),
        MemoryDep(name='buf204', index=c0, size=(640,)),
        MemoryDep(name='buf205', index=c0, size=(640,)),
        MemoryDep(name='buf206', index=c0, size=(640,))]
buf201_buf202_buf205_buf203_buf204_buf206.unmet_dependencies = 
    [   MemoryDep(name='buf200', index=256*c0 + 163840*c1 + c2, size=(640, 8, 256)),
        MemoryDep(name='buf202', index=c0, size=(640, 2048))]
buf201_buf202_buf205_buf203_buf204_buf206.met_dependencies = 
    [   MemoryDep(name='primals_182', index=c0, size=(640,)),
        MemoryDep(name='primals_183', index=c0, size=(640,))]
buf201_buf202_buf205_buf203_buf204_buf206.snodes = ['buf201', 'buf202', 'buf205', 'buf203', 'buf204', 'buf206']


buf207: SchedulerNode(ComputedBuffer)
buf207.writes = [MemoryDep(name='buf207', index=c0, size=(1310720,))]
buf207.unmet_dependencies = 
    [   MemoryDep(name='buf183', index=c0, size=(1310720,)),
        MemoryDep(name='buf200', index=c0, size=(1310720,)),
        MemoryDep(name='buf202', index=c1, size=(8, 640, 256)),
        MemoryDep(name='buf203', index=c1, size=(8, 640, 256))]
buf207.met_dependencies = 
    [   MemoryDep(name='primals_184', index=c1, size=(8, 640, 256)),
        MemoryDep(name='primals_185', index=c1, size=(8, 640, 256))]
buf207.group.device = cuda:0
buf207.group.iteration = (1310720, 1)
buf207.sizes = ([8, 640, 256], [])
class buf207_loop_body:
    var_ranges = {z0: 8, z1: 640, z2: 256}
    index0 = 163840*z0 + 256*z1 + z2
    index1 = z1
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf200', get_index)
        get_index_1 = self.get_index('index1')
        load_1 = ops.load('buf202', get_index_1)
        sub = ops.sub(load, load_1)
        get_index_2 = self.get_index('index1')
        load_2 = ops.load('buf203', get_index_2)
        constant = ops.constant(2048, torch.float32)
        div = ops.div(load_2, constant)
        constant_1 = ops.constant(1e-05, torch.float32)
        add = ops.add(div, constant_1)
        rsqrt = ops.rsqrt(add)
        mul = ops.mul(sub, rsqrt)
        get_index_3 = self.get_index('index1')
        load_3 = ops.load('primals_184', get_index_3)
        mul_1 = ops.mul(mul, load_3)
        get_index_4 = self.get_index('index1')
        load_4 = ops.load('primals_185', get_index_4)
        add_1 = ops.add(mul_1, load_4)
        get_index_5 = self.get_index('index0')
        load_5 = ops.load('buf183', get_index_5)
        add_2 = ops.add(add_1, load_5)
        relu = ops.relu(add_2)
        get_index_6 = self.get_index('index0')
        store = ops.store('buf207', get_index_6, relu, None)
        return store


buf208: ExternKernelSchedulerNode(Convolution)
buf208.writes = [StarDep(name='buf208')]
buf208.unmet_dependencies = [StarDep(name='buf207')]
buf208.met_dependencies = [StarDep(name='primals_26')]
buf208.node.kernel = aten.convolution


buf209_buf210_buf213_buf211_buf212_buf214: FusedSchedulerNode(NoneType)
buf209_buf210_buf213_buf211_buf212_buf214.writes = 
    [   MemoryDep(name='buf209', index=c0, size=(160, 2048)),
        MemoryDep(name='buf209', index=c0, size=(160,)),
        MemoryDep(name='buf210', index=c0, size=(160,)),
        MemoryDep(name='buf211', index=c0, size=(160, 2048)),
        MemoryDep(name='buf211', index=c0, size=(160,)),
        MemoryDep(name='buf212', index=c0, size=(160,)),
        MemoryDep(name='buf213', index=c0, size=(160,)),
        MemoryDep(name='buf214', index=c0, size=(160,))]
buf209_buf210_buf213_buf211_buf212_buf214.unmet_dependencies = 
    [   MemoryDep(name='buf208', index=256*c0 + 40960*c1 + c2, size=(160, 8, 256)),
        MemoryDep(name='buf210', index=c0, size=(160, 2048))]
buf209_buf210_buf213_buf211_buf212_buf214.met_dependencies = 
    [   MemoryDep(name='primals_187', index=c0, size=(160,)),
        MemoryDep(name='primals_188', index=c0, size=(160,))]
buf209_buf210_buf213_buf211_buf212_buf214.snodes = ['buf209', 'buf210', 'buf213', 'buf211', 'buf212', 'buf214']


buf215: SchedulerNode(ComputedBuffer)
buf215.writes = [MemoryDep(name='buf215', index=c0, size=(327680,))]
buf215.unmet_dependencies = 
    [   MemoryDep(name='buf208', index=c0, size=(327680,)),
        MemoryDep(name='buf210', index=c1, size=(8, 160, 256)),
        MemoryDep(name='buf211', index=c1, size=(8, 160, 256))]
buf215.met_dependencies = 
    [   MemoryDep(name='primals_189', index=c1, size=(8, 160, 256)),
        MemoryDep(name='primals_190', index=c1, size=(8, 160, 256))]
buf215.group.device = cuda:0
buf215.group.iteration = (327680, 1)
buf215.sizes = ([8, 160, 256], [])
class buf215_loop_body:
    var_ranges = {z0: 8, z1: 160, z2: 256}
    index0 = 40960*z0 + 256*z1 + z2
    index1 = z1
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf208', get_index)
        get_index_1 = self.get_index('index1')
        load_1 = ops.load('buf210', get_index_1)
        sub = ops.sub(load, load_1)
        get_index_2 = self.get_index('index1')
        load_2 = ops.load('buf211', get_index_2)
        constant = ops.constant(2048, torch.float32)
        div = ops.div(load_2, constant)
        constant_1 = ops.constant(1e-05, torch.float32)
        add = ops.add(div, constant_1)
        rsqrt = ops.rsqrt(add)
        mul = ops.mul(sub, rsqrt)
        get_index_3 = self.get_index('index1')
        load_3 = ops.load('primals_189', get_index_3)
        mul_1 = ops.mul(mul, load_3)
        get_index_4 = self.get_index('index1')
        load_4 = ops.load('primals_190', get_index_4)
        add_1 = ops.add(mul_1, load_4)
        relu = ops.relu(add_1)
        get_index_5 = self.get_index('index0')
        store = ops.store('buf215', get_index_5, relu, None)
        return store


buf216: ExternKernelSchedulerNode(Convolution)
buf216.writes = [StarDep(name='buf216')]
buf216.unmet_dependencies = [StarDep(name='buf215')]
buf216.met_dependencies = [StarDep(name='primals_27')]
buf216.node.kernel = aten.convolution


buf217_buf218_buf221_buf219_buf220_buf222: FusedSchedulerNode(NoneType)
buf217_buf218_buf221_buf219_buf220_buf222.writes = 
    [   MemoryDep(name='buf217', index=c0, size=(160, 2048)),
        MemoryDep(name='buf217', index=c0, size=(160,)),
        MemoryDep(name='buf218', index=c0, size=(160,)),
        MemoryDep(name='buf219', index=c0, size=(160, 2048)),
        MemoryDep(name='buf219', index=c0, size=(160,)),
        MemoryDep(name='buf220', index=c0, size=(160,)),
        MemoryDep(name='buf221', index=c0, size=(160,)),
        MemoryDep(name='buf222', index=c0, size=(160,))]
buf217_buf218_buf221_buf219_buf220_buf222.unmet_dependencies = 
    [   MemoryDep(name='buf216', index=256*c0 + 40960*c1 + c2, size=(160, 8, 256)),
        MemoryDep(name='buf218', index=c0, size=(160, 2048))]
buf217_buf218_buf221_buf219_buf220_buf222.met_dependencies = 
    [   MemoryDep(name='primals_192', index=c0, size=(160,)),
        MemoryDep(name='primals_193', index=c0, size=(160,))]
buf217_buf218_buf221_buf219_buf220_buf222.snodes = ['buf217', 'buf218', 'buf221', 'buf219', 'buf220', 'buf222']


buf223: SchedulerNode(ComputedBuffer)
buf223.writes = [MemoryDep(name='buf223', index=c0, size=(327680,))]
buf223.unmet_dependencies = 
    [   MemoryDep(name='buf216', index=c0, size=(327680,)),
        MemoryDep(name='buf218', index=c1, size=(8, 160, 256)),
        MemoryDep(name='buf219', index=c1, size=(8, 160, 256))]
buf223.met_dependencies = 
    [   MemoryDep(name='primals_194', index=c1, size=(8, 160, 256)),
        MemoryDep(name='primals_195', index=c1, size=(8, 160, 256))]
buf223.group.device = cuda:0
buf223.group.iteration = (327680, 1)
buf223.sizes = ([8, 160, 256], [])
class buf223_loop_body:
    var_ranges = {z0: 8, z1: 160, z2: 256}
    index0 = 40960*z0 + 256*z1 + z2
    index1 = z1
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf216', get_index)
        get_index_1 = self.get_index('index1')
        load_1 = ops.load('buf218', get_index_1)
        sub = ops.sub(load, load_1)
        get_index_2 = self.get_index('index1')
        load_2 = ops.load('buf219', get_index_2)
        constant = ops.constant(2048, torch.float32)
        div = ops.div(load_2, constant)
        constant_1 = ops.constant(1e-05, torch.float32)
        add = ops.add(div, constant_1)
        rsqrt = ops.rsqrt(add)
        mul = ops.mul(sub, rsqrt)
        get_index_3 = self.get_index('index1')
        load_3 = ops.load('primals_194', get_index_3)
        mul_1 = ops.mul(mul, load_3)
        get_index_4 = self.get_index('index1')
        load_4 = ops.load('primals_195', get_index_4)
        add_1 = ops.add(mul_1, load_4)
        relu = ops.relu(add_1)
        get_index_5 = self.get_index('index0')
        store = ops.store('buf223', get_index_5, relu, None)
        return store


buf224: ExternKernelSchedulerNode(Convolution)
buf224.writes = [StarDep(name='buf224')]
buf224.unmet_dependencies = [StarDep(name='buf223')]
buf224.met_dependencies = [StarDep(name='primals_28')]
buf224.node.kernel = aten.convolution


buf225_buf226_buf229_buf227_buf228_buf230: FusedSchedulerNode(NoneType)
buf225_buf226_buf229_buf227_buf228_buf230.writes = 
    [   MemoryDep(name='buf225', index=c0, size=(640, 2048)),
        MemoryDep(name='buf225', index=c0, size=(640,)),
        MemoryDep(name='buf226', index=c0, size=(640,)),
        MemoryDep(name='buf227', index=c0, size=(640, 2048)),
        MemoryDep(name='buf227', index=c0, size=(640,)),
        MemoryDep(name='buf228', index=c0, size=(640,)),
        MemoryDep(name='buf229', index=c0, size=(640,)),
        MemoryDep(name='buf230', index=c0, size=(640,))]
buf225_buf226_buf229_buf227_buf228_buf230.unmet_dependencies = 
    [   MemoryDep(name='buf224', index=256*c0 + 163840*c1 + c2, size=(640, 8, 256)),
        MemoryDep(name='buf226', index=c0, size=(640, 2048))]
buf225_buf226_buf229_buf227_buf228_buf230.met_dependencies = 
    [   MemoryDep(name='primals_197', index=c0, size=(640,)),
        MemoryDep(name='primals_198', index=c0, size=(640,))]
buf225_buf226_buf229_buf227_buf228_buf230.snodes = ['buf225', 'buf226', 'buf229', 'buf227', 'buf228', 'buf230']


buf231: SchedulerNode(ComputedBuffer)
buf231.writes = [MemoryDep(name='buf231', index=c0, size=(1310720,))]
buf231.unmet_dependencies = 
    [   MemoryDep(name='buf207', index=c0, size=(1310720,)),
        MemoryDep(name='buf224', index=c0, size=(1310720,)),
        MemoryDep(name='buf226', index=c1, size=(8, 640, 256)),
        MemoryDep(name='buf227', index=c1, size=(8, 640, 256))]
buf231.met_dependencies = 
    [   MemoryDep(name='primals_199', index=c1, size=(8, 640, 256)),
        MemoryDep(name='primals_200', index=c1, size=(8, 640, 256))]
buf231.group.device = cuda:0
buf231.group.iteration = (1310720, 1)
buf231.sizes = ([8, 640, 256], [])
class buf231_loop_body:
    var_ranges = {z0: 8, z1: 640, z2: 256}
    index0 = 163840*z0 + 256*z1 + z2
    index1 = z1
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf224', get_index)
        get_index_1 = self.get_index('index1')
        load_1 = ops.load('buf226', get_index_1)
        sub = ops.sub(load, load_1)
        get_index_2 = self.get_index('index1')
        load_2 = ops.load('buf227', get_index_2)
        constant = ops.constant(2048, torch.float32)
        div = ops.div(load_2, constant)
        constant_1 = ops.constant(1e-05, torch.float32)
        add = ops.add(div, constant_1)
        rsqrt = ops.rsqrt(add)
        mul = ops.mul(sub, rsqrt)
        get_index_3 = self.get_index('index1')
        load_3 = ops.load('primals_199', get_index_3)
        mul_1 = ops.mul(mul, load_3)
        get_index_4 = self.get_index('index1')
        load_4 = ops.load('primals_200', get_index_4)
        add_1 = ops.add(mul_1, load_4)
        get_index_5 = self.get_index('index0')
        load_5 = ops.load('buf207', get_index_5)
        add_2 = ops.add(add_1, load_5)
        relu = ops.relu(add_2)
        get_index_6 = self.get_index('index0')
        store = ops.store('buf231', get_index_6, relu, None)
        return store


buf232: ExternKernelSchedulerNode(Convolution)
buf232.writes = [StarDep(name='buf232')]
buf232.unmet_dependencies = [StarDep(name='buf231')]
buf232.met_dependencies = [StarDep(name='primals_29')]
buf232.node.kernel = aten.convolution


buf233_buf234_buf237_buf235_buf236_buf238: FusedSchedulerNode(NoneType)
buf233_buf234_buf237_buf235_buf236_buf238.writes = 
    [   MemoryDep(name='buf233', index=c0, size=(1920, 2048)),
        MemoryDep(name='buf233', index=c0, size=(1920,)),
        MemoryDep(name='buf234', index=c0, size=(1920,)),
        MemoryDep(name='buf235', index=c0, size=(1920, 2048)),
        MemoryDep(name='buf235', index=c0, size=(1920,)),
        MemoryDep(name='buf236', index=c0, size=(1920,)),
        MemoryDep(name='buf237', index=c0, size=(1920,)),
        MemoryDep(name='buf238', index=c0, size=(1920,))]
buf233_buf234_buf237_buf235_buf236_buf238.unmet_dependencies = 
    [   MemoryDep(name='buf232', index=256*c0 + 491520*c1 + c2, size=(1920, 8, 256)),
        MemoryDep(name='buf234', index=c0, size=(1920, 2048))]
buf233_buf234_buf237_buf235_buf236_buf238.met_dependencies = 
    [   MemoryDep(name='primals_202', index=c0, size=(1920,)),
        MemoryDep(name='primals_203', index=c0, size=(1920,))]
buf233_buf234_buf237_buf235_buf236_buf238.snodes = ['buf233', 'buf234', 'buf237', 'buf235', 'buf236', 'buf238']


buf239: SchedulerNode(ComputedBuffer)
buf239.writes = [MemoryDep(name='buf239', index=c0, size=(3932160,))]
buf239.unmet_dependencies = 
    [   MemoryDep(name='buf232', index=c0, size=(3932160,)),
        MemoryDep(name='buf234', index=c1, size=(8, 1920, 256)),
        MemoryDep(name='buf235', index=c1, size=(8, 1920, 256))]
buf239.met_dependencies = 
    [   MemoryDep(name='primals_204', index=c1, size=(8, 1920, 256)),
        MemoryDep(name='primals_205', index=c1, size=(8, 1920, 256))]
buf239.group.device = cuda:0
buf239.group.iteration = (3932160, 1)
buf239.sizes = ([8, 1920, 256], [])
class buf239_loop_body:
    var_ranges = {z0: 8, z1: 1920, z2: 256}
    index0 = 491520*z0 + 256*z1 + z2
    index1 = z1
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf232', get_index)
        get_index_1 = self.get_index('index1')
        load_1 = ops.load('buf234', get_index_1)
        sub = ops.sub(load, load_1)
        get_index_2 = self.get_index('index1')
        load_2 = ops.load('buf235', get_index_2)
        constant = ops.constant(2048, torch.float32)
        div = ops.div(load_2, constant)
        constant_1 = ops.constant(1e-05, torch.float32)
        add = ops.add(div, constant_1)
        rsqrt = ops.rsqrt(add)
        mul = ops.mul(sub, rsqrt)
        get_index_3 = self.get_index('index1')
        load_3 = ops.load('primals_204', get_index_3)
        mul_1 = ops.mul(mul, load_3)
        get_index_4 = self.get_index('index1')
        load_4 = ops.load('primals_205', get_index_4)
        add_1 = ops.add(mul_1, load_4)
        relu = ops.relu(add_1)
        get_index_5 = self.get_index('index0')
        store = ops.store('buf239', get_index_5, relu, None)
        return store


buf240: ExternKernelSchedulerNode(Convolution)
buf240.writes = [StarDep(name='buf240')]
buf240.unmet_dependencies = [StarDep(name='buf239')]
buf240.met_dependencies = [StarDep(name='primals_30')]
buf240.node.kernel = aten.convolution


buf241_buf242_buf245_buf243_buf244_buf246: FusedSchedulerNode(NoneType)
buf241_buf242_buf245_buf243_buf244_buf246.writes = 
    [   MemoryDep(name='buf241', index=c0, size=(1920, 512)),
        MemoryDep(name='buf241', index=c0, size=(1920,)),
        MemoryDep(name='buf242', index=c0, size=(1920,)),
        MemoryDep(name='buf243', index=c0, size=(1920, 512)),
        MemoryDep(name='buf243', index=c0, size=(1920,)),
        MemoryDep(name='buf244', index=c0, size=(1920,)),
        MemoryDep(name='buf245', index=c0, size=(1920,)),
        MemoryDep(name='buf246', index=c0, size=(1920,))]
buf241_buf242_buf245_buf243_buf244_buf246.unmet_dependencies = 
    [   MemoryDep(name='buf240', index=64*c0 + 122880*c1 + c2, size=(1920, 8, 64)),
        MemoryDep(name='buf242', index=c0, size=(1920, 512))]
buf241_buf242_buf245_buf243_buf244_buf246.met_dependencies = 
    [   MemoryDep(name='primals_207', index=c0, size=(1920,)),
        MemoryDep(name='primals_208', index=c0, size=(1920,))]
buf241_buf242_buf245_buf243_buf244_buf246.snodes = ['buf241', 'buf242', 'buf245', 'buf243', 'buf244', 'buf246']


buf247: SchedulerNode(ComputedBuffer)
buf247.writes = [MemoryDep(name='buf247', index=c0, size=(983040,))]
buf247.unmet_dependencies = 
    [   MemoryDep(name='buf240', index=c0, size=(983040,)),
        MemoryDep(name='buf242', index=c1, size=(8, 1920, 64)),
        MemoryDep(name='buf243', index=c1, size=(8, 1920, 64))]
buf247.met_dependencies = 
    [   MemoryDep(name='primals_209', index=c1, size=(8, 1920, 64)),
        MemoryDep(name='primals_210', index=c1, size=(8, 1920, 64))]
buf247.group.device = cuda:0
buf247.group.iteration = (983040, 1)
buf247.sizes = ([8, 1920, 64], [])
class buf247_loop_body:
    var_ranges = {z0: 8, z1: 1920, z2: 64}
    index0 = 122880*z0 + 64*z1 + z2
    index1 = z1
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf240', get_index)
        get_index_1 = self.get_index('index1')
        load_1 = ops.load('buf242', get_index_1)
        sub = ops.sub(load, load_1)
        get_index_2 = self.get_index('index1')
        load_2 = ops.load('buf243', get_index_2)
        constant = ops.constant(512, torch.float32)
        div = ops.div(load_2, constant)
        constant_1 = ops.constant(1e-05, torch.float32)
        add = ops.add(div, constant_1)
        rsqrt = ops.rsqrt(add)
        mul = ops.mul(sub, rsqrt)
        get_index_3 = self.get_index('index1')
        load_3 = ops.load('primals_209', get_index_3)
        mul_1 = ops.mul(mul, load_3)
        get_index_4 = self.get_index('index1')
        load_4 = ops.load('primals_210', get_index_4)
        add_1 = ops.add(mul_1, load_4)
        relu = ops.relu(add_1)
        get_index_5 = self.get_index('index0')
        store = ops.store('buf247', get_index_5, relu, None)
        return store


buf248: ExternKernelSchedulerNode(Convolution)
buf248.writes = [StarDep(name='buf248')]
buf248.unmet_dependencies = [StarDep(name='buf247')]
buf248.met_dependencies = [StarDep(name='primals_31')]
buf248.node.kernel = aten.convolution


buf249_buf250_buf253_buf251_buf252_buf254: FusedSchedulerNode(NoneType)
buf249_buf250_buf253_buf251_buf252_buf254.writes = 
    [   MemoryDep(name='buf249', index=c0, size=(640, 512)),
        MemoryDep(name='buf249', index=c0, size=(640,)),
        MemoryDep(name='buf250', index=c0, size=(640,)),
        MemoryDep(name='buf251', index=c0, size=(640, 512)),
        MemoryDep(name='buf251', index=c0, size=(640,)),
        MemoryDep(name='buf252', index=c0, size=(640,)),
        MemoryDep(name='buf253', index=c0, size=(640,)),
        MemoryDep(name='buf254', index=c0, size=(640,))]
buf249_buf250_buf253_buf251_buf252_buf254.unmet_dependencies = 
    [   MemoryDep(name='buf248', index=64*c0 + 40960*c1 + c2, size=(640, 8, 64)),
        MemoryDep(name='buf250', index=c0, size=(640, 512))]
buf249_buf250_buf253_buf251_buf252_buf254.met_dependencies = 
    [   MemoryDep(name='primals_212', index=c0, size=(640,)),
        MemoryDep(name='primals_213', index=c0, size=(640,))]
buf249_buf250_buf253_buf251_buf252_buf254.snodes = ['buf249', 'buf250', 'buf253', 'buf251', 'buf252', 'buf254']


buf255: ExternKernelSchedulerNode(Convolution)
buf255.writes = [StarDep(name='buf255')]
buf255.unmet_dependencies = [StarDep(name='buf231')]
buf255.met_dependencies = [StarDep(name='primals_32')]
buf255.node.kernel = aten.convolution


buf256_buf257_buf260_buf258_buf259_buf261: FusedSchedulerNode(NoneType)
buf256_buf257_buf260_buf258_buf259_buf261.writes = 
    [   MemoryDep(name='buf256', index=c0, size=(640, 512)),
        MemoryDep(name='buf256', index=c0, size=(640,)),
        MemoryDep(name='buf257', index=c0, size=(640,)),
        MemoryDep(name='buf258', index=c0, size=(640, 512)),
        MemoryDep(name='buf258', index=c0, size=(640,)),
        MemoryDep(name='buf259', index=c0, size=(640,)),
        MemoryDep(name='buf260', index=c0, size=(640,)),
        MemoryDep(name='buf261', index=c0, size=(640,))]
buf256_buf257_buf260_buf258_buf259_buf261.unmet_dependencies = 
    [   MemoryDep(name='buf255', index=64*c0 + 40960*c1 + c2, size=(640, 8, 64)),
        MemoryDep(name='buf257', index=c0, size=(640, 512))]
buf256_buf257_buf260_buf258_buf259_buf261.met_dependencies = 
    [   MemoryDep(name='primals_217', index=c0, size=(640,)),
        MemoryDep(name='primals_218', index=c0, size=(640,))]
buf256_buf257_buf260_buf258_buf259_buf261.snodes = ['buf256', 'buf257', 'buf260', 'buf258', 'buf259', 'buf261']


buf262_buf263: FusedSchedulerNode(NoneType)
buf262_buf263.writes = 
    [   MemoryDep(name='buf262', index=c0, size=(327680,)),
        MemoryDep(name='buf263', index=c0, size=(327680,))]
buf262_buf263.unmet_dependencies = 
    [   MemoryDep(name='buf248', index=c0, size=(327680,)),
        MemoryDep(name='buf250', index=c1, size=(8, 640, 64)),
        MemoryDep(name='buf251', index=c1, size=(8, 640, 64)),
        MemoryDep(name='buf255', index=c0, size=(327680,)),
        MemoryDep(name='buf257', index=c1, size=(8, 640, 64)),
        MemoryDep(name='buf258', index=c1, size=(8, 640, 64))]
buf262_buf263.met_dependencies = 
    [   MemoryDep(name='primals_214', index=c1, size=(8, 640, 64)),
        MemoryDep(name='primals_215', index=c1, size=(8, 640, 64)),
        MemoryDep(name='primals_219', index=c1, size=(8, 640, 64)),
        MemoryDep(name='primals_220', index=c1, size=(8, 640, 64))]
buf262_buf263.snodes = ['buf262', 'buf263']


buf264: ExternKernelSchedulerNode(Convolution)
buf264.writes = [StarDep(name='buf264')]
buf264.unmet_dependencies = [StarDep(name='buf263')]
buf264.met_dependencies = [StarDep(name='primals_33')]
buf264.node.kernel = aten.convolution


buf265_buf266_buf269_buf267_buf268_buf270: FusedSchedulerNode(NoneType)
buf265_buf266_buf269_buf267_buf268_buf270.writes = 
    [   MemoryDep(name='buf265', index=c0, size=(1920, 512)),
        MemoryDep(name='buf265', index=c0, size=(1920,)),
        MemoryDep(name='buf266', index=c0, size=(1920,)),
        MemoryDep(name='buf267', index=c0, size=(1920, 512)),
        MemoryDep(name='buf267', index=c0, size=(1920,)),
        MemoryDep(name='buf268', index=c0, size=(1920,)),
        MemoryDep(name='buf269', index=c0, size=(1920,)),
        MemoryDep(name='buf270', index=c0, size=(1920,))]
buf265_buf266_buf269_buf267_buf268_buf270.unmet_dependencies = 
    [   MemoryDep(name='buf264', index=64*c0 + 122880*c1 + c2, size=(1920, 8, 64)),
        MemoryDep(name='buf266', index=c0, size=(1920, 512))]
buf265_buf266_buf269_buf267_buf268_buf270.met_dependencies = 
    [   MemoryDep(name='primals_222', index=c0, size=(1920,)),
        MemoryDep(name='primals_223', index=c0, size=(1920,))]
buf265_buf266_buf269_buf267_buf268_buf270.snodes = ['buf265', 'buf266', 'buf269', 'buf267', 'buf268', 'buf270']


buf271: SchedulerNode(ComputedBuffer)
buf271.writes = [MemoryDep(name='buf271', index=c0, size=(983040,))]
buf271.unmet_dependencies = 
    [   MemoryDep(name='buf264', index=c0, size=(983040,)),
        MemoryDep(name='buf266', index=c1, size=(8, 1920, 64)),
        MemoryDep(name='buf267', index=c1, size=(8, 1920, 64))]
buf271.met_dependencies = 
    [   MemoryDep(name='primals_224', index=c1, size=(8, 1920, 64)),
        MemoryDep(name='primals_225', index=c1, size=(8, 1920, 64))]
buf271.group.device = cuda:0
buf271.group.iteration = (983040, 1)
buf271.sizes = ([8, 1920, 64], [])
class buf271_loop_body:
    var_ranges = {z0: 8, z1: 1920, z2: 64}
    index0 = 122880*z0 + 64*z1 + z2
    index1 = z1
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf264', get_index)
        get_index_1 = self.get_index('index1')
        load_1 = ops.load('buf266', get_index_1)
        sub = ops.sub(load, load_1)
        get_index_2 = self.get_index('index1')
        load_2 = ops.load('buf267', get_index_2)
        constant = ops.constant(512, torch.float32)
        div = ops.div(load_2, constant)
        constant_1 = ops.constant(1e-05, torch.float32)
        add = ops.add(div, constant_1)
        rsqrt = ops.rsqrt(add)
        mul = ops.mul(sub, rsqrt)
        get_index_3 = self.get_index('index1')
        load_3 = ops.load('primals_224', get_index_3)
        mul_1 = ops.mul(mul, load_3)
        get_index_4 = self.get_index('index1')
        load_4 = ops.load('primals_225', get_index_4)
        add_1 = ops.add(mul_1, load_4)
        relu = ops.relu(add_1)
        get_index_5 = self.get_index('index0')
        store = ops.store('buf271', get_index_5, relu, None)
        return store


buf272: ExternKernelSchedulerNode(Convolution)
buf272.writes = [StarDep(name='buf272')]
buf272.unmet_dependencies = [StarDep(name='buf271')]
buf272.met_dependencies = [StarDep(name='primals_34')]
buf272.node.kernel = aten.convolution


buf273_buf274_buf277_buf275_buf276_buf278: FusedSchedulerNode(NoneType)
buf273_buf274_buf277_buf275_buf276_buf278.writes = 
    [   MemoryDep(name='buf273', index=c0, size=(1920, 512)),
        MemoryDep(name='buf273', index=c0, size=(1920,)),
        MemoryDep(name='buf274', index=c0, size=(1920,)),
        MemoryDep(name='buf275', index=c0, size=(1920, 512)),
        MemoryDep(name='buf275', index=c0, size=(1920,)),
        MemoryDep(name='buf276', index=c0, size=(1920,)),
        MemoryDep(name='buf277', index=c0, size=(1920,)),
        MemoryDep(name='buf278', index=c0, size=(1920,))]
buf273_buf274_buf277_buf275_buf276_buf278.unmet_dependencies = 
    [   MemoryDep(name='buf272', index=64*c0 + 122880*c1 + c2, size=(1920, 8, 64)),
        MemoryDep(name='buf274', index=c0, size=(1920, 512))]
buf273_buf274_buf277_buf275_buf276_buf278.met_dependencies = 
    [   MemoryDep(name='primals_227', index=c0, size=(1920,)),
        MemoryDep(name='primals_228', index=c0, size=(1920,))]
buf273_buf274_buf277_buf275_buf276_buf278.snodes = ['buf273', 'buf274', 'buf277', 'buf275', 'buf276', 'buf278']


buf279: SchedulerNode(ComputedBuffer)
buf279.writes = [MemoryDep(name='buf279', index=c0, size=(983040,))]
buf279.unmet_dependencies = 
    [   MemoryDep(name='buf272', index=c0, size=(983040,)),
        MemoryDep(name='buf274', index=c1, size=(8, 1920, 64)),
        MemoryDep(name='buf275', index=c1, size=(8, 1920, 64))]
buf279.met_dependencies = 
    [   MemoryDep(name='primals_229', index=c1, size=(8, 1920, 64)),
        MemoryDep(name='primals_230', index=c1, size=(8, 1920, 64))]
buf279.group.device = cuda:0
buf279.group.iteration = (983040, 1)
buf279.sizes = ([8, 1920, 64], [])
class buf279_loop_body:
    var_ranges = {z0: 8, z1: 1920, z2: 64}
    index0 = 122880*z0 + 64*z1 + z2
    index1 = z1
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf272', get_index)
        get_index_1 = self.get_index('index1')
        load_1 = ops.load('buf274', get_index_1)
        sub = ops.sub(load, load_1)
        get_index_2 = self.get_index('index1')
        load_2 = ops.load('buf275', get_index_2)
        constant = ops.constant(512, torch.float32)
        div = ops.div(load_2, constant)
        constant_1 = ops.constant(1e-05, torch.float32)
        add = ops.add(div, constant_1)
        rsqrt = ops.rsqrt(add)
        mul = ops.mul(sub, rsqrt)
        get_index_3 = self.get_index('index1')
        load_3 = ops.load('primals_229', get_index_3)
        mul_1 = ops.mul(mul, load_3)
        get_index_4 = self.get_index('index1')
        load_4 = ops.load('primals_230', get_index_4)
        add_1 = ops.add(mul_1, load_4)
        relu = ops.relu(add_1)
        get_index_5 = self.get_index('index0')
        store = ops.store('buf279', get_index_5, relu, None)
        return store


buf280: ExternKernelSchedulerNode(Convolution)
buf280.writes = [StarDep(name='buf280')]
buf280.unmet_dependencies = [StarDep(name='buf279')]
buf280.met_dependencies = [StarDep(name='primals_35')]
buf280.node.kernel = aten.convolution


buf281_buf282_buf285_buf283_buf284_buf286: FusedSchedulerNode(NoneType)
buf281_buf282_buf285_buf283_buf284_buf286.writes = 
    [   MemoryDep(name='buf281', index=c0, size=(640, 512)),
        MemoryDep(name='buf281', index=c0, size=(640,)),
        MemoryDep(name='buf282', index=c0, size=(640,)),
        MemoryDep(name='buf283', index=c0, size=(640, 512)),
        MemoryDep(name='buf283', index=c0, size=(640,)),
        MemoryDep(name='buf284', index=c0, size=(640,)),
        MemoryDep(name='buf285', index=c0, size=(640,)),
        MemoryDep(name='buf286', index=c0, size=(640,))]
buf281_buf282_buf285_buf283_buf284_buf286.unmet_dependencies = 
    [   MemoryDep(name='buf280', index=64*c0 + 40960*c1 + c2, size=(640, 8, 64)),
        MemoryDep(name='buf282', index=c0, size=(640, 512))]
buf281_buf282_buf285_buf283_buf284_buf286.met_dependencies = 
    [   MemoryDep(name='primals_232', index=c0, size=(640,)),
        MemoryDep(name='primals_233', index=c0, size=(640,))]
buf281_buf282_buf285_buf283_buf284_buf286.snodes = ['buf281', 'buf282', 'buf285', 'buf283', 'buf284', 'buf286']


buf287: SchedulerNode(ComputedBuffer)
buf287.writes = [MemoryDep(name='buf287', index=c0, size=(327680,))]
buf287.unmet_dependencies = 
    [   MemoryDep(name='buf263', index=c0, size=(327680,)),
        MemoryDep(name='buf280', index=c0, size=(327680,)),
        MemoryDep(name='buf282', index=c1, size=(8, 640, 64)),
        MemoryDep(name='buf283', index=c1, size=(8, 640, 64))]
buf287.met_dependencies = 
    [   MemoryDep(name='primals_234', index=c1, size=(8, 640, 64)),
        MemoryDep(name='primals_235', index=c1, size=(8, 640, 64))]
buf287.group.device = cuda:0
buf287.group.iteration = (327680, 1)
buf287.sizes = ([8, 640, 64], [])
class buf287_loop_body:
    var_ranges = {z0: 8, z1: 640, z2: 64}
    index0 = 40960*z0 + 64*z1 + z2
    index1 = z1
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf280', get_index)
        get_index_1 = self.get_index('index1')
        load_1 = ops.load('buf282', get_index_1)
        sub = ops.sub(load, load_1)
        get_index_2 = self.get_index('index1')
        load_2 = ops.load('buf283', get_index_2)
        constant = ops.constant(512, torch.float32)
        div = ops.div(load_2, constant)
        constant_1 = ops.constant(1e-05, torch.float32)
        add = ops.add(div, constant_1)
        rsqrt = ops.rsqrt(add)
        mul = ops.mul(sub, rsqrt)
        get_index_3 = self.get_index('index1')
        load_3 = ops.load('primals_234', get_index_3)
        mul_1 = ops.mul(mul, load_3)
        get_index_4 = self.get_index('index1')
        load_4 = ops.load('primals_235', get_index_4)
        add_1 = ops.add(mul_1, load_4)
        get_index_5 = self.get_index('index0')
        load_5 = ops.load('buf263', get_index_5)
        add_2 = ops.add(add_1, load_5)
        relu = ops.relu(add_2)
        get_index_6 = self.get_index('index0')
        store = ops.store('buf287', get_index_6, relu, None)
        return store


buf288: ExternKernelSchedulerNode(Convolution)
buf288.writes = [StarDep(name='buf288')]
buf288.unmet_dependencies = [StarDep(name='buf287')]
buf288.met_dependencies = [StarDep(name='primals_36')]
buf288.node.kernel = aten.convolution


buf289_buf290_buf293_buf291_buf292_buf294: FusedSchedulerNode(NoneType)
buf289_buf290_buf293_buf291_buf292_buf294.writes = 
    [   MemoryDep(name='buf289', index=c0, size=(1920, 512)),
        MemoryDep(name='buf289', index=c0, size=(1920,)),
        MemoryDep(name='buf290', index=c0, size=(1920,)),
        MemoryDep(name='buf291', index=c0, size=(1920, 512)),
        MemoryDep(name='buf291', index=c0, size=(1920,)),
        MemoryDep(name='buf292', index=c0, size=(1920,)),
        MemoryDep(name='buf293', index=c0, size=(1920,)),
        MemoryDep(name='buf294', index=c0, size=(1920,))]
buf289_buf290_buf293_buf291_buf292_buf294.unmet_dependencies = 
    [   MemoryDep(name='buf288', index=64*c0 + 122880*c1 + c2, size=(1920, 8, 64)),
        MemoryDep(name='buf290', index=c0, size=(1920, 512))]
buf289_buf290_buf293_buf291_buf292_buf294.met_dependencies = 
    [   MemoryDep(name='primals_237', index=c0, size=(1920,)),
        MemoryDep(name='primals_238', index=c0, size=(1920,))]
buf289_buf290_buf293_buf291_buf292_buf294.snodes = ['buf289', 'buf290', 'buf293', 'buf291', 'buf292', 'buf294']


buf295: SchedulerNode(ComputedBuffer)
buf295.writes = [MemoryDep(name='buf295', index=c0, size=(983040,))]
buf295.unmet_dependencies = 
    [   MemoryDep(name='buf288', index=c0, size=(983040,)),
        MemoryDep(name='buf290', index=c1, size=(8, 1920, 64)),
        MemoryDep(name='buf291', index=c1, size=(8, 1920, 64))]
buf295.met_dependencies = 
    [   MemoryDep(name='primals_239', index=c1, size=(8, 1920, 64)),
        MemoryDep(name='primals_240', index=c1, size=(8, 1920, 64))]
buf295.group.device = cuda:0
buf295.group.iteration = (983040, 1)
buf295.sizes = ([8, 1920, 64], [])
class buf295_loop_body:
    var_ranges = {z0: 8, z1: 1920, z2: 64}
    index0 = 122880*z0 + 64*z1 + z2
    index1 = z1
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf288', get_index)
        get_index_1 = self.get_index('index1')
        load_1 = ops.load('buf290', get_index_1)
        sub = ops.sub(load, load_1)
        get_index_2 = self.get_index('index1')
        load_2 = ops.load('buf291', get_index_2)
        constant = ops.constant(512, torch.float32)
        div = ops.div(load_2, constant)
        constant_1 = ops.constant(1e-05, torch.float32)
        add = ops.add(div, constant_1)
        rsqrt = ops.rsqrt(add)
        mul = ops.mul(sub, rsqrt)
        get_index_3 = self.get_index('index1')
        load_3 = ops.load('primals_239', get_index_3)
        mul_1 = ops.mul(mul, load_3)
        get_index_4 = self.get_index('index1')
        load_4 = ops.load('primals_240', get_index_4)
        add_1 = ops.add(mul_1, load_4)
        relu = ops.relu(add_1)
        get_index_5 = self.get_index('index0')
        store = ops.store('buf295', get_index_5, relu, None)
        return store


buf296: ExternKernelSchedulerNode(Convolution)
buf296.writes = [StarDep(name='buf296')]
buf296.unmet_dependencies = [StarDep(name='buf295')]
buf296.met_dependencies = [StarDep(name='primals_37')]
buf296.node.kernel = aten.convolution


buf297_buf298_buf301_buf299_buf300_buf302: FusedSchedulerNode(NoneType)
buf297_buf298_buf301_buf299_buf300_buf302.writes = 
    [   MemoryDep(name='buf297', index=c0, size=(1920, 512)),
        MemoryDep(name='buf297', index=c0, size=(1920,)),
        MemoryDep(name='buf298', index=c0, size=(1920,)),
        MemoryDep(name='buf299', index=c0, size=(1920, 512)),
        MemoryDep(name='buf299', index=c0, size=(1920,)),
        MemoryDep(name='buf300', index=c0, size=(1920,)),
        MemoryDep(name='buf301', index=c0, size=(1920,)),
        MemoryDep(name='buf302', index=c0, size=(1920,))]
buf297_buf298_buf301_buf299_buf300_buf302.unmet_dependencies = 
    [   MemoryDep(name='buf296', index=64*c0 + 122880*c1 + c2, size=(1920, 8, 64)),
        MemoryDep(name='buf298', index=c0, size=(1920, 512))]
buf297_buf298_buf301_buf299_buf300_buf302.met_dependencies = 
    [   MemoryDep(name='primals_242', index=c0, size=(1920,)),
        MemoryDep(name='primals_243', index=c0, size=(1920,))]
buf297_buf298_buf301_buf299_buf300_buf302.snodes = ['buf297', 'buf298', 'buf301', 'buf299', 'buf300', 'buf302']


buf303: SchedulerNode(ComputedBuffer)
buf303.writes = [MemoryDep(name='buf303', index=c0, size=(983040,))]
buf303.unmet_dependencies = 
    [   MemoryDep(name='buf296', index=c0, size=(983040,)),
        MemoryDep(name='buf298', index=c1, size=(8, 1920, 64)),
        MemoryDep(name='buf299', index=c1, size=(8, 1920, 64))]
buf303.met_dependencies = 
    [   MemoryDep(name='primals_244', index=c1, size=(8, 1920, 64)),
        MemoryDep(name='primals_245', index=c1, size=(8, 1920, 64))]
buf303.group.device = cuda:0
buf303.group.iteration = (983040, 1)
buf303.sizes = ([8, 1920, 64], [])
class buf303_loop_body:
    var_ranges = {z0: 8, z1: 1920, z2: 64}
    index0 = 122880*z0 + 64*z1 + z2
    index1 = z1
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf296', get_index)
        get_index_1 = self.get_index('index1')
        load_1 = ops.load('buf298', get_index_1)
        sub = ops.sub(load, load_1)
        get_index_2 = self.get_index('index1')
        load_2 = ops.load('buf299', get_index_2)
        constant = ops.constant(512, torch.float32)
        div = ops.div(load_2, constant)
        constant_1 = ops.constant(1e-05, torch.float32)
        add = ops.add(div, constant_1)
        rsqrt = ops.rsqrt(add)
        mul = ops.mul(sub, rsqrt)
        get_index_3 = self.get_index('index1')
        load_3 = ops.load('primals_244', get_index_3)
        mul_1 = ops.mul(mul, load_3)
        get_index_4 = self.get_index('index1')
        load_4 = ops.load('primals_245', get_index_4)
        add_1 = ops.add(mul_1, load_4)
        relu = ops.relu(add_1)
        get_index_5 = self.get_index('index0')
        store = ops.store('buf303', get_index_5, relu, None)
        return store


buf304: ExternKernelSchedulerNode(Convolution)
buf304.writes = [StarDep(name='buf304')]
buf304.unmet_dependencies = [StarDep(name='buf303')]
buf304.met_dependencies = [StarDep(name='primals_38')]
buf304.node.kernel = aten.convolution


buf305_buf306_buf309_buf307_buf308_buf310: FusedSchedulerNode(NoneType)
buf305_buf306_buf309_buf307_buf308_buf310.writes = 
    [   MemoryDep(name='buf305', index=c0, size=(640, 512)),
        MemoryDep(name='buf305', index=c0, size=(640,)),
        MemoryDep(name='buf306', index=c0, size=(640,)),
        MemoryDep(name='buf307', index=c0, size=(640, 512)),
        MemoryDep(name='buf307', index=c0, size=(640,)),
        MemoryDep(name='buf308', index=c0, size=(640,)),
        MemoryDep(name='buf309', index=c0, size=(640,)),
        MemoryDep(name='buf310', index=c0, size=(640,))]
buf305_buf306_buf309_buf307_buf308_buf310.unmet_dependencies = 
    [   MemoryDep(name='buf304', index=64*c0 + 40960*c1 + c2, size=(640, 8, 64)),
        MemoryDep(name='buf306', index=c0, size=(640, 512))]
buf305_buf306_buf309_buf307_buf308_buf310.met_dependencies = 
    [   MemoryDep(name='primals_247', index=c0, size=(640,)),
        MemoryDep(name='primals_248', index=c0, size=(640,))]
buf305_buf306_buf309_buf307_buf308_buf310.snodes = ['buf305', 'buf306', 'buf309', 'buf307', 'buf308', 'buf310']


buf311: SchedulerNode(ComputedBuffer)
buf311.writes = [MemoryDep(name='buf311', index=c0, size=(327680,))]
buf311.unmet_dependencies = 
    [   MemoryDep(name='buf287', index=c0, size=(327680,)),
        MemoryDep(name='buf304', index=c0, size=(327680,)),
        MemoryDep(name='buf306', index=c1, size=(8, 640, 64)),
        MemoryDep(name='buf307', index=c1, size=(8, 640, 64))]
buf311.met_dependencies = 
    [   MemoryDep(name='primals_249', index=c1, size=(8, 640, 64)),
        MemoryDep(name='primals_250', index=c1, size=(8, 640, 64))]
buf311.group.device = cuda:0
buf311.group.iteration = (327680, 1)
buf311.sizes = ([8, 640, 64], [])
class buf311_loop_body:
    var_ranges = {z0: 8, z1: 640, z2: 64}
    index0 = 40960*z0 + 64*z1 + z2
    index1 = z1
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf304', get_index)
        get_index_1 = self.get_index('index1')
        load_1 = ops.load('buf306', get_index_1)
        sub = ops.sub(load, load_1)
        get_index_2 = self.get_index('index1')
        load_2 = ops.load('buf307', get_index_2)
        constant = ops.constant(512, torch.float32)
        div = ops.div(load_2, constant)
        constant_1 = ops.constant(1e-05, torch.float32)
        add = ops.add(div, constant_1)
        rsqrt = ops.rsqrt(add)
        mul = ops.mul(sub, rsqrt)
        get_index_3 = self.get_index('index1')
        load_3 = ops.load('primals_249', get_index_3)
        mul_1 = ops.mul(mul, load_3)
        get_index_4 = self.get_index('index1')
        load_4 = ops.load('primals_250', get_index_4)
        add_1 = ops.add(mul_1, load_4)
        get_index_5 = self.get_index('index0')
        load_5 = ops.load('buf287', get_index_5)
        add_2 = ops.add(add_1, load_5)
        relu = ops.relu(add_2)
        get_index_6 = self.get_index('index0')
        store = ops.store('buf311', get_index_6, relu, None)
        return store


buf312: ExternKernelSchedulerNode(Convolution)
buf312.writes = [StarDep(name='buf312')]
buf312.unmet_dependencies = [StarDep(name='buf311')]
buf312.met_dependencies = [StarDep(name='primals_39')]
buf312.node.kernel = aten.convolution


buf313_buf314_buf317_buf315_buf316_buf318: FusedSchedulerNode(NoneType)
buf313_buf314_buf317_buf315_buf316_buf318.writes = 
    [   MemoryDep(name='buf313', index=c0, size=(1920, 512)),
        MemoryDep(name='buf313', index=c0, size=(1920,)),
        MemoryDep(name='buf314', index=c0, size=(1920,)),
        MemoryDep(name='buf315', index=c0, size=(1920, 512)),
        MemoryDep(name='buf315', index=c0, size=(1920,)),
        MemoryDep(name='buf316', index=c0, size=(1920,)),
        MemoryDep(name='buf317', index=c0, size=(1920,)),
        MemoryDep(name='buf318', index=c0, size=(1920,))]
buf313_buf314_buf317_buf315_buf316_buf318.unmet_dependencies = 
    [   MemoryDep(name='buf312', index=64*c0 + 122880*c1 + c2, size=(1920, 8, 64)),
        MemoryDep(name='buf314', index=c0, size=(1920, 512))]
buf313_buf314_buf317_buf315_buf316_buf318.met_dependencies = 
    [   MemoryDep(name='primals_252', index=c0, size=(1920,)),
        MemoryDep(name='primals_253', index=c0, size=(1920,))]
buf313_buf314_buf317_buf315_buf316_buf318.snodes = ['buf313', 'buf314', 'buf317', 'buf315', 'buf316', 'buf318']


buf319: SchedulerNode(ComputedBuffer)
buf319.writes = [MemoryDep(name='buf319', index=c0, size=(983040,))]
buf319.unmet_dependencies = 
    [   MemoryDep(name='buf312', index=c0, size=(983040,)),
        MemoryDep(name='buf314', index=c1, size=(8, 1920, 64)),
        MemoryDep(name='buf315', index=c1, size=(8, 1920, 64))]
buf319.met_dependencies = 
    [   MemoryDep(name='primals_254', index=c1, size=(8, 1920, 64)),
        MemoryDep(name='primals_255', index=c1, size=(8, 1920, 64))]
buf319.group.device = cuda:0
buf319.group.iteration = (983040, 1)
buf319.sizes = ([8, 1920, 64], [])
class buf319_loop_body:
    var_ranges = {z0: 8, z1: 1920, z2: 64}
    index0 = 122880*z0 + 64*z1 + z2
    index1 = z1
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf312', get_index)
        get_index_1 = self.get_index('index1')
        load_1 = ops.load('buf314', get_index_1)
        sub = ops.sub(load, load_1)
        get_index_2 = self.get_index('index1')
        load_2 = ops.load('buf315', get_index_2)
        constant = ops.constant(512, torch.float32)
        div = ops.div(load_2, constant)
        constant_1 = ops.constant(1e-05, torch.float32)
        add = ops.add(div, constant_1)
        rsqrt = ops.rsqrt(add)
        mul = ops.mul(sub, rsqrt)
        get_index_3 = self.get_index('index1')
        load_3 = ops.load('primals_254', get_index_3)
        mul_1 = ops.mul(mul, load_3)
        get_index_4 = self.get_index('index1')
        load_4 = ops.load('primals_255', get_index_4)
        add_1 = ops.add(mul_1, load_4)
        relu = ops.relu(add_1)
        get_index_5 = self.get_index('index0')
        store = ops.store('buf319', get_index_5, relu, None)
        return store


buf320: ExternKernelSchedulerNode(Convolution)
buf320.writes = [StarDep(name='buf320')]
buf320.unmet_dependencies = [StarDep(name='buf319')]
buf320.met_dependencies = [StarDep(name='primals_40')]
buf320.node.kernel = aten.convolution


buf321_buf322_buf325_buf323_buf324_buf326: FusedSchedulerNode(NoneType)
buf321_buf322_buf325_buf323_buf324_buf326.writes = 
    [   MemoryDep(name='buf321', index=c0, size=(1920, 512)),
        MemoryDep(name='buf321', index=c0, size=(1920,)),
        MemoryDep(name='buf322', index=c0, size=(1920,)),
        MemoryDep(name='buf323', index=c0, size=(1920, 512)),
        MemoryDep(name='buf323', index=c0, size=(1920,)),
        MemoryDep(name='buf324', index=c0, size=(1920,)),
        MemoryDep(name='buf325', index=c0, size=(1920,)),
        MemoryDep(name='buf326', index=c0, size=(1920,))]
buf321_buf322_buf325_buf323_buf324_buf326.unmet_dependencies = 
    [   MemoryDep(name='buf320', index=64*c0 + 122880*c1 + c2, size=(1920, 8, 64)),
        MemoryDep(name='buf322', index=c0, size=(1920, 512))]
buf321_buf322_buf325_buf323_buf324_buf326.met_dependencies = 
    [   MemoryDep(name='primals_257', index=c0, size=(1920,)),
        MemoryDep(name='primals_258', index=c0, size=(1920,))]
buf321_buf322_buf325_buf323_buf324_buf326.snodes = ['buf321', 'buf322', 'buf325', 'buf323', 'buf324', 'buf326']


buf327: SchedulerNode(ComputedBuffer)
buf327.writes = [MemoryDep(name='buf327', index=c0, size=(983040,))]
buf327.unmet_dependencies = 
    [   MemoryDep(name='buf320', index=c0, size=(983040,)),
        MemoryDep(name='buf322', index=c1, size=(8, 1920, 64)),
        MemoryDep(name='buf323', index=c1, size=(8, 1920, 64))]
buf327.met_dependencies = 
    [   MemoryDep(name='primals_259', index=c1, size=(8, 1920, 64)),
        MemoryDep(name='primals_260', index=c1, size=(8, 1920, 64))]
buf327.group.device = cuda:0
buf327.group.iteration = (983040, 1)
buf327.sizes = ([8, 1920, 64], [])
class buf327_loop_body:
    var_ranges = {z0: 8, z1: 1920, z2: 64}
    index0 = 122880*z0 + 64*z1 + z2
    index1 = z1
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf320', get_index)
        get_index_1 = self.get_index('index1')
        load_1 = ops.load('buf322', get_index_1)
        sub = ops.sub(load, load_1)
        get_index_2 = self.get_index('index1')
        load_2 = ops.load('buf323', get_index_2)
        constant = ops.constant(512, torch.float32)
        div = ops.div(load_2, constant)
        constant_1 = ops.constant(1e-05, torch.float32)
        add = ops.add(div, constant_1)
        rsqrt = ops.rsqrt(add)
        mul = ops.mul(sub, rsqrt)
        get_index_3 = self.get_index('index1')
        load_3 = ops.load('primals_259', get_index_3)
        mul_1 = ops.mul(mul, load_3)
        get_index_4 = self.get_index('index1')
        load_4 = ops.load('primals_260', get_index_4)
        add_1 = ops.add(mul_1, load_4)
        relu = ops.relu(add_1)
        get_index_5 = self.get_index('index0')
        store = ops.store('buf327', get_index_5, relu, None)
        return store


buf328: ExternKernelSchedulerNode(Convolution)
buf328.writes = [StarDep(name='buf328')]
buf328.unmet_dependencies = [StarDep(name='buf327')]
buf328.met_dependencies = [StarDep(name='primals_41')]
buf328.node.kernel = aten.convolution


buf329_buf330_buf333_buf331_buf332_buf334: FusedSchedulerNode(NoneType)
buf329_buf330_buf333_buf331_buf332_buf334.writes = 
    [   MemoryDep(name='buf329', index=c0, size=(640, 512)),
        MemoryDep(name='buf329', index=c0, size=(640,)),
        MemoryDep(name='buf330', index=c0, size=(640,)),
        MemoryDep(name='buf331', index=c0, size=(640, 512)),
        MemoryDep(name='buf331', index=c0, size=(640,)),
        MemoryDep(name='buf332', index=c0, size=(640,)),
        MemoryDep(name='buf333', index=c0, size=(640,)),
        MemoryDep(name='buf334', index=c0, size=(640,))]
buf329_buf330_buf333_buf331_buf332_buf334.unmet_dependencies = 
    [   MemoryDep(name='buf328', index=64*c0 + 40960*c1 + c2, size=(640, 8, 64)),
        MemoryDep(name='buf330', index=c0, size=(640, 512))]
buf329_buf330_buf333_buf331_buf332_buf334.met_dependencies = 
    [   MemoryDep(name='primals_262', index=c0, size=(640,)),
        MemoryDep(name='primals_263', index=c0, size=(640,))]
buf329_buf330_buf333_buf331_buf332_buf334.snodes = ['buf329', 'buf330', 'buf333', 'buf331', 'buf332', 'buf334']


buf335: SchedulerNode(ComputedBuffer)
buf335.writes = [MemoryDep(name='buf335', index=c0, size=(327680,))]
buf335.unmet_dependencies = 
    [   MemoryDep(name='buf311', index=c0, size=(327680,)),
        MemoryDep(name='buf328', index=c0, size=(327680,)),
        MemoryDep(name='buf330', index=c1, size=(8, 640, 64)),
        MemoryDep(name='buf331', index=c1, size=(8, 640, 64))]
buf335.met_dependencies = 
    [   MemoryDep(name='primals_264', index=c1, size=(8, 640, 64)),
        MemoryDep(name='primals_265', index=c1, size=(8, 640, 64))]
buf335.group.device = cuda:0
buf335.group.iteration = (327680, 1)
buf335.sizes = ([8, 640, 64], [])
class buf335_loop_body:
    var_ranges = {z0: 8, z1: 640, z2: 64}
    index0 = 40960*z0 + 64*z1 + z2
    index1 = z1
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf328', get_index)
        get_index_1 = self.get_index('index1')
        load_1 = ops.load('buf330', get_index_1)
        sub = ops.sub(load, load_1)
        get_index_2 = self.get_index('index1')
        load_2 = ops.load('buf331', get_index_2)
        constant = ops.constant(512, torch.float32)
        div = ops.div(load_2, constant)
        constant_1 = ops.constant(1e-05, torch.float32)
        add = ops.add(div, constant_1)
        rsqrt = ops.rsqrt(add)
        mul = ops.mul(sub, rsqrt)
        get_index_3 = self.get_index('index1')
        load_3 = ops.load('primals_264', get_index_3)
        mul_1 = ops.mul(mul, load_3)
        get_index_4 = self.get_index('index1')
        load_4 = ops.load('primals_265', get_index_4)
        add_1 = ops.add(mul_1, load_4)
        get_index_5 = self.get_index('index0')
        load_5 = ops.load('buf311', get_index_5)
        add_2 = ops.add(add_1, load_5)
        relu = ops.relu(add_2)
        get_index_6 = self.get_index('index0')
        store = ops.store('buf335', get_index_6, relu, None)
        return store


buf336: ExternKernelSchedulerNode(Convolution)
buf336.writes = [StarDep(name='buf336')]
buf336.unmet_dependencies = [StarDep(name='buf335')]
buf336.met_dependencies = [StarDep(name='primals_42')]
buf336.node.kernel = aten.convolution


buf337_buf338_buf341_buf339_buf340_buf342: FusedSchedulerNode(NoneType)
buf337_buf338_buf341_buf339_buf340_buf342.writes = 
    [   MemoryDep(name='buf337', index=c0, size=(1920, 512)),
        MemoryDep(name='buf337', index=c0, size=(1920,)),
        MemoryDep(name='buf338', index=c0, size=(1920,)),
        MemoryDep(name='buf339', index=c0, size=(1920, 512)),
        MemoryDep(name='buf339', index=c0, size=(1920,)),
        MemoryDep(name='buf340', index=c0, size=(1920,)),
        MemoryDep(name='buf341', index=c0, size=(1920,)),
        MemoryDep(name='buf342', index=c0, size=(1920,))]
buf337_buf338_buf341_buf339_buf340_buf342.unmet_dependencies = 
    [   MemoryDep(name='buf336', index=64*c0 + 122880*c1 + c2, size=(1920, 8, 64)),
        MemoryDep(name='buf338', index=c0, size=(1920, 512))]
buf337_buf338_buf341_buf339_buf340_buf342.met_dependencies = 
    [   MemoryDep(name='primals_267', index=c0, size=(1920,)),
        MemoryDep(name='primals_268', index=c0, size=(1920,))]
buf337_buf338_buf341_buf339_buf340_buf342.snodes = ['buf337', 'buf338', 'buf341', 'buf339', 'buf340', 'buf342']


buf343: SchedulerNode(ComputedBuffer)
buf343.writes = [MemoryDep(name='buf343', index=c0, size=(983040,))]
buf343.unmet_dependencies = 
    [   MemoryDep(name='buf336', index=c0, size=(983040,)),
        MemoryDep(name='buf338', index=c1, size=(8, 1920, 64)),
        MemoryDep(name='buf339', index=c1, size=(8, 1920, 64))]
buf343.met_dependencies = 
    [   MemoryDep(name='primals_269', index=c1, size=(8, 1920, 64)),
        MemoryDep(name='primals_270', index=c1, size=(8, 1920, 64))]
buf343.group.device = cuda:0
buf343.group.iteration = (983040, 1)
buf343.sizes = ([8, 1920, 64], [])
class buf343_loop_body:
    var_ranges = {z0: 8, z1: 1920, z2: 64}
    index0 = 122880*z0 + 64*z1 + z2
    index1 = z1
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf336', get_index)
        get_index_1 = self.get_index('index1')
        load_1 = ops.load('buf338', get_index_1)
        sub = ops.sub(load, load_1)
        get_index_2 = self.get_index('index1')
        load_2 = ops.load('buf339', get_index_2)
        constant = ops.constant(512, torch.float32)
        div = ops.div(load_2, constant)
        constant_1 = ops.constant(1e-05, torch.float32)
        add = ops.add(div, constant_1)
        rsqrt = ops.rsqrt(add)
        mul = ops.mul(sub, rsqrt)
        get_index_3 = self.get_index('index1')
        load_3 = ops.load('primals_269', get_index_3)
        mul_1 = ops.mul(mul, load_3)
        get_index_4 = self.get_index('index1')
        load_4 = ops.load('primals_270', get_index_4)
        add_1 = ops.add(mul_1, load_4)
        relu = ops.relu(add_1)
        get_index_5 = self.get_index('index0')
        store = ops.store('buf343', get_index_5, relu, None)
        return store


buf344: ExternKernelSchedulerNode(Convolution)
buf344.writes = [StarDep(name='buf344')]
buf344.unmet_dependencies = [StarDep(name='buf343')]
buf344.met_dependencies = [StarDep(name='primals_43')]
buf344.node.kernel = aten.convolution


buf345_buf346_buf349_buf347_buf348_buf350: FusedSchedulerNode(NoneType)
buf345_buf346_buf349_buf347_buf348_buf350.writes = 
    [   MemoryDep(name='buf345', index=c0, size=(1920, 512)),
        MemoryDep(name='buf345', index=c0, size=(1920,)),
        MemoryDep(name='buf346', index=c0, size=(1920,)),
        MemoryDep(name='buf347', index=c0, size=(1920, 512)),
        MemoryDep(name='buf347', index=c0, size=(1920,)),
        MemoryDep(name='buf348', index=c0, size=(1920,)),
        MemoryDep(name='buf349', index=c0, size=(1920,)),
        MemoryDep(name='buf350', index=c0, size=(1920,))]
buf345_buf346_buf349_buf347_buf348_buf350.unmet_dependencies = 
    [   MemoryDep(name='buf344', index=64*c0 + 122880*c1 + c2, size=(1920, 8, 64)),
        MemoryDep(name='buf346', index=c0, size=(1920, 512))]
buf345_buf346_buf349_buf347_buf348_buf350.met_dependencies = 
    [   MemoryDep(name='primals_272', index=c0, size=(1920,)),
        MemoryDep(name='primals_273', index=c0, size=(1920,))]
buf345_buf346_buf349_buf347_buf348_buf350.snodes = ['buf345', 'buf346', 'buf349', 'buf347', 'buf348', 'buf350']


buf351: SchedulerNode(ComputedBuffer)
buf351.writes = [MemoryDep(name='buf351', index=c0, size=(983040,))]
buf351.unmet_dependencies = 
    [   MemoryDep(name='buf344', index=c0, size=(983040,)),
        MemoryDep(name='buf346', index=c1, size=(8, 1920, 64)),
        MemoryDep(name='buf347', index=c1, size=(8, 1920, 64))]
buf351.met_dependencies = 
    [   MemoryDep(name='primals_274', index=c1, size=(8, 1920, 64)),
        MemoryDep(name='primals_275', index=c1, size=(8, 1920, 64))]
buf351.group.device = cuda:0
buf351.group.iteration = (983040, 1)
buf351.sizes = ([8, 1920, 64], [])
class buf351_loop_body:
    var_ranges = {z0: 8, z1: 1920, z2: 64}
    index0 = 122880*z0 + 64*z1 + z2
    index1 = z1
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf344', get_index)
        get_index_1 = self.get_index('index1')
        load_1 = ops.load('buf346', get_index_1)
        sub = ops.sub(load, load_1)
        get_index_2 = self.get_index('index1')
        load_2 = ops.load('buf347', get_index_2)
        constant = ops.constant(512, torch.float32)
        div = ops.div(load_2, constant)
        constant_1 = ops.constant(1e-05, torch.float32)
        add = ops.add(div, constant_1)
        rsqrt = ops.rsqrt(add)
        mul = ops.mul(sub, rsqrt)
        get_index_3 = self.get_index('index1')
        load_3 = ops.load('primals_274', get_index_3)
        mul_1 = ops.mul(mul, load_3)
        get_index_4 = self.get_index('index1')
        load_4 = ops.load('primals_275', get_index_4)
        add_1 = ops.add(mul_1, load_4)
        relu = ops.relu(add_1)
        get_index_5 = self.get_index('index0')
        store = ops.store('buf351', get_index_5, relu, None)
        return store


buf352: ExternKernelSchedulerNode(Convolution)
buf352.writes = [StarDep(name='buf352')]
buf352.unmet_dependencies = [StarDep(name='buf351')]
buf352.met_dependencies = [StarDep(name='primals_44')]
buf352.node.kernel = aten.convolution


buf353_buf354_buf357_buf355_buf356_buf358: FusedSchedulerNode(NoneType)
buf353_buf354_buf357_buf355_buf356_buf358.writes = 
    [   MemoryDep(name='buf353', index=c0, size=(640, 512)),
        MemoryDep(name='buf353', index=c0, size=(640,)),
        MemoryDep(name='buf354', index=c0, size=(640,)),
        MemoryDep(name='buf355', index=c0, size=(640, 512)),
        MemoryDep(name='buf355', index=c0, size=(640,)),
        MemoryDep(name='buf356', index=c0, size=(640,)),
        MemoryDep(name='buf357', index=c0, size=(640,)),
        MemoryDep(name='buf358', index=c0, size=(640,))]
buf353_buf354_buf357_buf355_buf356_buf358.unmet_dependencies = 
    [   MemoryDep(name='buf352', index=64*c0 + 40960*c1 + c2, size=(640, 8, 64)),
        MemoryDep(name='buf354', index=c0, size=(640, 512))]
buf353_buf354_buf357_buf355_buf356_buf358.met_dependencies = 
    [   MemoryDep(name='primals_277', index=c0, size=(640,)),
        MemoryDep(name='primals_278', index=c0, size=(640,))]
buf353_buf354_buf357_buf355_buf356_buf358.snodes = ['buf353', 'buf354', 'buf357', 'buf355', 'buf356', 'buf358']


buf359: SchedulerNode(ComputedBuffer)
buf359.writes = [MemoryDep(name='buf359', index=c0, size=(327680,))]
buf359.unmet_dependencies = 
    [   MemoryDep(name='buf335', index=c0, size=(327680,)),
        MemoryDep(name='buf352', index=c0, size=(327680,)),
        MemoryDep(name='buf354', index=c1, size=(8, 640, 64)),
        MemoryDep(name='buf355', index=c1, size=(8, 640, 64))]
buf359.met_dependencies = 
    [   MemoryDep(name='primals_279', index=c1, size=(8, 640, 64)),
        MemoryDep(name='primals_280', index=c1, size=(8, 640, 64))]
buf359.group.device = cuda:0
buf359.group.iteration = (327680, 1)
buf359.sizes = ([8, 640, 64], [])
class buf359_loop_body:
    var_ranges = {z0: 8, z1: 640, z2: 64}
    index0 = 40960*z0 + 64*z1 + z2
    index1 = z1
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf352', get_index)
        get_index_1 = self.get_index('index1')
        load_1 = ops.load('buf354', get_index_1)
        sub = ops.sub(load, load_1)
        get_index_2 = self.get_index('index1')
        load_2 = ops.load('buf355', get_index_2)
        constant = ops.constant(512, torch.float32)
        div = ops.div(load_2, constant)
        constant_1 = ops.constant(1e-05, torch.float32)
        add = ops.add(div, constant_1)
        rsqrt = ops.rsqrt(add)
        mul = ops.mul(sub, rsqrt)
        get_index_3 = self.get_index('index1')
        load_3 = ops.load('primals_279', get_index_3)
        mul_1 = ops.mul(mul, load_3)
        get_index_4 = self.get_index('index1')
        load_4 = ops.load('primals_280', get_index_4)
        add_1 = ops.add(mul_1, load_4)
        get_index_5 = self.get_index('index0')
        load_5 = ops.load('buf335', get_index_5)
        add_2 = ops.add(add_1, load_5)
        relu = ops.relu(add_2)
        get_index_6 = self.get_index('index0')
        store = ops.store('buf359', get_index_6, relu, None)
        return store


buf360: ExternKernelSchedulerNode(Convolution)
buf360.writes = [StarDep(name='buf360')]
buf360.unmet_dependencies = [StarDep(name='buf359')]
buf360.met_dependencies = [StarDep(name='primals_45')]
buf360.node.kernel = aten.convolution


buf361_buf362_buf365_buf363_buf364_buf366: FusedSchedulerNode(NoneType)
buf361_buf362_buf365_buf363_buf364_buf366.writes = 
    [   MemoryDep(name='buf361', index=c0, size=(1920, 512)),
        MemoryDep(name='buf361', index=c0, size=(1920,)),
        MemoryDep(name='buf362', index=c0, size=(1920,)),
        MemoryDep(name='buf363', index=c0, size=(1920, 512)),
        MemoryDep(name='buf363', index=c0, size=(1920,)),
        MemoryDep(name='buf364', index=c0, size=(1920,)),
        MemoryDep(name='buf365', index=c0, size=(1920,)),
        MemoryDep(name='buf366', index=c0, size=(1920,))]
buf361_buf362_buf365_buf363_buf364_buf366.unmet_dependencies = 
    [   MemoryDep(name='buf360', index=64*c0 + 122880*c1 + c2, size=(1920, 8, 64)),
        MemoryDep(name='buf362', index=c0, size=(1920, 512))]
buf361_buf362_buf365_buf363_buf364_buf366.met_dependencies = 
    [   MemoryDep(name='primals_282', index=c0, size=(1920,)),
        MemoryDep(name='primals_283', index=c0, size=(1920,))]
buf361_buf362_buf365_buf363_buf364_buf366.snodes = ['buf361', 'buf362', 'buf365', 'buf363', 'buf364', 'buf366']


buf367: SchedulerNode(ComputedBuffer)
buf367.writes = [MemoryDep(name='buf367', index=c0, size=(983040,))]
buf367.unmet_dependencies = 
    [   MemoryDep(name='buf360', index=c0, size=(983040,)),
        MemoryDep(name='buf362', index=c1, size=(8, 1920, 64)),
        MemoryDep(name='buf363', index=c1, size=(8, 1920, 64))]
buf367.met_dependencies = 
    [   MemoryDep(name='primals_284', index=c1, size=(8, 1920, 64)),
        MemoryDep(name='primals_285', index=c1, size=(8, 1920, 64))]
buf367.group.device = cuda:0
buf367.group.iteration = (983040, 1)
buf367.sizes = ([8, 1920, 64], [])
class buf367_loop_body:
    var_ranges = {z0: 8, z1: 1920, z2: 64}
    index0 = 122880*z0 + 64*z1 + z2
    index1 = z1
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf360', get_index)
        get_index_1 = self.get_index('index1')
        load_1 = ops.load('buf362', get_index_1)
        sub = ops.sub(load, load_1)
        get_index_2 = self.get_index('index1')
        load_2 = ops.load('buf363', get_index_2)
        constant = ops.constant(512, torch.float32)
        div = ops.div(load_2, constant)
        constant_1 = ops.constant(1e-05, torch.float32)
        add = ops.add(div, constant_1)
        rsqrt = ops.rsqrt(add)
        mul = ops.mul(sub, rsqrt)
        get_index_3 = self.get_index('index1')
        load_3 = ops.load('primals_284', get_index_3)
        mul_1 = ops.mul(mul, load_3)
        get_index_4 = self.get_index('index1')
        load_4 = ops.load('primals_285', get_index_4)
        add_1 = ops.add(mul_1, load_4)
        relu = ops.relu(add_1)
        get_index_5 = self.get_index('index0')
        store = ops.store('buf367', get_index_5, relu, None)
        return store


buf368: ExternKernelSchedulerNode(Convolution)
buf368.writes = [StarDep(name='buf368')]
buf368.unmet_dependencies = [StarDep(name='buf367')]
buf368.met_dependencies = [StarDep(name='primals_46')]
buf368.node.kernel = aten.convolution


buf369_buf370_buf373_buf371_buf372_buf374: FusedSchedulerNode(NoneType)
buf369_buf370_buf373_buf371_buf372_buf374.writes = 
    [   MemoryDep(name='buf369', index=c0, size=(1920, 512)),
        MemoryDep(name='buf369', index=c0, size=(1920,)),
        MemoryDep(name='buf370', index=c0, size=(1920,)),
        MemoryDep(name='buf371', index=c0, size=(1920, 512)),
        MemoryDep(name='buf371', index=c0, size=(1920,)),
        MemoryDep(name='buf372', index=c0, size=(1920,)),
        MemoryDep(name='buf373', index=c0, size=(1920,)),
        MemoryDep(name='buf374', index=c0, size=(1920,))]
buf369_buf370_buf373_buf371_buf372_buf374.unmet_dependencies = 
    [   MemoryDep(name='buf368', index=64*c0 + 122880*c1 + c2, size=(1920, 8, 64)),
        MemoryDep(name='buf370', index=c0, size=(1920, 512))]
buf369_buf370_buf373_buf371_buf372_buf374.met_dependencies = 
    [   MemoryDep(name='primals_287', index=c0, size=(1920,)),
        MemoryDep(name='primals_288', index=c0, size=(1920,))]
buf369_buf370_buf373_buf371_buf372_buf374.snodes = ['buf369', 'buf370', 'buf373', 'buf371', 'buf372', 'buf374']


buf375: SchedulerNode(ComputedBuffer)
buf375.writes = [MemoryDep(name='buf375', index=c0, size=(983040,))]
buf375.unmet_dependencies = 
    [   MemoryDep(name='buf368', index=c0, size=(983040,)),
        MemoryDep(name='buf370', index=c1, size=(8, 1920, 64)),
        MemoryDep(name='buf371', index=c1, size=(8, 1920, 64))]
buf375.met_dependencies = 
    [   MemoryDep(name='primals_289', index=c1, size=(8, 1920, 64)),
        MemoryDep(name='primals_290', index=c1, size=(8, 1920, 64))]
buf375.group.device = cuda:0
buf375.group.iteration = (983040, 1)
buf375.sizes = ([8, 1920, 64], [])
class buf375_loop_body:
    var_ranges = {z0: 8, z1: 1920, z2: 64}
    index0 = 122880*z0 + 64*z1 + z2
    index1 = z1
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf368', get_index)
        get_index_1 = self.get_index('index1')
        load_1 = ops.load('buf370', get_index_1)
        sub = ops.sub(load, load_1)
        get_index_2 = self.get_index('index1')
        load_2 = ops.load('buf371', get_index_2)
        constant = ops.constant(512, torch.float32)
        div = ops.div(load_2, constant)
        constant_1 = ops.constant(1e-05, torch.float32)
        add = ops.add(div, constant_1)
        rsqrt = ops.rsqrt(add)
        mul = ops.mul(sub, rsqrt)
        get_index_3 = self.get_index('index1')
        load_3 = ops.load('primals_289', get_index_3)
        mul_1 = ops.mul(mul, load_3)
        get_index_4 = self.get_index('index1')
        load_4 = ops.load('primals_290', get_index_4)
        add_1 = ops.add(mul_1, load_4)
        relu = ops.relu(add_1)
        get_index_5 = self.get_index('index0')
        store = ops.store('buf375', get_index_5, relu, None)
        return store


buf376: ExternKernelSchedulerNode(Convolution)
buf376.writes = [StarDep(name='buf376')]
buf376.unmet_dependencies = [StarDep(name='buf375')]
buf376.met_dependencies = [StarDep(name='primals_47')]
buf376.node.kernel = aten.convolution


buf377_buf378_buf381_buf379_buf380_buf382: FusedSchedulerNode(NoneType)
buf377_buf378_buf381_buf379_buf380_buf382.writes = 
    [   MemoryDep(name='buf377', index=c0, size=(640, 512)),
        MemoryDep(name='buf377', index=c0, size=(640,)),
        MemoryDep(name='buf378', index=c0, size=(640,)),
        MemoryDep(name='buf379', index=c0, size=(640, 512)),
        MemoryDep(name='buf379', index=c0, size=(640,)),
        MemoryDep(name='buf380', index=c0, size=(640,)),
        MemoryDep(name='buf381', index=c0, size=(640,)),
        MemoryDep(name='buf382', index=c0, size=(640,))]
buf377_buf378_buf381_buf379_buf380_buf382.unmet_dependencies = 
    [   MemoryDep(name='buf376', index=64*c0 + 40960*c1 + c2, size=(640, 8, 64)),
        MemoryDep(name='buf378', index=c0, size=(640, 512))]
buf377_buf378_buf381_buf379_buf380_buf382.met_dependencies = 
    [   MemoryDep(name='primals_292', index=c0, size=(640,)),
        MemoryDep(name='primals_293', index=c0, size=(640,))]
buf377_buf378_buf381_buf379_buf380_buf382.snodes = ['buf377', 'buf378', 'buf381', 'buf379', 'buf380', 'buf382']


buf383: SchedulerNode(ComputedBuffer)
buf383.writes = [MemoryDep(name='buf383', index=c0, size=(327680,))]
buf383.unmet_dependencies = 
    [   MemoryDep(name='buf359', index=c0, size=(327680,)),
        MemoryDep(name='buf376', index=c0, size=(327680,)),
        MemoryDep(name='buf378', index=c1, size=(8, 640, 64)),
        MemoryDep(name='buf379', index=c1, size=(8, 640, 64))]
buf383.met_dependencies = 
    [   MemoryDep(name='primals_294', index=c1, size=(8, 640, 64)),
        MemoryDep(name='primals_295', index=c1, size=(8, 640, 64))]
buf383.group.device = cuda:0
buf383.group.iteration = (327680, 1)
buf383.sizes = ([8, 640, 64], [])
class buf383_loop_body:
    var_ranges = {z0: 8, z1: 640, z2: 64}
    index0 = 40960*z0 + 64*z1 + z2
    index1 = z1
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf376', get_index)
        get_index_1 = self.get_index('index1')
        load_1 = ops.load('buf378', get_index_1)
        sub = ops.sub(load, load_1)
        get_index_2 = self.get_index('index1')
        load_2 = ops.load('buf379', get_index_2)
        constant = ops.constant(512, torch.float32)
        div = ops.div(load_2, constant)
        constant_1 = ops.constant(1e-05, torch.float32)
        add = ops.add(div, constant_1)
        rsqrt = ops.rsqrt(add)
        mul = ops.mul(sub, rsqrt)
        get_index_3 = self.get_index('index1')
        load_3 = ops.load('primals_294', get_index_3)
        mul_1 = ops.mul(mul, load_3)
        get_index_4 = self.get_index('index1')
        load_4 = ops.load('primals_295', get_index_4)
        add_1 = ops.add(mul_1, load_4)
        get_index_5 = self.get_index('index0')
        load_5 = ops.load('buf359', get_index_5)
        add_2 = ops.add(add_1, load_5)
        relu = ops.relu(add_2)
        get_index_6 = self.get_index('index0')
        store = ops.store('buf383', get_index_6, relu, None)
        return store


buf384: ExternKernelSchedulerNode(Convolution)
buf384.writes = [StarDep(name='buf384')]
buf384.unmet_dependencies = [StarDep(name='buf383')]
buf384.met_dependencies = [StarDep(name='primals_48')]
buf384.node.kernel = aten.convolution


buf385_buf386_buf389_buf387_buf388_buf390: FusedSchedulerNode(NoneType)
buf385_buf386_buf389_buf387_buf388_buf390.writes = 
    [   MemoryDep(name='buf385', index=c0, size=(1920, 512)),
        MemoryDep(name='buf385', index=c0, size=(1920,)),
        MemoryDep(name='buf386', index=c0, size=(1920,)),
        MemoryDep(name='buf387', index=c0, size=(1920, 512)),
        MemoryDep(name='buf387', index=c0, size=(1920,)),
        MemoryDep(name='buf388', index=c0, size=(1920,)),
        MemoryDep(name='buf389', index=c0, size=(1920,)),
        MemoryDep(name='buf390', index=c0, size=(1920,))]
buf385_buf386_buf389_buf387_buf388_buf390.unmet_dependencies = 
    [   MemoryDep(name='buf384', index=64*c0 + 122880*c1 + c2, size=(1920, 8, 64)),
        MemoryDep(name='buf386', index=c0, size=(1920, 512))]
buf385_buf386_buf389_buf387_buf388_buf390.met_dependencies = 
    [   MemoryDep(name='primals_297', index=c0, size=(1920,)),
        MemoryDep(name='primals_298', index=c0, size=(1920,))]
buf385_buf386_buf389_buf387_buf388_buf390.snodes = ['buf385', 'buf386', 'buf389', 'buf387', 'buf388', 'buf390']


buf391: SchedulerNode(ComputedBuffer)
buf391.writes = [MemoryDep(name='buf391', index=c0, size=(983040,))]
buf391.unmet_dependencies = 
    [   MemoryDep(name='buf384', index=c0, size=(983040,)),
        MemoryDep(name='buf386', index=c1, size=(8, 1920, 64)),
        MemoryDep(name='buf387', index=c1, size=(8, 1920, 64))]
buf391.met_dependencies = 
    [   MemoryDep(name='primals_299', index=c1, size=(8, 1920, 64)),
        MemoryDep(name='primals_300', index=c1, size=(8, 1920, 64))]
buf391.group.device = cuda:0
buf391.group.iteration = (983040, 1)
buf391.sizes = ([8, 1920, 64], [])
class buf391_loop_body:
    var_ranges = {z0: 8, z1: 1920, z2: 64}
    index0 = 122880*z0 + 64*z1 + z2
    index1 = z1
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf384', get_index)
        get_index_1 = self.get_index('index1')
        load_1 = ops.load('buf386', get_index_1)
        sub = ops.sub(load, load_1)
        get_index_2 = self.get_index('index1')
        load_2 = ops.load('buf387', get_index_2)
        constant = ops.constant(512, torch.float32)
        div = ops.div(load_2, constant)
        constant_1 = ops.constant(1e-05, torch.float32)
        add = ops.add(div, constant_1)
        rsqrt = ops.rsqrt(add)
        mul = ops.mul(sub, rsqrt)
        get_index_3 = self.get_index('index1')
        load_3 = ops.load('primals_299', get_index_3)
        mul_1 = ops.mul(mul, load_3)
        get_index_4 = self.get_index('index1')
        load_4 = ops.load('primals_300', get_index_4)
        add_1 = ops.add(mul_1, load_4)
        relu = ops.relu(add_1)
        get_index_5 = self.get_index('index0')
        store = ops.store('buf391', get_index_5, relu, None)
        return store


buf392: ExternKernelSchedulerNode(Convolution)
buf392.writes = [StarDep(name='buf392')]
buf392.unmet_dependencies = [StarDep(name='buf391')]
buf392.met_dependencies = [StarDep(name='primals_49')]
buf392.node.kernel = aten.convolution


buf393_buf394_buf397_buf395_buf396_buf398: FusedSchedulerNode(NoneType)
buf393_buf394_buf397_buf395_buf396_buf398.writes = 
    [   MemoryDep(name='buf393', index=c0, size=(1920, 512)),
        MemoryDep(name='buf393', index=c0, size=(1920,)),
        MemoryDep(name='buf394', index=c0, size=(1920,)),
        MemoryDep(name='buf395', index=c0, size=(1920, 512)),
        MemoryDep(name='buf395', index=c0, size=(1920,)),
        MemoryDep(name='buf396', index=c0, size=(1920,)),
        MemoryDep(name='buf397', index=c0, size=(1920,)),
        MemoryDep(name='buf398', index=c0, size=(1920,))]
buf393_buf394_buf397_buf395_buf396_buf398.unmet_dependencies = 
    [   MemoryDep(name='buf392', index=64*c0 + 122880*c1 + c2, size=(1920, 8, 64)),
        MemoryDep(name='buf394', index=c0, size=(1920, 512))]
buf393_buf394_buf397_buf395_buf396_buf398.met_dependencies = 
    [   MemoryDep(name='primals_302', index=c0, size=(1920,)),
        MemoryDep(name='primals_303', index=c0, size=(1920,))]
buf393_buf394_buf397_buf395_buf396_buf398.snodes = ['buf393', 'buf394', 'buf397', 'buf395', 'buf396', 'buf398']


buf399: SchedulerNode(ComputedBuffer)
buf399.writes = [MemoryDep(name='buf399', index=c0, size=(983040,))]
buf399.unmet_dependencies = 
    [   MemoryDep(name='buf392', index=c0, size=(983040,)),
        MemoryDep(name='buf394', index=c1, size=(8, 1920, 64)),
        MemoryDep(name='buf395', index=c1, size=(8, 1920, 64))]
buf399.met_dependencies = 
    [   MemoryDep(name='primals_304', index=c1, size=(8, 1920, 64)),
        MemoryDep(name='primals_305', index=c1, size=(8, 1920, 64))]
buf399.group.device = cuda:0
buf399.group.iteration = (983040, 1)
buf399.sizes = ([8, 1920, 64], [])
class buf399_loop_body:
    var_ranges = {z0: 8, z1: 1920, z2: 64}
    index0 = 122880*z0 + 64*z1 + z2
    index1 = z1
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf392', get_index)
        get_index_1 = self.get_index('index1')
        load_1 = ops.load('buf394', get_index_1)
        sub = ops.sub(load, load_1)
        get_index_2 = self.get_index('index1')
        load_2 = ops.load('buf395', get_index_2)
        constant = ops.constant(512, torch.float32)
        div = ops.div(load_2, constant)
        constant_1 = ops.constant(1e-05, torch.float32)
        add = ops.add(div, constant_1)
        rsqrt = ops.rsqrt(add)
        mul = ops.mul(sub, rsqrt)
        get_index_3 = self.get_index('index1')
        load_3 = ops.load('primals_304', get_index_3)
        mul_1 = ops.mul(mul, load_3)
        get_index_4 = self.get_index('index1')
        load_4 = ops.load('primals_305', get_index_4)
        add_1 = ops.add(mul_1, load_4)
        relu = ops.relu(add_1)
        get_index_5 = self.get_index('index0')
        store = ops.store('buf399', get_index_5, relu, None)
        return store


buf400: ExternKernelSchedulerNode(Convolution)
buf400.writes = [StarDep(name='buf400')]
buf400.unmet_dependencies = [StarDep(name='buf399')]
buf400.met_dependencies = [StarDep(name='primals_50')]
buf400.node.kernel = aten.convolution


buf401_buf402_buf405_buf403_buf404_buf406: FusedSchedulerNode(NoneType)
buf401_buf402_buf405_buf403_buf404_buf406.writes = 
    [   MemoryDep(name='buf401', index=c0, size=(640, 512)),
        MemoryDep(name='buf401', index=c0, size=(640,)),
        MemoryDep(name='buf402', index=c0, size=(640,)),
        MemoryDep(name='buf403', index=c0, size=(640, 512)),
        MemoryDep(name='buf403', index=c0, size=(640,)),
        MemoryDep(name='buf404', index=c0, size=(640,)),
        MemoryDep(name='buf405', index=c0, size=(640,)),
        MemoryDep(name='buf406', index=c0, size=(640,))]
buf401_buf402_buf405_buf403_buf404_buf406.unmet_dependencies = 
    [   MemoryDep(name='buf400', index=64*c0 + 40960*c1 + c2, size=(640, 8, 64)),
        MemoryDep(name='buf402', index=c0, size=(640, 512))]
buf401_buf402_buf405_buf403_buf404_buf406.met_dependencies = 
    [   MemoryDep(name='primals_307', index=c0, size=(640,)),
        MemoryDep(name='primals_308', index=c0, size=(640,))]
buf401_buf402_buf405_buf403_buf404_buf406.snodes = ['buf401', 'buf402', 'buf405', 'buf403', 'buf404', 'buf406']


buf407: SchedulerNode(ComputedBuffer)
buf407.writes = [MemoryDep(name='buf407', index=c0, size=(327680,))]
buf407.unmet_dependencies = 
    [   MemoryDep(name='buf383', index=c0, size=(327680,)),
        MemoryDep(name='buf400', index=c0, size=(327680,)),
        MemoryDep(name='buf402', index=c1, size=(8, 640, 64)),
        MemoryDep(name='buf403', index=c1, size=(8, 640, 64))]
buf407.met_dependencies = 
    [   MemoryDep(name='primals_309', index=c1, size=(8, 640, 64)),
        MemoryDep(name='primals_310', index=c1, size=(8, 640, 64))]
buf407.group.device = cuda:0
buf407.group.iteration = (327680, 1)
buf407.sizes = ([8, 640, 64], [])
class buf407_loop_body:
    var_ranges = {z0: 8, z1: 640, z2: 64}
    index0 = 40960*z0 + 64*z1 + z2
    index1 = z1
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf400', get_index)
        get_index_1 = self.get_index('index1')
        load_1 = ops.load('buf402', get_index_1)
        sub = ops.sub(load, load_1)
        get_index_2 = self.get_index('index1')
        load_2 = ops.load('buf403', get_index_2)
        constant = ops.constant(512, torch.float32)
        div = ops.div(load_2, constant)
        constant_1 = ops.constant(1e-05, torch.float32)
        add = ops.add(div, constant_1)
        rsqrt = ops.rsqrt(add)
        mul = ops.mul(sub, rsqrt)
        get_index_3 = self.get_index('index1')
        load_3 = ops.load('primals_309', get_index_3)
        mul_1 = ops.mul(mul, load_3)
        get_index_4 = self.get_index('index1')
        load_4 = ops.load('primals_310', get_index_4)
        add_1 = ops.add(mul_1, load_4)
        get_index_5 = self.get_index('index0')
        load_5 = ops.load('buf383', get_index_5)
        add_2 = ops.add(add_1, load_5)
        relu = ops.relu(add_2)
        get_index_6 = self.get_index('index0')
        store = ops.store('buf407', get_index_6, relu, None)
        return store


buf408: ExternKernelSchedulerNode(Convolution)
buf408.writes = [StarDep(name='buf408')]
buf408.unmet_dependencies = [StarDep(name='buf407')]
buf408.met_dependencies = [StarDep(name='primals_51')]
buf408.node.kernel = aten.convolution


buf409_buf410_buf413_buf411_buf412_buf414: FusedSchedulerNode(NoneType)
buf409_buf410_buf413_buf411_buf412_buf414.writes = 
    [   MemoryDep(name='buf409', index=c0, size=(1920, 512)),
        MemoryDep(name='buf409', index=c0, size=(1920,)),
        MemoryDep(name='buf410', index=c0, size=(1920,)),
        MemoryDep(name='buf411', index=c0, size=(1920, 512)),
        MemoryDep(name='buf411', index=c0, size=(1920,)),
        MemoryDep(name='buf412', index=c0, size=(1920,)),
        MemoryDep(name='buf413', index=c0, size=(1920,)),
        MemoryDep(name='buf414', index=c0, size=(1920,))]
buf409_buf410_buf413_buf411_buf412_buf414.unmet_dependencies = 
    [   MemoryDep(name='buf408', index=64*c0 + 122880*c1 + c2, size=(1920, 8, 64)),
        MemoryDep(name='buf410', index=c0, size=(1920, 512))]
buf409_buf410_buf413_buf411_buf412_buf414.met_dependencies = 
    [   MemoryDep(name='primals_312', index=c0, size=(1920,)),
        MemoryDep(name='primals_313', index=c0, size=(1920,))]
buf409_buf410_buf413_buf411_buf412_buf414.snodes = ['buf409', 'buf410', 'buf413', 'buf411', 'buf412', 'buf414']


buf415: SchedulerNode(ComputedBuffer)
buf415.writes = [MemoryDep(name='buf415', index=c0, size=(983040,))]
buf415.unmet_dependencies = 
    [   MemoryDep(name='buf408', index=c0, size=(983040,)),
        MemoryDep(name='buf410', index=c1, size=(8, 1920, 64)),
        MemoryDep(name='buf411', index=c1, size=(8, 1920, 64))]
buf415.met_dependencies = 
    [   MemoryDep(name='primals_314', index=c1, size=(8, 1920, 64)),
        MemoryDep(name='primals_315', index=c1, size=(8, 1920, 64))]
buf415.group.device = cuda:0
buf415.group.iteration = (983040, 1)
buf415.sizes = ([8, 1920, 64], [])
class buf415_loop_body:
    var_ranges = {z0: 8, z1: 1920, z2: 64}
    index0 = 122880*z0 + 64*z1 + z2
    index1 = z1
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf408', get_index)
        get_index_1 = self.get_index('index1')
        load_1 = ops.load('buf410', get_index_1)
        sub = ops.sub(load, load_1)
        get_index_2 = self.get_index('index1')
        load_2 = ops.load('buf411', get_index_2)
        constant = ops.constant(512, torch.float32)
        div = ops.div(load_2, constant)
        constant_1 = ops.constant(1e-05, torch.float32)
        add = ops.add(div, constant_1)
        rsqrt = ops.rsqrt(add)
        mul = ops.mul(sub, rsqrt)
        get_index_3 = self.get_index('index1')
        load_3 = ops.load('primals_314', get_index_3)
        mul_1 = ops.mul(mul, load_3)
        get_index_4 = self.get_index('index1')
        load_4 = ops.load('primals_315', get_index_4)
        add_1 = ops.add(mul_1, load_4)
        relu = ops.relu(add_1)
        get_index_5 = self.get_index('index0')
        store = ops.store('buf415', get_index_5, relu, None)
        return store


buf416: ExternKernelSchedulerNode(Convolution)
buf416.writes = [StarDep(name='buf416')]
buf416.unmet_dependencies = [StarDep(name='buf415')]
buf416.met_dependencies = [StarDep(name='primals_52')]
buf416.node.kernel = aten.convolution


buf417_buf418_buf421_buf419_buf420_buf422: FusedSchedulerNode(NoneType)
buf417_buf418_buf421_buf419_buf420_buf422.writes = 
    [   MemoryDep(name='buf417', index=c0, size=(1920, 512)),
        MemoryDep(name='buf417', index=c0, size=(1920,)),
        MemoryDep(name='buf418', index=c0, size=(1920,)),
        MemoryDep(name='buf419', index=c0, size=(1920, 512)),
        MemoryDep(name='buf419', index=c0, size=(1920,)),
        MemoryDep(name='buf420', index=c0, size=(1920,)),
        MemoryDep(name='buf421', index=c0, size=(1920,)),
        MemoryDep(name='buf422', index=c0, size=(1920,))]
buf417_buf418_buf421_buf419_buf420_buf422.unmet_dependencies = 
    [   MemoryDep(name='buf416', index=64*c0 + 122880*c1 + c2, size=(1920, 8, 64)),
        MemoryDep(name='buf418', index=c0, size=(1920, 512))]
buf417_buf418_buf421_buf419_buf420_buf422.met_dependencies = 
    [   MemoryDep(name='primals_317', index=c0, size=(1920,)),
        MemoryDep(name='primals_318', index=c0, size=(1920,))]
buf417_buf418_buf421_buf419_buf420_buf422.snodes = ['buf417', 'buf418', 'buf421', 'buf419', 'buf420', 'buf422']


buf423: SchedulerNode(ComputedBuffer)
buf423.writes = [MemoryDep(name='buf423', index=c0, size=(983040,))]
buf423.unmet_dependencies = 
    [   MemoryDep(name='buf416', index=c0, size=(983040,)),
        MemoryDep(name='buf418', index=c1, size=(8, 1920, 64)),
        MemoryDep(name='buf419', index=c1, size=(8, 1920, 64))]
buf423.met_dependencies = 
    [   MemoryDep(name='primals_319', index=c1, size=(8, 1920, 64)),
        MemoryDep(name='primals_320', index=c1, size=(8, 1920, 64))]
buf423.group.device = cuda:0
buf423.group.iteration = (983040, 1)
buf423.sizes = ([8, 1920, 64], [])
class buf423_loop_body:
    var_ranges = {z0: 8, z1: 1920, z2: 64}
    index0 = 122880*z0 + 64*z1 + z2
    index1 = z1
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf416', get_index)
        get_index_1 = self.get_index('index1')
        load_1 = ops.load('buf418', get_index_1)
        sub = ops.sub(load, load_1)
        get_index_2 = self.get_index('index1')
        load_2 = ops.load('buf419', get_index_2)
        constant = ops.constant(512, torch.float32)
        div = ops.div(load_2, constant)
        constant_1 = ops.constant(1e-05, torch.float32)
        add = ops.add(div, constant_1)
        rsqrt = ops.rsqrt(add)
        mul = ops.mul(sub, rsqrt)
        get_index_3 = self.get_index('index1')
        load_3 = ops.load('primals_319', get_index_3)
        mul_1 = ops.mul(mul, load_3)
        get_index_4 = self.get_index('index1')
        load_4 = ops.load('primals_320', get_index_4)
        add_1 = ops.add(mul_1, load_4)
        relu = ops.relu(add_1)
        get_index_5 = self.get_index('index0')
        store = ops.store('buf423', get_index_5, relu, None)
        return store


buf424: ExternKernelSchedulerNode(Convolution)
buf424.writes = [StarDep(name='buf424')]
buf424.unmet_dependencies = [StarDep(name='buf423')]
buf424.met_dependencies = [StarDep(name='primals_53')]
buf424.node.kernel = aten.convolution


buf425_buf426_buf429_buf427_buf428_buf430: FusedSchedulerNode(NoneType)
buf425_buf426_buf429_buf427_buf428_buf430.writes = 
    [   MemoryDep(name='buf425', index=c0, size=(640, 512)),
        MemoryDep(name='buf425', index=c0, size=(640,)),
        MemoryDep(name='buf426', index=c0, size=(640,)),
        MemoryDep(name='buf427', index=c0, size=(640, 512)),
        MemoryDep(name='buf427', index=c0, size=(640,)),
        MemoryDep(name='buf428', index=c0, size=(640,)),
        MemoryDep(name='buf429', index=c0, size=(640,)),
        MemoryDep(name='buf430', index=c0, size=(640,))]
buf425_buf426_buf429_buf427_buf428_buf430.unmet_dependencies = 
    [   MemoryDep(name='buf424', index=64*c0 + 40960*c1 + c2, size=(640, 8, 64)),
        MemoryDep(name='buf426', index=c0, size=(640, 512))]
buf425_buf426_buf429_buf427_buf428_buf430.met_dependencies = 
    [   MemoryDep(name='primals_322', index=c0, size=(640,)),
        MemoryDep(name='primals_323', index=c0, size=(640,))]
buf425_buf426_buf429_buf427_buf428_buf430.snodes = ['buf425', 'buf426', 'buf429', 'buf427', 'buf428', 'buf430']


buf431: SchedulerNode(ComputedBuffer)
buf431.writes = [MemoryDep(name='buf431', index=c0, size=(327680,))]
buf431.unmet_dependencies = 
    [   MemoryDep(name='buf407', index=c0, size=(327680,)),
        MemoryDep(name='buf424', index=c0, size=(327680,)),
        MemoryDep(name='buf426', index=c1, size=(8, 640, 64)),
        MemoryDep(name='buf427', index=c1, size=(8, 640, 64))]
buf431.met_dependencies = 
    [   MemoryDep(name='primals_324', index=c1, size=(8, 640, 64)),
        MemoryDep(name='primals_325', index=c1, size=(8, 640, 64))]
buf431.group.device = cuda:0
buf431.group.iteration = (327680, 1)
buf431.sizes = ([8, 640, 64], [])
class buf431_loop_body:
    var_ranges = {z0: 8, z1: 640, z2: 64}
    index0 = 40960*z0 + 64*z1 + z2
    index1 = z1
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf424', get_index)
        get_index_1 = self.get_index('index1')
        load_1 = ops.load('buf426', get_index_1)
        sub = ops.sub(load, load_1)
        get_index_2 = self.get_index('index1')
        load_2 = ops.load('buf427', get_index_2)
        constant = ops.constant(512, torch.float32)
        div = ops.div(load_2, constant)
        constant_1 = ops.constant(1e-05, torch.float32)
        add = ops.add(div, constant_1)
        rsqrt = ops.rsqrt(add)
        mul = ops.mul(sub, rsqrt)
        get_index_3 = self.get_index('index1')
        load_3 = ops.load('primals_324', get_index_3)
        mul_1 = ops.mul(mul, load_3)
        get_index_4 = self.get_index('index1')
        load_4 = ops.load('primals_325', get_index_4)
        add_1 = ops.add(mul_1, load_4)
        get_index_5 = self.get_index('index0')
        load_5 = ops.load('buf407', get_index_5)
        add_2 = ops.add(add_1, load_5)
        relu = ops.relu(add_2)
        get_index_6 = self.get_index('index0')
        store = ops.store('buf431', get_index_6, relu, None)
        return store


buf432: ExternKernelSchedulerNode(Convolution)
buf432.writes = [StarDep(name='buf432')]
buf432.unmet_dependencies = [StarDep(name='buf431')]
buf432.met_dependencies = [StarDep(name='primals_54')]
buf432.node.kernel = aten.convolution


buf433_buf434_buf437_buf435_buf436_buf438: FusedSchedulerNode(NoneType)
buf433_buf434_buf437_buf435_buf436_buf438.writes = 
    [   MemoryDep(name='buf433', index=c0, size=(1920, 512)),
        MemoryDep(name='buf433', index=c0, size=(1920,)),
        MemoryDep(name='buf434', index=c0, size=(1920,)),
        MemoryDep(name='buf435', index=c0, size=(1920, 512)),
        MemoryDep(name='buf435', index=c0, size=(1920,)),
        MemoryDep(name='buf436', index=c0, size=(1920,)),
        MemoryDep(name='buf437', index=c0, size=(1920,)),
        MemoryDep(name='buf438', index=c0, size=(1920,))]
buf433_buf434_buf437_buf435_buf436_buf438.unmet_dependencies = 
    [   MemoryDep(name='buf432', index=64*c0 + 122880*c1 + c2, size=(1920, 8, 64)),
        MemoryDep(name='buf434', index=c0, size=(1920, 512))]
buf433_buf434_buf437_buf435_buf436_buf438.met_dependencies = 
    [   MemoryDep(name='primals_327', index=c0, size=(1920,)),
        MemoryDep(name='primals_328', index=c0, size=(1920,))]
buf433_buf434_buf437_buf435_buf436_buf438.snodes = ['buf433', 'buf434', 'buf437', 'buf435', 'buf436', 'buf438']


buf439: SchedulerNode(ComputedBuffer)
buf439.writes = [MemoryDep(name='buf439', index=c0, size=(983040,))]
buf439.unmet_dependencies = 
    [   MemoryDep(name='buf432', index=c0, size=(983040,)),
        MemoryDep(name='buf434', index=c1, size=(8, 1920, 64)),
        MemoryDep(name='buf435', index=c1, size=(8, 1920, 64))]
buf439.met_dependencies = 
    [   MemoryDep(name='primals_329', index=c1, size=(8, 1920, 64)),
        MemoryDep(name='primals_330', index=c1, size=(8, 1920, 64))]
buf439.group.device = cuda:0
buf439.group.iteration = (983040, 1)
buf439.sizes = ([8, 1920, 64], [])
class buf439_loop_body:
    var_ranges = {z0: 8, z1: 1920, z2: 64}
    index0 = 122880*z0 + 64*z1 + z2
    index1 = z1
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf432', get_index)
        get_index_1 = self.get_index('index1')
        load_1 = ops.load('buf434', get_index_1)
        sub = ops.sub(load, load_1)
        get_index_2 = self.get_index('index1')
        load_2 = ops.load('buf435', get_index_2)
        constant = ops.constant(512, torch.float32)
        div = ops.div(load_2, constant)
        constant_1 = ops.constant(1e-05, torch.float32)
        add = ops.add(div, constant_1)
        rsqrt = ops.rsqrt(add)
        mul = ops.mul(sub, rsqrt)
        get_index_3 = self.get_index('index1')
        load_3 = ops.load('primals_329', get_index_3)
        mul_1 = ops.mul(mul, load_3)
        get_index_4 = self.get_index('index1')
        load_4 = ops.load('primals_330', get_index_4)
        add_1 = ops.add(mul_1, load_4)
        relu = ops.relu(add_1)
        get_index_5 = self.get_index('index0')
        store = ops.store('buf439', get_index_5, relu, None)
        return store


buf440: ExternKernelSchedulerNode(Convolution)
buf440.writes = [StarDep(name='buf440')]
buf440.unmet_dependencies = [StarDep(name='buf439')]
buf440.met_dependencies = [StarDep(name='primals_55')]
buf440.node.kernel = aten.convolution


buf441_buf442_buf445_buf443_buf444_buf446: FusedSchedulerNode(NoneType)
buf441_buf442_buf445_buf443_buf444_buf446.writes = 
    [   MemoryDep(name='buf441', index=c0, size=(1920, 512)),
        MemoryDep(name='buf441', index=c0, size=(1920,)),
        MemoryDep(name='buf442', index=c0, size=(1920,)),
        MemoryDep(name='buf443', index=c0, size=(1920, 512)),
        MemoryDep(name='buf443', index=c0, size=(1920,)),
        MemoryDep(name='buf444', index=c0, size=(1920,)),
        MemoryDep(name='buf445', index=c0, size=(1920,)),
        MemoryDep(name='buf446', index=c0, size=(1920,))]
buf441_buf442_buf445_buf443_buf444_buf446.unmet_dependencies = 
    [   MemoryDep(name='buf440', index=64*c0 + 122880*c1 + c2, size=(1920, 8, 64)),
        MemoryDep(name='buf442', index=c0, size=(1920, 512))]
buf441_buf442_buf445_buf443_buf444_buf446.met_dependencies = 
    [   MemoryDep(name='primals_332', index=c0, size=(1920,)),
        MemoryDep(name='primals_333', index=c0, size=(1920,))]
buf441_buf442_buf445_buf443_buf444_buf446.snodes = ['buf441', 'buf442', 'buf445', 'buf443', 'buf444', 'buf446']


buf447: SchedulerNode(ComputedBuffer)
buf447.writes = [MemoryDep(name='buf447', index=c0, size=(983040,))]
buf447.unmet_dependencies = 
    [   MemoryDep(name='buf440', index=c0, size=(983040,)),
        MemoryDep(name='buf442', index=c1, size=(8, 1920, 64)),
        MemoryDep(name='buf443', index=c1, size=(8, 1920, 64))]
buf447.met_dependencies = 
    [   MemoryDep(name='primals_334', index=c1, size=(8, 1920, 64)),
        MemoryDep(name='primals_335', index=c1, size=(8, 1920, 64))]
buf447.group.device = cuda:0
buf447.group.iteration = (983040, 1)
buf447.sizes = ([8, 1920, 64], [])
class buf447_loop_body:
    var_ranges = {z0: 8, z1: 1920, z2: 64}
    index0 = 122880*z0 + 64*z1 + z2
    index1 = z1
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf440', get_index)
        get_index_1 = self.get_index('index1')
        load_1 = ops.load('buf442', get_index_1)
        sub = ops.sub(load, load_1)
        get_index_2 = self.get_index('index1')
        load_2 = ops.load('buf443', get_index_2)
        constant = ops.constant(512, torch.float32)
        div = ops.div(load_2, constant)
        constant_1 = ops.constant(1e-05, torch.float32)
        add = ops.add(div, constant_1)
        rsqrt = ops.rsqrt(add)
        mul = ops.mul(sub, rsqrt)
        get_index_3 = self.get_index('index1')
        load_3 = ops.load('primals_334', get_index_3)
        mul_1 = ops.mul(mul, load_3)
        get_index_4 = self.get_index('index1')
        load_4 = ops.load('primals_335', get_index_4)
        add_1 = ops.add(mul_1, load_4)
        relu = ops.relu(add_1)
        get_index_5 = self.get_index('index0')
        store = ops.store('buf447', get_index_5, relu, None)
        return store


buf448: ExternKernelSchedulerNode(Convolution)
buf448.writes = [StarDep(name='buf448')]
buf448.unmet_dependencies = [StarDep(name='buf447')]
buf448.met_dependencies = [StarDep(name='primals_56')]
buf448.node.kernel = aten.convolution


buf449_buf450_buf453_buf451_buf452_buf454: FusedSchedulerNode(NoneType)
buf449_buf450_buf453_buf451_buf452_buf454.writes = 
    [   MemoryDep(name='buf449', index=c0, size=(640, 512)),
        MemoryDep(name='buf449', index=c0, size=(640,)),
        MemoryDep(name='buf450', index=c0, size=(640,)),
        MemoryDep(name='buf451', index=c0, size=(640, 512)),
        MemoryDep(name='buf451', index=c0, size=(640,)),
        MemoryDep(name='buf452', index=c0, size=(640,)),
        MemoryDep(name='buf453', index=c0, size=(640,)),
        MemoryDep(name='buf454', index=c0, size=(640,))]
buf449_buf450_buf453_buf451_buf452_buf454.unmet_dependencies = 
    [   MemoryDep(name='buf448', index=64*c0 + 40960*c1 + c2, size=(640, 8, 64)),
        MemoryDep(name='buf450', index=c0, size=(640, 512))]
buf449_buf450_buf453_buf451_buf452_buf454.met_dependencies = 
    [   MemoryDep(name='primals_337', index=c0, size=(640,)),
        MemoryDep(name='primals_338', index=c0, size=(640,))]
buf449_buf450_buf453_buf451_buf452_buf454.snodes = ['buf449', 'buf450', 'buf453', 'buf451', 'buf452', 'buf454']


buf455: SchedulerNode(ComputedBuffer)
buf455.writes = [MemoryDep(name='buf455', index=c0, size=(327680,))]
buf455.unmet_dependencies = 
    [   MemoryDep(name='buf431', index=c0, size=(327680,)),
        MemoryDep(name='buf448', index=c0, size=(327680,)),
        MemoryDep(name='buf450', index=c1, size=(8, 640, 64)),
        MemoryDep(name='buf451', index=c1, size=(8, 640, 64))]
buf455.met_dependencies = 
    [   MemoryDep(name='primals_339', index=c1, size=(8, 640, 64)),
        MemoryDep(name='primals_340', index=c1, size=(8, 640, 64))]
buf455.group.device = cuda:0
buf455.group.iteration = (327680, 1)
buf455.sizes = ([8, 640, 64], [])
class buf455_loop_body:
    var_ranges = {z0: 8, z1: 640, z2: 64}
    index0 = 40960*z0 + 64*z1 + z2
    index1 = z1
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf448', get_index)
        get_index_1 = self.get_index('index1')
        load_1 = ops.load('buf450', get_index_1)
        sub = ops.sub(load, load_1)
        get_index_2 = self.get_index('index1')
        load_2 = ops.load('buf451', get_index_2)
        constant = ops.constant(512, torch.float32)
        div = ops.div(load_2, constant)
        constant_1 = ops.constant(1e-05, torch.float32)
        add = ops.add(div, constant_1)
        rsqrt = ops.rsqrt(add)
        mul = ops.mul(sub, rsqrt)
        get_index_3 = self.get_index('index1')
        load_3 = ops.load('primals_339', get_index_3)
        mul_1 = ops.mul(mul, load_3)
        get_index_4 = self.get_index('index1')
        load_4 = ops.load('primals_340', get_index_4)
        add_1 = ops.add(mul_1, load_4)
        get_index_5 = self.get_index('index0')
        load_5 = ops.load('buf431', get_index_5)
        add_2 = ops.add(add_1, load_5)
        relu = ops.relu(add_2)
        get_index_6 = self.get_index('index0')
        store = ops.store('buf455', get_index_6, relu, None)
        return store


buf456: ExternKernelSchedulerNode(Convolution)
buf456.writes = [StarDep(name='buf456')]
buf456.unmet_dependencies = [StarDep(name='buf455')]
buf456.met_dependencies = [StarDep(name='primals_57')]
buf456.node.kernel = aten.convolution


buf457_buf458_buf461_buf459_buf460_buf462: FusedSchedulerNode(NoneType)
buf457_buf458_buf461_buf459_buf460_buf462.writes = 
    [   MemoryDep(name='buf457', index=c0, size=(2560, 512)),
        MemoryDep(name='buf457', index=c0, size=(2560,)),
        MemoryDep(name='buf458', index=c0, size=(2560,)),
        MemoryDep(name='buf459', index=c0, size=(2560, 512)),
        MemoryDep(name='buf459', index=c0, size=(2560,)),
        MemoryDep(name='buf460', index=c0, size=(2560,)),
        MemoryDep(name='buf461', index=c0, size=(2560,)),
        MemoryDep(name='buf462', index=c0, size=(2560,))]
buf457_buf458_buf461_buf459_buf460_buf462.unmet_dependencies = 
    [   MemoryDep(name='buf456', index=64*c0 + 163840*c1 + c2, size=(2560, 8, 64)),
        MemoryDep(name='buf458', index=c0, size=(2560, 512))]
buf457_buf458_buf461_buf459_buf460_buf462.met_dependencies = 
    [   MemoryDep(name='primals_342', index=c0, size=(2560,)),
        MemoryDep(name='primals_343', index=c0, size=(2560,))]
buf457_buf458_buf461_buf459_buf460_buf462.snodes = ['buf457', 'buf458', 'buf461', 'buf459', 'buf460', 'buf462']


buf463_buf467_buf464_buf465: FusedSchedulerNode(NoneType)
buf463_buf467_buf464_buf465.writes = 
    [   MemoryDep(name='buf463', index=c0, size=(1310720,)),
        MemoryDep(name='buf464', index=c0, size=(20480, 64)),
        MemoryDep(name='buf464', index=c0, size=(20480,)),
        MemoryDep(name='buf465', index=c0, size=(20480,)),
        MemoryDep(name='buf467', index=c0, size=(1310720,))]
buf463_buf467_buf464_buf465.unmet_dependencies = 
    [   MemoryDep(name='buf456', index=c0, size=(1310720,)),
        MemoryDep(name='buf458', index=c1, size=(8, 2560, 64)),
        MemoryDep(name='buf459', index=c1, size=(8, 2560, 64))]
buf463_buf467_buf464_buf465.met_dependencies = 
    [   MemoryDep(name='primals_344', index=c1, size=(8, 2560, 64)),
        MemoryDep(name='primals_345', index=c1, size=(8, 2560, 64))]
buf463_buf467_buf464_buf465.snodes = ['buf463', 'buf467', 'buf464', 'buf465']


buf466: ExternKernelSchedulerNode(ExternKernelOut)
buf466.writes = [StarDep(name='buf466')]
buf466.unmet_dependencies = [StarDep(name='buf465')]
buf466.met_dependencies = [StarDep(name='primals_58'), StarDep(name='primals_59')]
buf466.node.kernel = extern_kernels.addmm


buf468: SchedulerNode(ComputedBuffer)
buf468.writes = [MemoryDep(name='buf468', index=0, size=())]
buf468.unmet_dependencies = []
buf468.met_dependencies = [MemoryDep(name='primals_61', index=0, size=())]
buf468.group.device = cuda:0
buf468.group.iteration = (1, 1)
buf468.sizes = ([], [])
class buf468_loop_body:
    var_ranges = {}
    index0 = 0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('primals_61', get_index)
        constant = ops.constant(1, torch.int64)
        add = ops.add(load, constant)
        get_index_1 = self.get_index('index0')
        store = ops.store('buf468', get_index_1, add, None)
        return store


buf469: SchedulerNode(ComputedBuffer)
buf469.writes = [MemoryDep(name='buf469', index=0, size=())]
buf469.unmet_dependencies = []
buf469.met_dependencies = [MemoryDep(name='primals_66', index=0, size=())]
buf469.group.device = cuda:0
buf469.group.iteration = (1, 1)
buf469.sizes = ([], [])
class buf469_loop_body:
    var_ranges = {}
    index0 = 0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('primals_66', get_index)
        constant = ops.constant(1, torch.int64)
        add = ops.add(load, constant)
        get_index_1 = self.get_index('index0')
        store = ops.store('buf469', get_index_1, add, None)
        return store


buf470: SchedulerNode(ComputedBuffer)
buf470.writes = [MemoryDep(name='buf470', index=0, size=())]
buf470.unmet_dependencies = []
buf470.met_dependencies = [MemoryDep(name='primals_71', index=0, size=())]
buf470.group.device = cuda:0
buf470.group.iteration = (1, 1)
buf470.sizes = ([], [])
class buf470_loop_body:
    var_ranges = {}
    index0 = 0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('primals_71', get_index)
        constant = ops.constant(1, torch.int64)
        add = ops.add(load, constant)
        get_index_1 = self.get_index('index0')
        store = ops.store('buf470', get_index_1, add, None)
        return store


buf471: SchedulerNode(ComputedBuffer)
buf471.writes = [MemoryDep(name='buf471', index=0, size=())]
buf471.unmet_dependencies = []
buf471.met_dependencies = [MemoryDep(name='primals_76', index=0, size=())]
buf471.group.device = cuda:0
buf471.group.iteration = (1, 1)
buf471.sizes = ([], [])
class buf471_loop_body:
    var_ranges = {}
    index0 = 0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('primals_76', get_index)
        constant = ops.constant(1, torch.int64)
        add = ops.add(load, constant)
        get_index_1 = self.get_index('index0')
        store = ops.store('buf471', get_index_1, add, None)
        return store


buf472: SchedulerNode(ComputedBuffer)
buf472.writes = [MemoryDep(name='buf472', index=0, size=())]
buf472.unmet_dependencies = []
buf472.met_dependencies = [MemoryDep(name='primals_81', index=0, size=())]
buf472.group.device = cuda:0
buf472.group.iteration = (1, 1)
buf472.sizes = ([], [])
class buf472_loop_body:
    var_ranges = {}
    index0 = 0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('primals_81', get_index)
        constant = ops.constant(1, torch.int64)
        add = ops.add(load, constant)
        get_index_1 = self.get_index('index0')
        store = ops.store('buf472', get_index_1, add, None)
        return store


buf473: SchedulerNode(ComputedBuffer)
buf473.writes = [MemoryDep(name='buf473', index=0, size=())]
buf473.unmet_dependencies = []
buf473.met_dependencies = [MemoryDep(name='primals_86', index=0, size=())]
buf473.group.device = cuda:0
buf473.group.iteration = (1, 1)
buf473.sizes = ([], [])
class buf473_loop_body:
    var_ranges = {}
    index0 = 0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('primals_86', get_index)
        constant = ops.constant(1, torch.int64)
        add = ops.add(load, constant)
        get_index_1 = self.get_index('index0')
        store = ops.store('buf473', get_index_1, add, None)
        return store


buf474: SchedulerNode(ComputedBuffer)
buf474.writes = [MemoryDep(name='buf474', index=0, size=())]
buf474.unmet_dependencies = []
buf474.met_dependencies = [MemoryDep(name='primals_91', index=0, size=())]
buf474.group.device = cuda:0
buf474.group.iteration = (1, 1)
buf474.sizes = ([], [])
class buf474_loop_body:
    var_ranges = {}
    index0 = 0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('primals_91', get_index)
        constant = ops.constant(1, torch.int64)
        add = ops.add(load, constant)
        get_index_1 = self.get_index('index0')
        store = ops.store('buf474', get_index_1, add, None)
        return store


buf475: SchedulerNode(ComputedBuffer)
buf475.writes = [MemoryDep(name='buf475', index=0, size=())]
buf475.unmet_dependencies = []
buf475.met_dependencies = [MemoryDep(name='primals_96', index=0, size=())]
buf475.group.device = cuda:0
buf475.group.iteration = (1, 1)
buf475.sizes = ([], [])
class buf475_loop_body:
    var_ranges = {}
    index0 = 0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('primals_96', get_index)
        constant = ops.constant(1, torch.int64)
        add = ops.add(load, constant)
        get_index_1 = self.get_index('index0')
        store = ops.store('buf475', get_index_1, add, None)
        return store


buf476: SchedulerNode(ComputedBuffer)
buf476.writes = [MemoryDep(name='buf476', index=0, size=())]
buf476.unmet_dependencies = []
buf476.met_dependencies = [MemoryDep(name='primals_101', index=0, size=())]
buf476.group.device = cuda:0
buf476.group.iteration = (1, 1)
buf476.sizes = ([], [])
class buf476_loop_body:
    var_ranges = {}
    index0 = 0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('primals_101', get_index)
        constant = ops.constant(1, torch.int64)
        add = ops.add(load, constant)
        get_index_1 = self.get_index('index0')
        store = ops.store('buf476', get_index_1, add, None)
        return store


buf477: SchedulerNode(ComputedBuffer)
buf477.writes = [MemoryDep(name='buf477', index=0, size=())]
buf477.unmet_dependencies = []
buf477.met_dependencies = [MemoryDep(name='primals_106', index=0, size=())]
buf477.group.device = cuda:0
buf477.group.iteration = (1, 1)
buf477.sizes = ([], [])
class buf477_loop_body:
    var_ranges = {}
    index0 = 0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('primals_106', get_index)
        constant = ops.constant(1, torch.int64)
        add = ops.add(load, constant)
        get_index_1 = self.get_index('index0')
        store = ops.store('buf477', get_index_1, add, None)
        return store


buf478: SchedulerNode(ComputedBuffer)
buf478.writes = [MemoryDep(name='buf478', index=0, size=())]
buf478.unmet_dependencies = []
buf478.met_dependencies = [MemoryDep(name='primals_111', index=0, size=())]
buf478.group.device = cuda:0
buf478.group.iteration = (1, 1)
buf478.sizes = ([], [])
class buf478_loop_body:
    var_ranges = {}
    index0 = 0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('primals_111', get_index)
        constant = ops.constant(1, torch.int64)
        add = ops.add(load, constant)
        get_index_1 = self.get_index('index0')
        store = ops.store('buf478', get_index_1, add, None)
        return store


buf479: SchedulerNode(ComputedBuffer)
buf479.writes = [MemoryDep(name='buf479', index=0, size=())]
buf479.unmet_dependencies = []
buf479.met_dependencies = [MemoryDep(name='primals_116', index=0, size=())]
buf479.group.device = cuda:0
buf479.group.iteration = (1, 1)
buf479.sizes = ([], [])
class buf479_loop_body:
    var_ranges = {}
    index0 = 0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('primals_116', get_index)
        constant = ops.constant(1, torch.int64)
        add = ops.add(load, constant)
        get_index_1 = self.get_index('index0')
        store = ops.store('buf479', get_index_1, add, None)
        return store


buf480: SchedulerNode(ComputedBuffer)
buf480.writes = [MemoryDep(name='buf480', index=0, size=())]
buf480.unmet_dependencies = []
buf480.met_dependencies = [MemoryDep(name='primals_121', index=0, size=())]
buf480.group.device = cuda:0
buf480.group.iteration = (1, 1)
buf480.sizes = ([], [])
class buf480_loop_body:
    var_ranges = {}
    index0 = 0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('primals_121', get_index)
        constant = ops.constant(1, torch.int64)
        add = ops.add(load, constant)
        get_index_1 = self.get_index('index0')
        store = ops.store('buf480', get_index_1, add, None)
        return store


buf481: SchedulerNode(ComputedBuffer)
buf481.writes = [MemoryDep(name='buf481', index=0, size=())]
buf481.unmet_dependencies = []
buf481.met_dependencies = [MemoryDep(name='primals_126', index=0, size=())]
buf481.group.device = cuda:0
buf481.group.iteration = (1, 1)
buf481.sizes = ([], [])
class buf481_loop_body:
    var_ranges = {}
    index0 = 0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('primals_126', get_index)
        constant = ops.constant(1, torch.int64)
        add = ops.add(load, constant)
        get_index_1 = self.get_index('index0')
        store = ops.store('buf481', get_index_1, add, None)
        return store


buf482: SchedulerNode(ComputedBuffer)
buf482.writes = [MemoryDep(name='buf482', index=0, size=())]
buf482.unmet_dependencies = []
buf482.met_dependencies = [MemoryDep(name='primals_131', index=0, size=())]
buf482.group.device = cuda:0
buf482.group.iteration = (1, 1)
buf482.sizes = ([], [])
class buf482_loop_body:
    var_ranges = {}
    index0 = 0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('primals_131', get_index)
        constant = ops.constant(1, torch.int64)
        add = ops.add(load, constant)
        get_index_1 = self.get_index('index0')
        store = ops.store('buf482', get_index_1, add, None)
        return store


buf483: SchedulerNode(ComputedBuffer)
buf483.writes = [MemoryDep(name='buf483', index=0, size=())]
buf483.unmet_dependencies = []
buf483.met_dependencies = [MemoryDep(name='primals_136', index=0, size=())]
buf483.group.device = cuda:0
buf483.group.iteration = (1, 1)
buf483.sizes = ([], [])
class buf483_loop_body:
    var_ranges = {}
    index0 = 0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('primals_136', get_index)
        constant = ops.constant(1, torch.int64)
        add = ops.add(load, constant)
        get_index_1 = self.get_index('index0')
        store = ops.store('buf483', get_index_1, add, None)
        return store


buf484: SchedulerNode(ComputedBuffer)
buf484.writes = [MemoryDep(name='buf484', index=0, size=())]
buf484.unmet_dependencies = []
buf484.met_dependencies = [MemoryDep(name='primals_141', index=0, size=())]
buf484.group.device = cuda:0
buf484.group.iteration = (1, 1)
buf484.sizes = ([], [])
class buf484_loop_body:
    var_ranges = {}
    index0 = 0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('primals_141', get_index)
        constant = ops.constant(1, torch.int64)
        add = ops.add(load, constant)
        get_index_1 = self.get_index('index0')
        store = ops.store('buf484', get_index_1, add, None)
        return store


buf485: SchedulerNode(ComputedBuffer)
buf485.writes = [MemoryDep(name='buf485', index=0, size=())]
buf485.unmet_dependencies = []
buf485.met_dependencies = [MemoryDep(name='primals_146', index=0, size=())]
buf485.group.device = cuda:0
buf485.group.iteration = (1, 1)
buf485.sizes = ([], [])
class buf485_loop_body:
    var_ranges = {}
    index0 = 0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('primals_146', get_index)
        constant = ops.constant(1, torch.int64)
        add = ops.add(load, constant)
        get_index_1 = self.get_index('index0')
        store = ops.store('buf485', get_index_1, add, None)
        return store


buf486: SchedulerNode(ComputedBuffer)
buf486.writes = [MemoryDep(name='buf486', index=0, size=())]
buf486.unmet_dependencies = []
buf486.met_dependencies = [MemoryDep(name='primals_151', index=0, size=())]
buf486.group.device = cuda:0
buf486.group.iteration = (1, 1)
buf486.sizes = ([], [])
class buf486_loop_body:
    var_ranges = {}
    index0 = 0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('primals_151', get_index)
        constant = ops.constant(1, torch.int64)
        add = ops.add(load, constant)
        get_index_1 = self.get_index('index0')
        store = ops.store('buf486', get_index_1, add, None)
        return store


buf487: SchedulerNode(ComputedBuffer)
buf487.writes = [MemoryDep(name='buf487', index=0, size=())]
buf487.unmet_dependencies = []
buf487.met_dependencies = [MemoryDep(name='primals_156', index=0, size=())]
buf487.group.device = cuda:0
buf487.group.iteration = (1, 1)
buf487.sizes = ([], [])
class buf487_loop_body:
    var_ranges = {}
    index0 = 0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('primals_156', get_index)
        constant = ops.constant(1, torch.int64)
        add = ops.add(load, constant)
        get_index_1 = self.get_index('index0')
        store = ops.store('buf487', get_index_1, add, None)
        return store


buf488: SchedulerNode(ComputedBuffer)
buf488.writes = [MemoryDep(name='buf488', index=0, size=())]
buf488.unmet_dependencies = []
buf488.met_dependencies = [MemoryDep(name='primals_161', index=0, size=())]
buf488.group.device = cuda:0
buf488.group.iteration = (1, 1)
buf488.sizes = ([], [])
class buf488_loop_body:
    var_ranges = {}
    index0 = 0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('primals_161', get_index)
        constant = ops.constant(1, torch.int64)
        add = ops.add(load, constant)
        get_index_1 = self.get_index('index0')
        store = ops.store('buf488', get_index_1, add, None)
        return store


buf489: SchedulerNode(ComputedBuffer)
buf489.writes = [MemoryDep(name='buf489', index=0, size=())]
buf489.unmet_dependencies = []
buf489.met_dependencies = [MemoryDep(name='primals_166', index=0, size=())]
buf489.group.device = cuda:0
buf489.group.iteration = (1, 1)
buf489.sizes = ([], [])
class buf489_loop_body:
    var_ranges = {}
    index0 = 0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('primals_166', get_index)
        constant = ops.constant(1, torch.int64)
        add = ops.add(load, constant)
        get_index_1 = self.get_index('index0')
        store = ops.store('buf489', get_index_1, add, None)
        return store


buf490: SchedulerNode(ComputedBuffer)
buf490.writes = [MemoryDep(name='buf490', index=0, size=())]
buf490.unmet_dependencies = []
buf490.met_dependencies = [MemoryDep(name='primals_171', index=0, size=())]
buf490.group.device = cuda:0
buf490.group.iteration = (1, 1)
buf490.sizes = ([], [])
class buf490_loop_body:
    var_ranges = {}
    index0 = 0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('primals_171', get_index)
        constant = ops.constant(1, torch.int64)
        add = ops.add(load, constant)
        get_index_1 = self.get_index('index0')
        store = ops.store('buf490', get_index_1, add, None)
        return store


buf491: SchedulerNode(ComputedBuffer)
buf491.writes = [MemoryDep(name='buf491', index=0, size=())]
buf491.unmet_dependencies = []
buf491.met_dependencies = [MemoryDep(name='primals_176', index=0, size=())]
buf491.group.device = cuda:0
buf491.group.iteration = (1, 1)
buf491.sizes = ([], [])
class buf491_loop_body:
    var_ranges = {}
    index0 = 0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('primals_176', get_index)
        constant = ops.constant(1, torch.int64)
        add = ops.add(load, constant)
        get_index_1 = self.get_index('index0')
        store = ops.store('buf491', get_index_1, add, None)
        return store


buf492: SchedulerNode(ComputedBuffer)
buf492.writes = [MemoryDep(name='buf492', index=0, size=())]
buf492.unmet_dependencies = []
buf492.met_dependencies = [MemoryDep(name='primals_181', index=0, size=())]
buf492.group.device = cuda:0
buf492.group.iteration = (1, 1)
buf492.sizes = ([], [])
class buf492_loop_body:
    var_ranges = {}
    index0 = 0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('primals_181', get_index)
        constant = ops.constant(1, torch.int64)
        add = ops.add(load, constant)
        get_index_1 = self.get_index('index0')
        store = ops.store('buf492', get_index_1, add, None)
        return store


buf493: SchedulerNode(ComputedBuffer)
buf493.writes = [MemoryDep(name='buf493', index=0, size=())]
buf493.unmet_dependencies = []
buf493.met_dependencies = [MemoryDep(name='primals_186', index=0, size=())]
buf493.group.device = cuda:0
buf493.group.iteration = (1, 1)
buf493.sizes = ([], [])
class buf493_loop_body:
    var_ranges = {}
    index0 = 0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('primals_186', get_index)
        constant = ops.constant(1, torch.int64)
        add = ops.add(load, constant)
        get_index_1 = self.get_index('index0')
        store = ops.store('buf493', get_index_1, add, None)
        return store


buf494: SchedulerNode(ComputedBuffer)
buf494.writes = [MemoryDep(name='buf494', index=0, size=())]
buf494.unmet_dependencies = []
buf494.met_dependencies = [MemoryDep(name='primals_191', index=0, size=())]
buf494.group.device = cuda:0
buf494.group.iteration = (1, 1)
buf494.sizes = ([], [])
class buf494_loop_body:
    var_ranges = {}
    index0 = 0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('primals_191', get_index)
        constant = ops.constant(1, torch.int64)
        add = ops.add(load, constant)
        get_index_1 = self.get_index('index0')
        store = ops.store('buf494', get_index_1, add, None)
        return store


buf495: SchedulerNode(ComputedBuffer)
buf495.writes = [MemoryDep(name='buf495', index=0, size=())]
buf495.unmet_dependencies = []
buf495.met_dependencies = [MemoryDep(name='primals_196', index=0, size=())]
buf495.group.device = cuda:0
buf495.group.iteration = (1, 1)
buf495.sizes = ([], [])
class buf495_loop_body:
    var_ranges = {}
    index0 = 0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('primals_196', get_index)
        constant = ops.constant(1, torch.int64)
        add = ops.add(load, constant)
        get_index_1 = self.get_index('index0')
        store = ops.store('buf495', get_index_1, add, None)
        return store


buf496: SchedulerNode(ComputedBuffer)
buf496.writes = [MemoryDep(name='buf496', index=0, size=())]
buf496.unmet_dependencies = []
buf496.met_dependencies = [MemoryDep(name='primals_201', index=0, size=())]
buf496.group.device = cuda:0
buf496.group.iteration = (1, 1)
buf496.sizes = ([], [])
class buf496_loop_body:
    var_ranges = {}
    index0 = 0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('primals_201', get_index)
        constant = ops.constant(1, torch.int64)
        add = ops.add(load, constant)
        get_index_1 = self.get_index('index0')
        store = ops.store('buf496', get_index_1, add, None)
        return store


buf497: SchedulerNode(ComputedBuffer)
buf497.writes = [MemoryDep(name='buf497', index=0, size=())]
buf497.unmet_dependencies = []
buf497.met_dependencies = [MemoryDep(name='primals_206', index=0, size=())]
buf497.group.device = cuda:0
buf497.group.iteration = (1, 1)
buf497.sizes = ([], [])
class buf497_loop_body:
    var_ranges = {}
    index0 = 0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('primals_206', get_index)
        constant = ops.constant(1, torch.int64)
        add = ops.add(load, constant)
        get_index_1 = self.get_index('index0')
        store = ops.store('buf497', get_index_1, add, None)
        return store


buf498: SchedulerNode(ComputedBuffer)
buf498.writes = [MemoryDep(name='buf498', index=0, size=())]
buf498.unmet_dependencies = []
buf498.met_dependencies = [MemoryDep(name='primals_211', index=0, size=())]
buf498.group.device = cuda:0
buf498.group.iteration = (1, 1)
buf498.sizes = ([], [])
class buf498_loop_body:
    var_ranges = {}
    index0 = 0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('primals_211', get_index)
        constant = ops.constant(1, torch.int64)
        add = ops.add(load, constant)
        get_index_1 = self.get_index('index0')
        store = ops.store('buf498', get_index_1, add, None)
        return store


buf499: SchedulerNode(ComputedBuffer)
buf499.writes = [MemoryDep(name='buf499', index=0, size=())]
buf499.unmet_dependencies = []
buf499.met_dependencies = [MemoryDep(name='primals_216', index=0, size=())]
buf499.group.device = cuda:0
buf499.group.iteration = (1, 1)
buf499.sizes = ([], [])
class buf499_loop_body:
    var_ranges = {}
    index0 = 0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('primals_216', get_index)
        constant = ops.constant(1, torch.int64)
        add = ops.add(load, constant)
        get_index_1 = self.get_index('index0')
        store = ops.store('buf499', get_index_1, add, None)
        return store


buf500: SchedulerNode(ComputedBuffer)
buf500.writes = [MemoryDep(name='buf500', index=0, size=())]
buf500.unmet_dependencies = []
buf500.met_dependencies = [MemoryDep(name='primals_221', index=0, size=())]
buf500.group.device = cuda:0
buf500.group.iteration = (1, 1)
buf500.sizes = ([], [])
class buf500_loop_body:
    var_ranges = {}
    index0 = 0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('primals_221', get_index)
        constant = ops.constant(1, torch.int64)
        add = ops.add(load, constant)
        get_index_1 = self.get_index('index0')
        store = ops.store('buf500', get_index_1, add, None)
        return store


buf501: SchedulerNode(ComputedBuffer)
buf501.writes = [MemoryDep(name='buf501', index=0, size=())]
buf501.unmet_dependencies = []
buf501.met_dependencies = [MemoryDep(name='primals_226', index=0, size=())]
buf501.group.device = cuda:0
buf501.group.iteration = (1, 1)
buf501.sizes = ([], [])
class buf501_loop_body:
    var_ranges = {}
    index0 = 0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('primals_226', get_index)
        constant = ops.constant(1, torch.int64)
        add = ops.add(load, constant)
        get_index_1 = self.get_index('index0')
        store = ops.store('buf501', get_index_1, add, None)
        return store


buf502: SchedulerNode(ComputedBuffer)
buf502.writes = [MemoryDep(name='buf502', index=0, size=())]
buf502.unmet_dependencies = []
buf502.met_dependencies = [MemoryDep(name='primals_231', index=0, size=())]
buf502.group.device = cuda:0
buf502.group.iteration = (1, 1)
buf502.sizes = ([], [])
class buf502_loop_body:
    var_ranges = {}
    index0 = 0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('primals_231', get_index)
        constant = ops.constant(1, torch.int64)
        add = ops.add(load, constant)
        get_index_1 = self.get_index('index0')
        store = ops.store('buf502', get_index_1, add, None)
        return store


buf503: SchedulerNode(ComputedBuffer)
buf503.writes = [MemoryDep(name='buf503', index=0, size=())]
buf503.unmet_dependencies = []
buf503.met_dependencies = [MemoryDep(name='primals_236', index=0, size=())]
buf503.group.device = cuda:0
buf503.group.iteration = (1, 1)
buf503.sizes = ([], [])
class buf503_loop_body:
    var_ranges = {}
    index0 = 0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('primals_236', get_index)
        constant = ops.constant(1, torch.int64)
        add = ops.add(load, constant)
        get_index_1 = self.get_index('index0')
        store = ops.store('buf503', get_index_1, add, None)
        return store


buf504: SchedulerNode(ComputedBuffer)
buf504.writes = [MemoryDep(name='buf504', index=0, size=())]
buf504.unmet_dependencies = []
buf504.met_dependencies = [MemoryDep(name='primals_241', index=0, size=())]
buf504.group.device = cuda:0
buf504.group.iteration = (1, 1)
buf504.sizes = ([], [])
class buf504_loop_body:
    var_ranges = {}
    index0 = 0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('primals_241', get_index)
        constant = ops.constant(1, torch.int64)
        add = ops.add(load, constant)
        get_index_1 = self.get_index('index0')
        store = ops.store('buf504', get_index_1, add, None)
        return store


buf505: SchedulerNode(ComputedBuffer)
buf505.writes = [MemoryDep(name='buf505', index=0, size=())]
buf505.unmet_dependencies = []
buf505.met_dependencies = [MemoryDep(name='primals_246', index=0, size=())]
buf505.group.device = cuda:0
buf505.group.iteration = (1, 1)
buf505.sizes = ([], [])
class buf505_loop_body:
    var_ranges = {}
    index0 = 0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('primals_246', get_index)
        constant = ops.constant(1, torch.int64)
        add = ops.add(load, constant)
        get_index_1 = self.get_index('index0')
        store = ops.store('buf505', get_index_1, add, None)
        return store


buf506: SchedulerNode(ComputedBuffer)
buf506.writes = [MemoryDep(name='buf506', index=0, size=())]
buf506.unmet_dependencies = []
buf506.met_dependencies = [MemoryDep(name='primals_251', index=0, size=())]
buf506.group.device = cuda:0
buf506.group.iteration = (1, 1)
buf506.sizes = ([], [])
class buf506_loop_body:
    var_ranges = {}
    index0 = 0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('primals_251', get_index)
        constant = ops.constant(1, torch.int64)
        add = ops.add(load, constant)
        get_index_1 = self.get_index('index0')
        store = ops.store('buf506', get_index_1, add, None)
        return store


buf507: SchedulerNode(ComputedBuffer)
buf507.writes = [MemoryDep(name='buf507', index=0, size=())]
buf507.unmet_dependencies = []
buf507.met_dependencies = [MemoryDep(name='primals_256', index=0, size=())]
buf507.group.device = cuda:0
buf507.group.iteration = (1, 1)
buf507.sizes = ([], [])
class buf507_loop_body:
    var_ranges = {}
    index0 = 0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('primals_256', get_index)
        constant = ops.constant(1, torch.int64)
        add = ops.add(load, constant)
        get_index_1 = self.get_index('index0')
        store = ops.store('buf507', get_index_1, add, None)
        return store


buf508: SchedulerNode(ComputedBuffer)
buf508.writes = [MemoryDep(name='buf508', index=0, size=())]
buf508.unmet_dependencies = []
buf508.met_dependencies = [MemoryDep(name='primals_261', index=0, size=())]
buf508.group.device = cuda:0
buf508.group.iteration = (1, 1)
buf508.sizes = ([], [])
class buf508_loop_body:
    var_ranges = {}
    index0 = 0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('primals_261', get_index)
        constant = ops.constant(1, torch.int64)
        add = ops.add(load, constant)
        get_index_1 = self.get_index('index0')
        store = ops.store('buf508', get_index_1, add, None)
        return store


buf509: SchedulerNode(ComputedBuffer)
buf509.writes = [MemoryDep(name='buf509', index=0, size=())]
buf509.unmet_dependencies = []
buf509.met_dependencies = [MemoryDep(name='primals_266', index=0, size=())]
buf509.group.device = cuda:0
buf509.group.iteration = (1, 1)
buf509.sizes = ([], [])
class buf509_loop_body:
    var_ranges = {}
    index0 = 0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('primals_266', get_index)
        constant = ops.constant(1, torch.int64)
        add = ops.add(load, constant)
        get_index_1 = self.get_index('index0')
        store = ops.store('buf509', get_index_1, add, None)
        return store


buf510: SchedulerNode(ComputedBuffer)
buf510.writes = [MemoryDep(name='buf510', index=0, size=())]
buf510.unmet_dependencies = []
buf510.met_dependencies = [MemoryDep(name='primals_271', index=0, size=())]
buf510.group.device = cuda:0
buf510.group.iteration = (1, 1)
buf510.sizes = ([], [])
class buf510_loop_body:
    var_ranges = {}
    index0 = 0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('primals_271', get_index)
        constant = ops.constant(1, torch.int64)
        add = ops.add(load, constant)
        get_index_1 = self.get_index('index0')
        store = ops.store('buf510', get_index_1, add, None)
        return store


buf511: SchedulerNode(ComputedBuffer)
buf511.writes = [MemoryDep(name='buf511', index=0, size=())]
buf511.unmet_dependencies = []
buf511.met_dependencies = [MemoryDep(name='primals_276', index=0, size=())]
buf511.group.device = cuda:0
buf511.group.iteration = (1, 1)
buf511.sizes = ([], [])
class buf511_loop_body:
    var_ranges = {}
    index0 = 0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('primals_276', get_index)
        constant = ops.constant(1, torch.int64)
        add = ops.add(load, constant)
        get_index_1 = self.get_index('index0')
        store = ops.store('buf511', get_index_1, add, None)
        return store


buf512: SchedulerNode(ComputedBuffer)
buf512.writes = [MemoryDep(name='buf512', index=0, size=())]
buf512.unmet_dependencies = []
buf512.met_dependencies = [MemoryDep(name='primals_281', index=0, size=())]
buf512.group.device = cuda:0
buf512.group.iteration = (1, 1)
buf512.sizes = ([], [])
class buf512_loop_body:
    var_ranges = {}
    index0 = 0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('primals_281', get_index)
        constant = ops.constant(1, torch.int64)
        add = ops.add(load, constant)
        get_index_1 = self.get_index('index0')
        store = ops.store('buf512', get_index_1, add, None)
        return store


buf513: SchedulerNode(ComputedBuffer)
buf513.writes = [MemoryDep(name='buf513', index=0, size=())]
buf513.unmet_dependencies = []
buf513.met_dependencies = [MemoryDep(name='primals_286', index=0, size=())]
buf513.group.device = cuda:0
buf513.group.iteration = (1, 1)
buf513.sizes = ([], [])
class buf513_loop_body:
    var_ranges = {}
    index0 = 0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('primals_286', get_index)
        constant = ops.constant(1, torch.int64)
        add = ops.add(load, constant)
        get_index_1 = self.get_index('index0')
        store = ops.store('buf513', get_index_1, add, None)
        return store


buf514: SchedulerNode(ComputedBuffer)
buf514.writes = [MemoryDep(name='buf514', index=0, size=())]
buf514.unmet_dependencies = []
buf514.met_dependencies = [MemoryDep(name='primals_291', index=0, size=())]
buf514.group.device = cuda:0
buf514.group.iteration = (1, 1)
buf514.sizes = ([], [])
class buf514_loop_body:
    var_ranges = {}
    index0 = 0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('primals_291', get_index)
        constant = ops.constant(1, torch.int64)
        add = ops.add(load, constant)
        get_index_1 = self.get_index('index0')
        store = ops.store('buf514', get_index_1, add, None)
        return store


buf515: SchedulerNode(ComputedBuffer)
buf515.writes = [MemoryDep(name='buf515', index=0, size=())]
buf515.unmet_dependencies = []
buf515.met_dependencies = [MemoryDep(name='primals_296', index=0, size=())]
buf515.group.device = cuda:0
buf515.group.iteration = (1, 1)
buf515.sizes = ([], [])
class buf515_loop_body:
    var_ranges = {}
    index0 = 0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('primals_296', get_index)
        constant = ops.constant(1, torch.int64)
        add = ops.add(load, constant)
        get_index_1 = self.get_index('index0')
        store = ops.store('buf515', get_index_1, add, None)
        return store


buf516: SchedulerNode(ComputedBuffer)
buf516.writes = [MemoryDep(name='buf516', index=0, size=())]
buf516.unmet_dependencies = []
buf516.met_dependencies = [MemoryDep(name='primals_301', index=0, size=())]
buf516.group.device = cuda:0
buf516.group.iteration = (1, 1)
buf516.sizes = ([], [])
class buf516_loop_body:
    var_ranges = {}
    index0 = 0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('primals_301', get_index)
        constant = ops.constant(1, torch.int64)
        add = ops.add(load, constant)
        get_index_1 = self.get_index('index0')
        store = ops.store('buf516', get_index_1, add, None)
        return store


buf517: SchedulerNode(ComputedBuffer)
buf517.writes = [MemoryDep(name='buf517', index=0, size=())]
buf517.unmet_dependencies = []
buf517.met_dependencies = [MemoryDep(name='primals_306', index=0, size=())]
buf517.group.device = cuda:0
buf517.group.iteration = (1, 1)
buf517.sizes = ([], [])
class buf517_loop_body:
    var_ranges = {}
    index0 = 0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('primals_306', get_index)
        constant = ops.constant(1, torch.int64)
        add = ops.add(load, constant)
        get_index_1 = self.get_index('index0')
        store = ops.store('buf517', get_index_1, add, None)
        return store


buf518: SchedulerNode(ComputedBuffer)
buf518.writes = [MemoryDep(name='buf518', index=0, size=())]
buf518.unmet_dependencies = []
buf518.met_dependencies = [MemoryDep(name='primals_311', index=0, size=())]
buf518.group.device = cuda:0
buf518.group.iteration = (1, 1)
buf518.sizes = ([], [])
class buf518_loop_body:
    var_ranges = {}
    index0 = 0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('primals_311', get_index)
        constant = ops.constant(1, torch.int64)
        add = ops.add(load, constant)
        get_index_1 = self.get_index('index0')
        store = ops.store('buf518', get_index_1, add, None)
        return store


buf519: SchedulerNode(ComputedBuffer)
buf519.writes = [MemoryDep(name='buf519', index=0, size=())]
buf519.unmet_dependencies = []
buf519.met_dependencies = [MemoryDep(name='primals_316', index=0, size=())]
buf519.group.device = cuda:0
buf519.group.iteration = (1, 1)
buf519.sizes = ([], [])
class buf519_loop_body:
    var_ranges = {}
    index0 = 0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('primals_316', get_index)
        constant = ops.constant(1, torch.int64)
        add = ops.add(load, constant)
        get_index_1 = self.get_index('index0')
        store = ops.store('buf519', get_index_1, add, None)
        return store


buf520: SchedulerNode(ComputedBuffer)
buf520.writes = [MemoryDep(name='buf520', index=0, size=())]
buf520.unmet_dependencies = []
buf520.met_dependencies = [MemoryDep(name='primals_321', index=0, size=())]
buf520.group.device = cuda:0
buf520.group.iteration = (1, 1)
buf520.sizes = ([], [])
class buf520_loop_body:
    var_ranges = {}
    index0 = 0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('primals_321', get_index)
        constant = ops.constant(1, torch.int64)
        add = ops.add(load, constant)
        get_index_1 = self.get_index('index0')
        store = ops.store('buf520', get_index_1, add, None)
        return store


buf521: SchedulerNode(ComputedBuffer)
buf521.writes = [MemoryDep(name='buf521', index=0, size=())]
buf521.unmet_dependencies = []
buf521.met_dependencies = [MemoryDep(name='primals_326', index=0, size=())]
buf521.group.device = cuda:0
buf521.group.iteration = (1, 1)
buf521.sizes = ([], [])
class buf521_loop_body:
    var_ranges = {}
    index0 = 0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('primals_326', get_index)
        constant = ops.constant(1, torch.int64)
        add = ops.add(load, constant)
        get_index_1 = self.get_index('index0')
        store = ops.store('buf521', get_index_1, add, None)
        return store


buf522: SchedulerNode(ComputedBuffer)
buf522.writes = [MemoryDep(name='buf522', index=0, size=())]
buf522.unmet_dependencies = []
buf522.met_dependencies = [MemoryDep(name='primals_331', index=0, size=())]
buf522.group.device = cuda:0
buf522.group.iteration = (1, 1)
buf522.sizes = ([], [])
class buf522_loop_body:
    var_ranges = {}
    index0 = 0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('primals_331', get_index)
        constant = ops.constant(1, torch.int64)
        add = ops.add(load, constant)
        get_index_1 = self.get_index('index0')
        store = ops.store('buf522', get_index_1, add, None)
        return store


buf523: SchedulerNode(ComputedBuffer)
buf523.writes = [MemoryDep(name='buf523', index=0, size=())]
buf523.unmet_dependencies = []
buf523.met_dependencies = [MemoryDep(name='primals_336', index=0, size=())]
buf523.group.device = cuda:0
buf523.group.iteration = (1, 1)
buf523.sizes = ([], [])
class buf523_loop_body:
    var_ranges = {}
    index0 = 0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('primals_336', get_index)
        constant = ops.constant(1, torch.int64)
        add = ops.add(load, constant)
        get_index_1 = self.get_index('index0')
        store = ops.store('buf523', get_index_1, add, None)
        return store


buf524: SchedulerNode(ComputedBuffer)
buf524.writes = [MemoryDep(name='buf524', index=0, size=())]
buf524.unmet_dependencies = []
buf524.met_dependencies = [MemoryDep(name='primals_341', index=0, size=())]
buf524.group.device = cuda:0
buf524.group.iteration = (1, 1)
buf524.sizes = ([], [])
class buf524_loop_body:
    var_ranges = {}
    index0 = 0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('primals_341', get_index)
        constant = ops.constant(1, torch.int64)
        add = ops.add(load, constant)
        get_index_1 = self.get_index('index0')
        store = ops.store('buf524', get_index_1, add, None)
        return store


