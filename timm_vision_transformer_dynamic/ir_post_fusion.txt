buf0: ExternKernelSchedulerNode(Convolution)
buf0.writes = [StarDep(name='buf0')]
buf0.unmet_dependencies = []
buf0.met_dependencies = [StarDep(name='arg152_1'), StarDep(name='arg2_1')]
buf0.node.kernel = aten.convolution


buf1: SchedulerNode(ComputedBuffer)
buf1.writes = [MemoryDep(name='buf1', index=75648*c0 + c1, size=(s0, 384))]
buf1.unmet_dependencies = []
buf1.met_dependencies = [MemoryDep(name='arg0_1', index=c1, size=(s0, 384))]
buf1.group.device = cuda:0
buf1.group.iteration = (384*s0, 1)
buf1.sizes = ([s0, 384], [])
buf1.aliases = ['buf3']
class buf1_loop_body:
    var_ranges = {z0: s0, z1: 384}
    index0 = z1
    index1 = 75648*z0 + z1
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('arg0_1', get_index)
        get_index_1 = self.get_index('index1')
        store = ops.store('buf1', get_index_1, load, None)
        return store


buf2: SchedulerNode(ComputedBuffer)
buf2.writes = [MemoryDep(name='buf2', index=75648*c0 + c1, size=(s0, 75264))]
buf2.unmet_dependencies = [MemoryDep(name='buf0', index=75264*c0 + c1 + 196*c2, size=(s0, 196, 384))]
buf2.met_dependencies = [MemoryDep(name='arg3_1', index=c1, size=(196*s0, 384))]
buf2.group.device = cuda:0
buf2.group.iteration = (75264*s0, 1)
buf2.sizes = ([s0, 196, 384], [])
buf2.aliases = ['buf3']
class buf2_loop_body:
    var_ranges = {z0: s0, z1: 196, z2: 384}
    index0 = 75264*z0 + z1 + 196*z2
    index1 = z2
    index2 = 75648*z0 + 384*z1 + z2
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf0', get_index)
        get_index_1 = self.get_index('index1')
        load_1 = ops.load('arg3_1', get_index_1)
        add = ops.add(load, load_1)
        get_index_2 = self.get_index('index2')
        store = ops.store('buf2', get_index_2, add, None)
        return store


buf3: NopKernelSchedulerNode(ConcatKernel)
buf3.writes = [StarDep(name='buf3')]
buf3.unmet_dependencies = [StarDep(name='buf1'), StarDep(name='buf2')]
buf3.met_dependencies = []


buf4_buf5_buf6_buf7: FusedSchedulerNode(NoneType)
buf4_buf5_buf6_buf7.writes = 
    [   MemoryDep(name='buf4', index=c0, size=(197*s0, 384)),
        MemoryDep(name='buf4', index=c0, size=(197*s0,)),
        MemoryDep(name='buf5', index=c0, size=(197*s0,)),
        MemoryDep(name='buf6', index=c0, size=(197*s0, 384)),
        MemoryDep(name='buf6', index=c0, size=(197*s0,)),
        MemoryDep(name='buf7', index=c0, size=(75648*s0,))]
buf4_buf5_buf6_buf7.unmet_dependencies = 
    [   MemoryDep(name='buf3', index=c0, size=(75648*s0,)),
        MemoryDep(name='buf5', index=c0, size=(197*s0, 384))]
buf4_buf5_buf6_buf7.met_dependencies = 
    [   MemoryDep(name='arg1_1', index=c1, size=(s0, 75648)),
        MemoryDep(name='arg4_1', index=c1, size=(197*s0, 384)),
        MemoryDep(name='arg5_1', index=c1, size=(197*s0, 384))]
buf4_buf5_buf6_buf7.snodes = ['buf4', 'buf5', 'buf6', 'buf7']


buf8: ExternKernelSchedulerNode(ExternKernelOut)
buf8.writes = [StarDep(name='buf8')]
buf8.unmet_dependencies = [StarDep(name='buf7')]
buf8.met_dependencies = [StarDep(name='arg6_1'), StarDep(name='arg7_1')]
buf8.node.kernel = extern_kernels.addmm


buf9: SchedulerNode(ComputedBuffer)
buf9.writes = [MemoryDep(name='buf9', index=c0, size=(75648*s0,))]
buf9.unmet_dependencies = [   MemoryDep(name='buf8', index=226944*c0 + 64*c1 + 1152*c2 + c3, size=(s0, 6, 197, 64))]
buf9.met_dependencies = []
buf9.group.device = cuda:0
buf9.group.iteration = (75648*s0, 1)
buf9.sizes = ([s0, 6, 197, 64], [])
class buf9_loop_body:
    var_ranges = {z0: s0, z1: 6, z2: 197, z3: 64}
    index0 = 226944*z0 + 64*z1 + 1152*z2 + z3
    index1 = 75648*z0 + 12608*z1 + 64*z2 + z3
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf8', get_index)
        get_index_1 = self.get_index('index1')
        store = ops.store('buf9', get_index_1, load, None)
        return store


buf10: SchedulerNode(ComputedBuffer)
buf10.writes = [MemoryDep(name='buf10', index=c0, size=(75648*s0,))]
buf10.unmet_dependencies = [   MemoryDep(name='buf8', index=226944*c0 + c1 + 1152*c2 + 384, size=(s0, 384, 197))]
buf10.met_dependencies = []
buf10.group.device = cuda:0
buf10.group.iteration = (75648*s0, 1)
buf10.sizes = ([s0, 384, 197], [])
class buf10_loop_body:
    var_ranges = {z0: s0, z1: 384, z2: 197}
    index0 = 226944*z0 + z1 + 1152*z2 + 384
    index1 = 75648*z0 + 197*z1 + z2
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf8', get_index)
        get_index_1 = self.get_index('index1')
        store = ops.store('buf10', get_index_1, load, None)
        return store


buf11: ExternKernelSchedulerNode(ExternKernelOut)
buf11.writes = [StarDep(name='buf11')]
buf11.unmet_dependencies = [StarDep(name='buf10'), StarDep(name='buf9')]
buf11.met_dependencies = []
buf11.node.kernel = extern_kernels.bmm


buf12_buf13_buf14: FusedSchedulerNode(NoneType)
buf12_buf13_buf14.writes = 
    [   MemoryDep(name='buf12', index=c0, size=(1182*s0, 197)),
        MemoryDep(name='buf12', index=c0, size=(1182*s0,)),
        MemoryDep(name='buf13', index=c0, size=(1182*s0, 197)),
        MemoryDep(name='buf13', index=c0, size=(1182*s0,)),
        MemoryDep(name='buf14', index=c0, size=(232854*s0,))]
buf12_buf13_buf14.unmet_dependencies = [MemoryDep(name='buf11', index=c0, size=(232854*s0,))]
buf12_buf13_buf14.met_dependencies = []
buf12_buf13_buf14.snodes = ['buf12', 'buf13', 'buf14']


buf15: SchedulerNode(ComputedBuffer)
buf15.writes = [MemoryDep(name='buf15', index=c0, size=(75648*s0,))]
buf15.unmet_dependencies = [   MemoryDep(name='buf8', index=226944*c0 + 64*c1 + 1152*c2 + c3 + 768, size=(s0, 6, 197, 64))]
buf15.met_dependencies = []
buf15.group.device = cuda:0
buf15.group.iteration = (75648*s0, 1)
buf15.sizes = ([s0, 6, 197, 64], [])
class buf15_loop_body:
    var_ranges = {z0: s0, z1: 6, z2: 197, z3: 64}
    index0 = 226944*z0 + 64*z1 + 1152*z2 + z3 + 768
    index1 = 75648*z0 + 12608*z1 + 64*z2 + z3
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf8', get_index)
        get_index_1 = self.get_index('index1')
        store = ops.store('buf15', get_index_1, load, None)
        return store


buf16: ExternKernelSchedulerNode(ExternKernelOut)
buf16.writes = [StarDep(name='buf16')]
buf16.unmet_dependencies = [StarDep(name='buf14'), StarDep(name='buf15')]
buf16.met_dependencies = []
buf16.node.kernel = extern_kernels.bmm


buf17: SchedulerNode(ComputedBuffer)
buf17.writes = [MemoryDep(name='buf17', index=c0, size=(75648*s0,))]
buf17.unmet_dependencies = [   MemoryDep(name='buf16', index=75648*c0 + 64*c1 + 12608*c2 + c3, size=(s0, 197, 6, 64))]
buf17.met_dependencies = []
buf17.group.device = cuda:0
buf17.group.iteration = (75648*s0, 1)
buf17.sizes = ([s0, 197, 6, 64], [])
class buf17_loop_body:
    var_ranges = {z0: s0, z1: 197, z2: 6, z3: 64}
    index0 = 75648*z0 + 64*z1 + 12608*z2 + z3
    index1 = 75648*z0 + 384*z1 + 64*z2 + z3
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf16', get_index)
        get_index_1 = self.get_index('index1')
        store = ops.store('buf17', get_index_1, load, None)
        return store


buf18: ExternKernelSchedulerNode(ExternKernelOut)
buf18.writes = [StarDep(name='buf18')]
buf18.unmet_dependencies = [StarDep(name='buf17')]
buf18.met_dependencies = [StarDep(name='arg8_1'), StarDep(name='arg9_1')]
buf18.node.kernel = extern_kernels.addmm


buf19_buf20_buf21_buf22: FusedSchedulerNode(NoneType)
buf19_buf20_buf21_buf22.writes = 
    [   MemoryDep(name='buf19', index=c0, size=(197*s0, 384)),
        MemoryDep(name='buf19', index=c0, size=(197*s0,)),
        MemoryDep(name='buf20', index=c0, size=(197*s0,)),
        MemoryDep(name='buf21', index=c0, size=(197*s0, 384)),
        MemoryDep(name='buf21', index=c0, size=(197*s0,)),
        MemoryDep(name='buf22', index=c0, size=(75648*s0,))]
buf19_buf20_buf21_buf22.unmet_dependencies = 
    [   MemoryDep(name='buf18', index=c0, size=(75648*s0,)),
        MemoryDep(name='buf20', index=c0, size=(197*s0, 384)),
        MemoryDep(name='buf3', index=c0, size=(75648*s0,))]
buf19_buf20_buf21_buf22.met_dependencies = 
    [   MemoryDep(name='arg10_1', index=c1, size=(197*s0, 384)),
        MemoryDep(name='arg11_1', index=c1, size=(197*s0, 384)),
        MemoryDep(name='arg1_1', index=c1, size=(s0, 75648))]
buf19_buf20_buf21_buf22.snodes = ['buf19', 'buf20', 'buf21', 'buf22']


buf23: ExternKernelSchedulerNode(ExternKernelOut)
buf23.writes = [StarDep(name='buf23')]
buf23.unmet_dependencies = [StarDep(name='buf22')]
buf23.met_dependencies = [StarDep(name='arg12_1'), StarDep(name='arg13_1')]
buf23.node.kernel = extern_kernels.addmm


buf24: SchedulerNode(ComputedBuffer)
buf24.writes = [MemoryDep(name='buf24', index=c0, size=(302592*s0,))]
buf24.unmet_dependencies = [MemoryDep(name='buf23', index=c0, size=(302592*s0,))]
buf24.met_dependencies = []
buf24.group.device = cuda:0
buf24.group.iteration = (302592*s0, 1)
buf24.sizes = ([302592*s0], [])
class buf24_loop_body:
    var_ranges = {z0: 302592*s0}
    index0 = z0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf23', get_index)
        to_dtype = ops.to_dtype(load, torch.float32)
        constant = ops.constant(0.5, torch.float32)
        mul = ops.mul(to_dtype, constant)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('buf23', get_index_1)
        to_dtype_1 = ops.to_dtype(load_1, torch.float32)
        constant_1 = ops.constant(0.7071067811865476, torch.float32)
        mul_1 = ops.mul(to_dtype_1, constant_1)
        erf = ops.erf(mul_1)
        constant_2 = ops.constant(1, torch.float32)
        add = ops.add(erf, constant_2)
        mul_2 = ops.mul(mul, add)
        to_dtype_2 = ops.to_dtype(mul_2, torch.float16)
        get_index_2 = self.get_index('index0')
        store = ops.store('buf24', get_index_2, to_dtype_2, None)
        return store


buf25: ExternKernelSchedulerNode(ExternKernelOut)
buf25.writes = [StarDep(name='buf25')]
buf25.unmet_dependencies = [StarDep(name='buf24')]
buf25.met_dependencies = [StarDep(name='arg14_1'), StarDep(name='arg15_1')]
buf25.node.kernel = extern_kernels.addmm


buf26_buf27_buf28_buf29: FusedSchedulerNode(NoneType)
buf26_buf27_buf28_buf29.writes = 
    [   MemoryDep(name='buf26', index=c0, size=(197*s0, 384)),
        MemoryDep(name='buf26', index=c0, size=(197*s0,)),
        MemoryDep(name='buf27', index=c0, size=(197*s0,)),
        MemoryDep(name='buf28', index=c0, size=(197*s0, 384)),
        MemoryDep(name='buf28', index=c0, size=(197*s0,)),
        MemoryDep(name='buf29', index=c0, size=(75648*s0,))]
buf26_buf27_buf28_buf29.unmet_dependencies = 
    [   MemoryDep(name='buf18', index=c0, size=(75648*s0,)),
        MemoryDep(name='buf25', index=c0, size=(75648*s0,)),
        MemoryDep(name='buf27', index=c0, size=(197*s0, 384)),
        MemoryDep(name='buf3', index=c0, size=(75648*s0,))]
buf26_buf27_buf28_buf29.met_dependencies = 
    [   MemoryDep(name='arg16_1', index=c1, size=(197*s0, 384)),
        MemoryDep(name='arg17_1', index=c1, size=(197*s0, 384)),
        MemoryDep(name='arg1_1', index=c1, size=(s0, 75648))]
buf26_buf27_buf28_buf29.snodes = ['buf26', 'buf27', 'buf28', 'buf29']


buf30: ExternKernelSchedulerNode(ExternKernelOut)
buf30.writes = [StarDep(name='buf30')]
buf30.unmet_dependencies = [StarDep(name='buf29')]
buf30.met_dependencies = [StarDep(name='arg18_1'), StarDep(name='arg19_1')]
buf30.node.kernel = extern_kernels.addmm


buf31: SchedulerNode(ComputedBuffer)
buf31.writes = [MemoryDep(name='buf31', index=c0, size=(75648*s0,))]
buf31.unmet_dependencies = [   MemoryDep(name='buf30', index=226944*c0 + 64*c1 + 1152*c2 + c3, size=(s0, 6, 197, 64))]
buf31.met_dependencies = []
buf31.group.device = cuda:0
buf31.group.iteration = (75648*s0, 1)
buf31.sizes = ([s0, 6, 197, 64], [])
class buf31_loop_body:
    var_ranges = {z0: s0, z1: 6, z2: 197, z3: 64}
    index0 = 226944*z0 + 64*z1 + 1152*z2 + z3
    index1 = 75648*z0 + 12608*z1 + 64*z2 + z3
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf30', get_index)
        get_index_1 = self.get_index('index1')
        store = ops.store('buf31', get_index_1, load, None)
        return store


buf32: SchedulerNode(ComputedBuffer)
buf32.writes = [MemoryDep(name='buf32', index=c0, size=(75648*s0,))]
buf32.unmet_dependencies = [   MemoryDep(name='buf30', index=226944*c0 + c1 + 1152*c2 + 384, size=(s0, 384, 197))]
buf32.met_dependencies = []
buf32.group.device = cuda:0
buf32.group.iteration = (75648*s0, 1)
buf32.sizes = ([s0, 384, 197], [])
class buf32_loop_body:
    var_ranges = {z0: s0, z1: 384, z2: 197}
    index0 = 226944*z0 + z1 + 1152*z2 + 384
    index1 = 75648*z0 + 197*z1 + z2
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf30', get_index)
        get_index_1 = self.get_index('index1')
        store = ops.store('buf32', get_index_1, load, None)
        return store


buf33: ExternKernelSchedulerNode(ExternKernelOut)
buf33.writes = [StarDep(name='buf33')]
buf33.unmet_dependencies = [StarDep(name='buf31'), StarDep(name='buf32')]
buf33.met_dependencies = []
buf33.node.kernel = extern_kernels.bmm


buf34_buf35_buf36: FusedSchedulerNode(NoneType)
buf34_buf35_buf36.writes = 
    [   MemoryDep(name='buf34', index=c0, size=(1182*s0, 197)),
        MemoryDep(name='buf34', index=c0, size=(1182*s0,)),
        MemoryDep(name='buf35', index=c0, size=(1182*s0, 197)),
        MemoryDep(name='buf35', index=c0, size=(1182*s0,)),
        MemoryDep(name='buf36', index=c0, size=(232854*s0,))]
buf34_buf35_buf36.unmet_dependencies = [MemoryDep(name='buf33', index=c0, size=(232854*s0,))]
buf34_buf35_buf36.met_dependencies = []
buf34_buf35_buf36.snodes = ['buf34', 'buf35', 'buf36']


buf37: SchedulerNode(ComputedBuffer)
buf37.writes = [MemoryDep(name='buf37', index=c0, size=(75648*s0,))]
buf37.unmet_dependencies = [   MemoryDep(name='buf30', index=226944*c0 + 64*c1 + 1152*c2 + c3 + 768, size=(s0, 6, 197, 64))]
buf37.met_dependencies = []
buf37.group.device = cuda:0
buf37.group.iteration = (75648*s0, 1)
buf37.sizes = ([s0, 6, 197, 64], [])
class buf37_loop_body:
    var_ranges = {z0: s0, z1: 6, z2: 197, z3: 64}
    index0 = 226944*z0 + 64*z1 + 1152*z2 + z3 + 768
    index1 = 75648*z0 + 12608*z1 + 64*z2 + z3
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf30', get_index)
        get_index_1 = self.get_index('index1')
        store = ops.store('buf37', get_index_1, load, None)
        return store


buf38: ExternKernelSchedulerNode(ExternKernelOut)
buf38.writes = [StarDep(name='buf38')]
buf38.unmet_dependencies = [StarDep(name='buf36'), StarDep(name='buf37')]
buf38.met_dependencies = []
buf38.node.kernel = extern_kernels.bmm


buf39: SchedulerNode(ComputedBuffer)
buf39.writes = [MemoryDep(name='buf39', index=c0, size=(75648*s0,))]
buf39.unmet_dependencies = [   MemoryDep(name='buf38', index=75648*c0 + 64*c1 + 12608*c2 + c3, size=(s0, 197, 6, 64))]
buf39.met_dependencies = []
buf39.group.device = cuda:0
buf39.group.iteration = (75648*s0, 1)
buf39.sizes = ([s0, 197, 6, 64], [])
class buf39_loop_body:
    var_ranges = {z0: s0, z1: 197, z2: 6, z3: 64}
    index0 = 75648*z0 + 64*z1 + 12608*z2 + z3
    index1 = 75648*z0 + 384*z1 + 64*z2 + z3
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf38', get_index)
        get_index_1 = self.get_index('index1')
        store = ops.store('buf39', get_index_1, load, None)
        return store


buf40: ExternKernelSchedulerNode(ExternKernelOut)
buf40.writes = [StarDep(name='buf40')]
buf40.unmet_dependencies = [StarDep(name='buf39')]
buf40.met_dependencies = [StarDep(name='arg20_1'), StarDep(name='arg21_1')]
buf40.node.kernel = extern_kernels.addmm


buf41_buf42_buf43_buf44_buf45: FusedSchedulerNode(NoneType)
buf41_buf42_buf43_buf44_buf45.writes = 
    [   MemoryDep(name='buf41', index=c0, size=(75648*s0,)),
        MemoryDep(name='buf42', index=c0, size=(197*s0, 384)),
        MemoryDep(name='buf42', index=c0, size=(197*s0,)),
        MemoryDep(name='buf43', index=c0, size=(197*s0,)),
        MemoryDep(name='buf44', index=c0, size=(197*s0, 384)),
        MemoryDep(name='buf44', index=c0, size=(197*s0,)),
        MemoryDep(name='buf45', index=c0, size=(75648*s0,))]
buf41_buf42_buf43_buf44_buf45.unmet_dependencies = 
    [   MemoryDep(name='buf18', index=c0, size=(75648*s0,)),
        MemoryDep(name='buf25', index=c0, size=(75648*s0,)),
        MemoryDep(name='buf3', index=c0, size=(75648*s0,)),
        MemoryDep(name='buf40', index=c0, size=(75648*s0,)),
        MemoryDep(name='buf43', index=c0, size=(197*s0, 384))]
buf41_buf42_buf43_buf44_buf45.met_dependencies = 
    [   MemoryDep(name='arg1_1', index=c1, size=(s0, 75648)),
        MemoryDep(name='arg22_1', index=c1, size=(197*s0, 384)),
        MemoryDep(name='arg23_1', index=c1, size=(197*s0, 384))]
buf41_buf42_buf43_buf44_buf45.snodes = ['buf41', 'buf42', 'buf43', 'buf44', 'buf45']


buf46: ExternKernelSchedulerNode(ExternKernelOut)
buf46.writes = [StarDep(name='buf46')]
buf46.unmet_dependencies = [StarDep(name='buf45')]
buf46.met_dependencies = [StarDep(name='arg24_1'), StarDep(name='arg25_1')]
buf46.node.kernel = extern_kernels.addmm


buf47: SchedulerNode(ComputedBuffer)
buf47.writes = [MemoryDep(name='buf47', index=c0, size=(302592*s0,))]
buf47.unmet_dependencies = [MemoryDep(name='buf46', index=c0, size=(302592*s0,))]
buf47.met_dependencies = []
buf47.group.device = cuda:0
buf47.group.iteration = (302592*s0, 1)
buf47.sizes = ([302592*s0], [])
class buf47_loop_body:
    var_ranges = {z0: 302592*s0}
    index0 = z0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf46', get_index)
        to_dtype = ops.to_dtype(load, torch.float32)
        constant = ops.constant(0.5, torch.float32)
        mul = ops.mul(to_dtype, constant)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('buf46', get_index_1)
        to_dtype_1 = ops.to_dtype(load_1, torch.float32)
        constant_1 = ops.constant(0.7071067811865476, torch.float32)
        mul_1 = ops.mul(to_dtype_1, constant_1)
        erf = ops.erf(mul_1)
        constant_2 = ops.constant(1, torch.float32)
        add = ops.add(erf, constant_2)
        mul_2 = ops.mul(mul, add)
        to_dtype_2 = ops.to_dtype(mul_2, torch.float16)
        get_index_2 = self.get_index('index0')
        store = ops.store('buf47', get_index_2, to_dtype_2, None)
        return store


buf48: ExternKernelSchedulerNode(ExternKernelOut)
buf48.writes = [StarDep(name='buf48')]
buf48.unmet_dependencies = [StarDep(name='buf47')]
buf48.met_dependencies = [StarDep(name='arg26_1'), StarDep(name='arg27_1')]
buf48.node.kernel = extern_kernels.addmm


buf49_buf50_buf51_buf52: FusedSchedulerNode(NoneType)
buf49_buf50_buf51_buf52.writes = 
    [   MemoryDep(name='buf49', index=c0, size=(197*s0, 384)),
        MemoryDep(name='buf49', index=c0, size=(197*s0,)),
        MemoryDep(name='buf50', index=c0, size=(197*s0,)),
        MemoryDep(name='buf51', index=c0, size=(197*s0, 384)),
        MemoryDep(name='buf51', index=c0, size=(197*s0,)),
        MemoryDep(name='buf52', index=c0, size=(75648*s0,))]
buf49_buf50_buf51_buf52.unmet_dependencies = 
    [   MemoryDep(name='buf41', index=c0, size=(75648*s0,)),
        MemoryDep(name='buf48', index=c0, size=(75648*s0,)),
        MemoryDep(name='buf50', index=c0, size=(197*s0, 384))]
buf49_buf50_buf51_buf52.met_dependencies = 
    [   MemoryDep(name='arg28_1', index=c1, size=(197*s0, 384)),
        MemoryDep(name='arg29_1', index=c1, size=(197*s0, 384))]
buf49_buf50_buf51_buf52.snodes = ['buf49', 'buf50', 'buf51', 'buf52']


buf53: ExternKernelSchedulerNode(ExternKernelOut)
buf53.writes = [StarDep(name='buf53')]
buf53.unmet_dependencies = [StarDep(name='buf52')]
buf53.met_dependencies = [StarDep(name='arg30_1'), StarDep(name='arg31_1')]
buf53.node.kernel = extern_kernels.addmm


buf54: SchedulerNode(ComputedBuffer)
buf54.writes = [MemoryDep(name='buf54', index=c0, size=(75648*s0,))]
buf54.unmet_dependencies = [   MemoryDep(name='buf53', index=226944*c0 + 64*c1 + 1152*c2 + c3, size=(s0, 6, 197, 64))]
buf54.met_dependencies = []
buf54.group.device = cuda:0
buf54.group.iteration = (75648*s0, 1)
buf54.sizes = ([s0, 6, 197, 64], [])
class buf54_loop_body:
    var_ranges = {z0: s0, z1: 6, z2: 197, z3: 64}
    index0 = 226944*z0 + 64*z1 + 1152*z2 + z3
    index1 = 75648*z0 + 12608*z1 + 64*z2 + z3
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf53', get_index)
        get_index_1 = self.get_index('index1')
        store = ops.store('buf54', get_index_1, load, None)
        return store


buf55: SchedulerNode(ComputedBuffer)
buf55.writes = [MemoryDep(name='buf55', index=c0, size=(75648*s0,))]
buf55.unmet_dependencies = [   MemoryDep(name='buf53', index=226944*c0 + c1 + 1152*c2 + 384, size=(s0, 384, 197))]
buf55.met_dependencies = []
buf55.group.device = cuda:0
buf55.group.iteration = (75648*s0, 1)
buf55.sizes = ([s0, 384, 197], [])
class buf55_loop_body:
    var_ranges = {z0: s0, z1: 384, z2: 197}
    index0 = 226944*z0 + z1 + 1152*z2 + 384
    index1 = 75648*z0 + 197*z1 + z2
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf53', get_index)
        get_index_1 = self.get_index('index1')
        store = ops.store('buf55', get_index_1, load, None)
        return store


buf56: ExternKernelSchedulerNode(ExternKernelOut)
buf56.writes = [StarDep(name='buf56')]
buf56.unmet_dependencies = [StarDep(name='buf54'), StarDep(name='buf55')]
buf56.met_dependencies = []
buf56.node.kernel = extern_kernels.bmm


buf57_buf58_buf59: FusedSchedulerNode(NoneType)
buf57_buf58_buf59.writes = 
    [   MemoryDep(name='buf57', index=c0, size=(1182*s0, 197)),
        MemoryDep(name='buf57', index=c0, size=(1182*s0,)),
        MemoryDep(name='buf58', index=c0, size=(1182*s0, 197)),
        MemoryDep(name='buf58', index=c0, size=(1182*s0,)),
        MemoryDep(name='buf59', index=c0, size=(232854*s0,))]
buf57_buf58_buf59.unmet_dependencies = [MemoryDep(name='buf56', index=c0, size=(232854*s0,))]
buf57_buf58_buf59.met_dependencies = []
buf57_buf58_buf59.snodes = ['buf57', 'buf58', 'buf59']


buf60: SchedulerNode(ComputedBuffer)
buf60.writes = [MemoryDep(name='buf60', index=c0, size=(75648*s0,))]
buf60.unmet_dependencies = [   MemoryDep(name='buf53', index=226944*c0 + 64*c1 + 1152*c2 + c3 + 768, size=(s0, 6, 197, 64))]
buf60.met_dependencies = []
buf60.group.device = cuda:0
buf60.group.iteration = (75648*s0, 1)
buf60.sizes = ([s0, 6, 197, 64], [])
class buf60_loop_body:
    var_ranges = {z0: s0, z1: 6, z2: 197, z3: 64}
    index0 = 226944*z0 + 64*z1 + 1152*z2 + z3 + 768
    index1 = 75648*z0 + 12608*z1 + 64*z2 + z3
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf53', get_index)
        get_index_1 = self.get_index('index1')
        store = ops.store('buf60', get_index_1, load, None)
        return store


buf61: ExternKernelSchedulerNode(ExternKernelOut)
buf61.writes = [StarDep(name='buf61')]
buf61.unmet_dependencies = [StarDep(name='buf59'), StarDep(name='buf60')]
buf61.met_dependencies = []
buf61.node.kernel = extern_kernels.bmm


buf62: SchedulerNode(ComputedBuffer)
buf62.writes = [MemoryDep(name='buf62', index=c0, size=(75648*s0,))]
buf62.unmet_dependencies = [   MemoryDep(name='buf61', index=75648*c0 + 64*c1 + 12608*c2 + c3, size=(s0, 197, 6, 64))]
buf62.met_dependencies = []
buf62.group.device = cuda:0
buf62.group.iteration = (75648*s0, 1)
buf62.sizes = ([s0, 197, 6, 64], [])
class buf62_loop_body:
    var_ranges = {z0: s0, z1: 197, z2: 6, z3: 64}
    index0 = 75648*z0 + 64*z1 + 12608*z2 + z3
    index1 = 75648*z0 + 384*z1 + 64*z2 + z3
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf61', get_index)
        get_index_1 = self.get_index('index1')
        store = ops.store('buf62', get_index_1, load, None)
        return store


buf63: ExternKernelSchedulerNode(ExternKernelOut)
buf63.writes = [StarDep(name='buf63')]
buf63.unmet_dependencies = [StarDep(name='buf62')]
buf63.met_dependencies = [StarDep(name='arg32_1'), StarDep(name='arg33_1')]
buf63.node.kernel = extern_kernels.addmm


buf64_buf65_buf66_buf67: FusedSchedulerNode(NoneType)
buf64_buf65_buf66_buf67.writes = 
    [   MemoryDep(name='buf64', index=c0, size=(197*s0, 384)),
        MemoryDep(name='buf64', index=c0, size=(197*s0,)),
        MemoryDep(name='buf65', index=c0, size=(197*s0,)),
        MemoryDep(name='buf66', index=c0, size=(197*s0, 384)),
        MemoryDep(name='buf66', index=c0, size=(197*s0,)),
        MemoryDep(name='buf67', index=c0, size=(75648*s0,))]
buf64_buf65_buf66_buf67.unmet_dependencies = 
    [   MemoryDep(name='buf41', index=c0, size=(75648*s0,)),
        MemoryDep(name='buf48', index=c0, size=(75648*s0,)),
        MemoryDep(name='buf63', index=c0, size=(75648*s0,)),
        MemoryDep(name='buf65', index=c0, size=(197*s0, 384))]
buf64_buf65_buf66_buf67.met_dependencies = 
    [   MemoryDep(name='arg34_1', index=c1, size=(197*s0, 384)),
        MemoryDep(name='arg35_1', index=c1, size=(197*s0, 384))]
buf64_buf65_buf66_buf67.snodes = ['buf64', 'buf65', 'buf66', 'buf67']


buf68: ExternKernelSchedulerNode(ExternKernelOut)
buf68.writes = [StarDep(name='buf68')]
buf68.unmet_dependencies = [StarDep(name='buf67')]
buf68.met_dependencies = [StarDep(name='arg36_1'), StarDep(name='arg37_1')]
buf68.node.kernel = extern_kernels.addmm


buf69: SchedulerNode(ComputedBuffer)
buf69.writes = [MemoryDep(name='buf69', index=c0, size=(302592*s0,))]
buf69.unmet_dependencies = [MemoryDep(name='buf68', index=c0, size=(302592*s0,))]
buf69.met_dependencies = []
buf69.group.device = cuda:0
buf69.group.iteration = (302592*s0, 1)
buf69.sizes = ([302592*s0], [])
class buf69_loop_body:
    var_ranges = {z0: 302592*s0}
    index0 = z0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf68', get_index)
        to_dtype = ops.to_dtype(load, torch.float32)
        constant = ops.constant(0.5, torch.float32)
        mul = ops.mul(to_dtype, constant)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('buf68', get_index_1)
        to_dtype_1 = ops.to_dtype(load_1, torch.float32)
        constant_1 = ops.constant(0.7071067811865476, torch.float32)
        mul_1 = ops.mul(to_dtype_1, constant_1)
        erf = ops.erf(mul_1)
        constant_2 = ops.constant(1, torch.float32)
        add = ops.add(erf, constant_2)
        mul_2 = ops.mul(mul, add)
        to_dtype_2 = ops.to_dtype(mul_2, torch.float16)
        get_index_2 = self.get_index('index0')
        store = ops.store('buf69', get_index_2, to_dtype_2, None)
        return store


buf70: ExternKernelSchedulerNode(ExternKernelOut)
buf70.writes = [StarDep(name='buf70')]
buf70.unmet_dependencies = [StarDep(name='buf69')]
buf70.met_dependencies = [StarDep(name='arg38_1'), StarDep(name='arg39_1')]
buf70.node.kernel = extern_kernels.addmm


buf71_buf72_buf73_buf74: FusedSchedulerNode(NoneType)
buf71_buf72_buf73_buf74.writes = 
    [   MemoryDep(name='buf71', index=c0, size=(197*s0, 384)),
        MemoryDep(name='buf71', index=c0, size=(197*s0,)),
        MemoryDep(name='buf72', index=c0, size=(197*s0,)),
        MemoryDep(name='buf73', index=c0, size=(197*s0, 384)),
        MemoryDep(name='buf73', index=c0, size=(197*s0,)),
        MemoryDep(name='buf74', index=c0, size=(75648*s0,))]
buf71_buf72_buf73_buf74.unmet_dependencies = 
    [   MemoryDep(name='buf41', index=c0, size=(75648*s0,)),
        MemoryDep(name='buf48', index=c0, size=(75648*s0,)),
        MemoryDep(name='buf63', index=c0, size=(75648*s0,)),
        MemoryDep(name='buf70', index=c0, size=(75648*s0,)),
        MemoryDep(name='buf72', index=c0, size=(197*s0, 384))]
buf71_buf72_buf73_buf74.met_dependencies = 
    [   MemoryDep(name='arg40_1', index=c1, size=(197*s0, 384)),
        MemoryDep(name='arg41_1', index=c1, size=(197*s0, 384))]
buf71_buf72_buf73_buf74.snodes = ['buf71', 'buf72', 'buf73', 'buf74']


buf75: ExternKernelSchedulerNode(ExternKernelOut)
buf75.writes = [StarDep(name='buf75')]
buf75.unmet_dependencies = [StarDep(name='buf74')]
buf75.met_dependencies = [StarDep(name='arg42_1'), StarDep(name='arg43_1')]
buf75.node.kernel = extern_kernels.addmm


buf76: SchedulerNode(ComputedBuffer)
buf76.writes = [MemoryDep(name='buf76', index=c0, size=(75648*s0,))]
buf76.unmet_dependencies = [   MemoryDep(name='buf75', index=226944*c0 + 64*c1 + 1152*c2 + c3, size=(s0, 6, 197, 64))]
buf76.met_dependencies = []
buf76.group.device = cuda:0
buf76.group.iteration = (75648*s0, 1)
buf76.sizes = ([s0, 6, 197, 64], [])
class buf76_loop_body:
    var_ranges = {z0: s0, z1: 6, z2: 197, z3: 64}
    index0 = 226944*z0 + 64*z1 + 1152*z2 + z3
    index1 = 75648*z0 + 12608*z1 + 64*z2 + z3
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf75', get_index)
        get_index_1 = self.get_index('index1')
        store = ops.store('buf76', get_index_1, load, None)
        return store


buf77: SchedulerNode(ComputedBuffer)
buf77.writes = [MemoryDep(name='buf77', index=c0, size=(75648*s0,))]
buf77.unmet_dependencies = [   MemoryDep(name='buf75', index=226944*c0 + c1 + 1152*c2 + 384, size=(s0, 384, 197))]
buf77.met_dependencies = []
buf77.group.device = cuda:0
buf77.group.iteration = (75648*s0, 1)
buf77.sizes = ([s0, 384, 197], [])
class buf77_loop_body:
    var_ranges = {z0: s0, z1: 384, z2: 197}
    index0 = 226944*z0 + z1 + 1152*z2 + 384
    index1 = 75648*z0 + 197*z1 + z2
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf75', get_index)
        get_index_1 = self.get_index('index1')
        store = ops.store('buf77', get_index_1, load, None)
        return store


buf78: ExternKernelSchedulerNode(ExternKernelOut)
buf78.writes = [StarDep(name='buf78')]
buf78.unmet_dependencies = [StarDep(name='buf76'), StarDep(name='buf77')]
buf78.met_dependencies = []
buf78.node.kernel = extern_kernels.bmm


buf79_buf80_buf81: FusedSchedulerNode(NoneType)
buf79_buf80_buf81.writes = 
    [   MemoryDep(name='buf79', index=c0, size=(1182*s0, 197)),
        MemoryDep(name='buf79', index=c0, size=(1182*s0,)),
        MemoryDep(name='buf80', index=c0, size=(1182*s0, 197)),
        MemoryDep(name='buf80', index=c0, size=(1182*s0,)),
        MemoryDep(name='buf81', index=c0, size=(232854*s0,))]
buf79_buf80_buf81.unmet_dependencies = [MemoryDep(name='buf78', index=c0, size=(232854*s0,))]
buf79_buf80_buf81.met_dependencies = []
buf79_buf80_buf81.snodes = ['buf79', 'buf80', 'buf81']


buf82: SchedulerNode(ComputedBuffer)
buf82.writes = [MemoryDep(name='buf82', index=c0, size=(75648*s0,))]
buf82.unmet_dependencies = [   MemoryDep(name='buf75', index=226944*c0 + 64*c1 + 1152*c2 + c3 + 768, size=(s0, 6, 197, 64))]
buf82.met_dependencies = []
buf82.group.device = cuda:0
buf82.group.iteration = (75648*s0, 1)
buf82.sizes = ([s0, 6, 197, 64], [])
class buf82_loop_body:
    var_ranges = {z0: s0, z1: 6, z2: 197, z3: 64}
    index0 = 226944*z0 + 64*z1 + 1152*z2 + z3 + 768
    index1 = 75648*z0 + 12608*z1 + 64*z2 + z3
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf75', get_index)
        get_index_1 = self.get_index('index1')
        store = ops.store('buf82', get_index_1, load, None)
        return store


buf83: ExternKernelSchedulerNode(ExternKernelOut)
buf83.writes = [StarDep(name='buf83')]
buf83.unmet_dependencies = [StarDep(name='buf81'), StarDep(name='buf82')]
buf83.met_dependencies = []
buf83.node.kernel = extern_kernels.bmm


buf84: SchedulerNode(ComputedBuffer)
buf84.writes = [MemoryDep(name='buf84', index=c0, size=(75648*s0,))]
buf84.unmet_dependencies = [   MemoryDep(name='buf83', index=75648*c0 + 64*c1 + 12608*c2 + c3, size=(s0, 197, 6, 64))]
buf84.met_dependencies = []
buf84.group.device = cuda:0
buf84.group.iteration = (75648*s0, 1)
buf84.sizes = ([s0, 197, 6, 64], [])
class buf84_loop_body:
    var_ranges = {z0: s0, z1: 197, z2: 6, z3: 64}
    index0 = 75648*z0 + 64*z1 + 12608*z2 + z3
    index1 = 75648*z0 + 384*z1 + 64*z2 + z3
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf83', get_index)
        get_index_1 = self.get_index('index1')
        store = ops.store('buf84', get_index_1, load, None)
        return store


buf85: ExternKernelSchedulerNode(ExternKernelOut)
buf85.writes = [StarDep(name='buf85')]
buf85.unmet_dependencies = [StarDep(name='buf84')]
buf85.met_dependencies = [StarDep(name='arg44_1'), StarDep(name='arg45_1')]
buf85.node.kernel = extern_kernels.addmm


buf86_buf87_buf88_buf89_buf90: FusedSchedulerNode(NoneType)
buf86_buf87_buf88_buf89_buf90.writes = 
    [   MemoryDep(name='buf86', index=c0, size=(75648*s0,)),
        MemoryDep(name='buf87', index=c0, size=(197*s0, 384)),
        MemoryDep(name='buf87', index=c0, size=(197*s0,)),
        MemoryDep(name='buf88', index=c0, size=(197*s0,)),
        MemoryDep(name='buf89', index=c0, size=(197*s0, 384)),
        MemoryDep(name='buf89', index=c0, size=(197*s0,)),
        MemoryDep(name='buf90', index=c0, size=(75648*s0,))]
buf86_buf87_buf88_buf89_buf90.unmet_dependencies = 
    [   MemoryDep(name='buf41', index=c0, size=(75648*s0,)),
        MemoryDep(name='buf48', index=c0, size=(75648*s0,)),
        MemoryDep(name='buf63', index=c0, size=(75648*s0,)),
        MemoryDep(name='buf70', index=c0, size=(75648*s0,)),
        MemoryDep(name='buf85', index=c0, size=(75648*s0,)),
        MemoryDep(name='buf88', index=c0, size=(197*s0, 384))]
buf86_buf87_buf88_buf89_buf90.met_dependencies = 
    [   MemoryDep(name='arg46_1', index=c1, size=(197*s0, 384)),
        MemoryDep(name='arg47_1', index=c1, size=(197*s0, 384))]
buf86_buf87_buf88_buf89_buf90.snodes = ['buf86', 'buf87', 'buf88', 'buf89', 'buf90']


buf91: ExternKernelSchedulerNode(ExternKernelOut)
buf91.writes = [StarDep(name='buf91')]
buf91.unmet_dependencies = [StarDep(name='buf90')]
buf91.met_dependencies = [StarDep(name='arg48_1'), StarDep(name='arg49_1')]
buf91.node.kernel = extern_kernels.addmm


buf92: SchedulerNode(ComputedBuffer)
buf92.writes = [MemoryDep(name='buf92', index=c0, size=(302592*s0,))]
buf92.unmet_dependencies = [MemoryDep(name='buf91', index=c0, size=(302592*s0,))]
buf92.met_dependencies = []
buf92.group.device = cuda:0
buf92.group.iteration = (302592*s0, 1)
buf92.sizes = ([302592*s0], [])
class buf92_loop_body:
    var_ranges = {z0: 302592*s0}
    index0 = z0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf91', get_index)
        to_dtype = ops.to_dtype(load, torch.float32)
        constant = ops.constant(0.5, torch.float32)
        mul = ops.mul(to_dtype, constant)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('buf91', get_index_1)
        to_dtype_1 = ops.to_dtype(load_1, torch.float32)
        constant_1 = ops.constant(0.7071067811865476, torch.float32)
        mul_1 = ops.mul(to_dtype_1, constant_1)
        erf = ops.erf(mul_1)
        constant_2 = ops.constant(1, torch.float32)
        add = ops.add(erf, constant_2)
        mul_2 = ops.mul(mul, add)
        to_dtype_2 = ops.to_dtype(mul_2, torch.float16)
        get_index_2 = self.get_index('index0')
        store = ops.store('buf92', get_index_2, to_dtype_2, None)
        return store


buf93: ExternKernelSchedulerNode(ExternKernelOut)
buf93.writes = [StarDep(name='buf93')]
buf93.unmet_dependencies = [StarDep(name='buf92')]
buf93.met_dependencies = [StarDep(name='arg50_1'), StarDep(name='arg51_1')]
buf93.node.kernel = extern_kernels.addmm


buf94_buf95_buf96_buf97: FusedSchedulerNode(NoneType)
buf94_buf95_buf96_buf97.writes = 
    [   MemoryDep(name='buf94', index=c0, size=(197*s0, 384)),
        MemoryDep(name='buf94', index=c0, size=(197*s0,)),
        MemoryDep(name='buf95', index=c0, size=(197*s0,)),
        MemoryDep(name='buf96', index=c0, size=(197*s0, 384)),
        MemoryDep(name='buf96', index=c0, size=(197*s0,)),
        MemoryDep(name='buf97', index=c0, size=(75648*s0,))]
buf94_buf95_buf96_buf97.unmet_dependencies = 
    [   MemoryDep(name='buf86', index=c0, size=(75648*s0,)),
        MemoryDep(name='buf93', index=c0, size=(75648*s0,)),
        MemoryDep(name='buf95', index=c0, size=(197*s0, 384))]
buf94_buf95_buf96_buf97.met_dependencies = 
    [   MemoryDep(name='arg52_1', index=c1, size=(197*s0, 384)),
        MemoryDep(name='arg53_1', index=c1, size=(197*s0, 384))]
buf94_buf95_buf96_buf97.snodes = ['buf94', 'buf95', 'buf96', 'buf97']


buf98: ExternKernelSchedulerNode(ExternKernelOut)
buf98.writes = [StarDep(name='buf98')]
buf98.unmet_dependencies = [StarDep(name='buf97')]
buf98.met_dependencies = [StarDep(name='arg54_1'), StarDep(name='arg55_1')]
buf98.node.kernel = extern_kernels.addmm


buf99: SchedulerNode(ComputedBuffer)
buf99.writes = [MemoryDep(name='buf99', index=c0, size=(75648*s0,))]
buf99.unmet_dependencies = [   MemoryDep(name='buf98', index=226944*c0 + 64*c1 + 1152*c2 + c3, size=(s0, 6, 197, 64))]
buf99.met_dependencies = []
buf99.group.device = cuda:0
buf99.group.iteration = (75648*s0, 1)
buf99.sizes = ([s0, 6, 197, 64], [])
class buf99_loop_body:
    var_ranges = {z0: s0, z1: 6, z2: 197, z3: 64}
    index0 = 226944*z0 + 64*z1 + 1152*z2 + z3
    index1 = 75648*z0 + 12608*z1 + 64*z2 + z3
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf98', get_index)
        get_index_1 = self.get_index('index1')
        store = ops.store('buf99', get_index_1, load, None)
        return store


buf100: SchedulerNode(ComputedBuffer)
buf100.writes = [MemoryDep(name='buf100', index=c0, size=(75648*s0,))]
buf100.unmet_dependencies = [   MemoryDep(name='buf98', index=226944*c0 + c1 + 1152*c2 + 384, size=(s0, 384, 197))]
buf100.met_dependencies = []
buf100.group.device = cuda:0
buf100.group.iteration = (75648*s0, 1)
buf100.sizes = ([s0, 384, 197], [])
class buf100_loop_body:
    var_ranges = {z0: s0, z1: 384, z2: 197}
    index0 = 226944*z0 + z1 + 1152*z2 + 384
    index1 = 75648*z0 + 197*z1 + z2
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf98', get_index)
        get_index_1 = self.get_index('index1')
        store = ops.store('buf100', get_index_1, load, None)
        return store


buf101: ExternKernelSchedulerNode(ExternKernelOut)
buf101.writes = [StarDep(name='buf101')]
buf101.unmet_dependencies = [StarDep(name='buf100'), StarDep(name='buf99')]
buf101.met_dependencies = []
buf101.node.kernel = extern_kernels.bmm


buf102_buf103_buf104: FusedSchedulerNode(NoneType)
buf102_buf103_buf104.writes = 
    [   MemoryDep(name='buf102', index=c0, size=(1182*s0, 197)),
        MemoryDep(name='buf102', index=c0, size=(1182*s0,)),
        MemoryDep(name='buf103', index=c0, size=(1182*s0, 197)),
        MemoryDep(name='buf103', index=c0, size=(1182*s0,)),
        MemoryDep(name='buf104', index=c0, size=(232854*s0,))]
buf102_buf103_buf104.unmet_dependencies = [MemoryDep(name='buf101', index=c0, size=(232854*s0,))]
buf102_buf103_buf104.met_dependencies = []
buf102_buf103_buf104.snodes = ['buf102', 'buf103', 'buf104']


buf105: SchedulerNode(ComputedBuffer)
buf105.writes = [MemoryDep(name='buf105', index=c0, size=(75648*s0,))]
buf105.unmet_dependencies = [   MemoryDep(name='buf98', index=226944*c0 + 64*c1 + 1152*c2 + c3 + 768, size=(s0, 6, 197, 64))]
buf105.met_dependencies = []
buf105.group.device = cuda:0
buf105.group.iteration = (75648*s0, 1)
buf105.sizes = ([s0, 6, 197, 64], [])
class buf105_loop_body:
    var_ranges = {z0: s0, z1: 6, z2: 197, z3: 64}
    index0 = 226944*z0 + 64*z1 + 1152*z2 + z3 + 768
    index1 = 75648*z0 + 12608*z1 + 64*z2 + z3
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf98', get_index)
        get_index_1 = self.get_index('index1')
        store = ops.store('buf105', get_index_1, load, None)
        return store


buf106: ExternKernelSchedulerNode(ExternKernelOut)
buf106.writes = [StarDep(name='buf106')]
buf106.unmet_dependencies = [StarDep(name='buf104'), StarDep(name='buf105')]
buf106.met_dependencies = []
buf106.node.kernel = extern_kernels.bmm


buf107: SchedulerNode(ComputedBuffer)
buf107.writes = [MemoryDep(name='buf107', index=c0, size=(75648*s0,))]
buf107.unmet_dependencies = [   MemoryDep(name='buf106', index=75648*c0 + 64*c1 + 12608*c2 + c3, size=(s0, 197, 6, 64))]
buf107.met_dependencies = []
buf107.group.device = cuda:0
buf107.group.iteration = (75648*s0, 1)
buf107.sizes = ([s0, 197, 6, 64], [])
class buf107_loop_body:
    var_ranges = {z0: s0, z1: 197, z2: 6, z3: 64}
    index0 = 75648*z0 + 64*z1 + 12608*z2 + z3
    index1 = 75648*z0 + 384*z1 + 64*z2 + z3
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf106', get_index)
        get_index_1 = self.get_index('index1')
        store = ops.store('buf107', get_index_1, load, None)
        return store


buf108: ExternKernelSchedulerNode(ExternKernelOut)
buf108.writes = [StarDep(name='buf108')]
buf108.unmet_dependencies = [StarDep(name='buf107')]
buf108.met_dependencies = [StarDep(name='arg56_1'), StarDep(name='arg57_1')]
buf108.node.kernel = extern_kernels.addmm


buf109_buf110_buf111_buf112: FusedSchedulerNode(NoneType)
buf109_buf110_buf111_buf112.writes = 
    [   MemoryDep(name='buf109', index=c0, size=(197*s0, 384)),
        MemoryDep(name='buf109', index=c0, size=(197*s0,)),
        MemoryDep(name='buf110', index=c0, size=(197*s0,)),
        MemoryDep(name='buf111', index=c0, size=(197*s0, 384)),
        MemoryDep(name='buf111', index=c0, size=(197*s0,)),
        MemoryDep(name='buf112', index=c0, size=(75648*s0,))]
buf109_buf110_buf111_buf112.unmet_dependencies = 
    [   MemoryDep(name='buf108', index=c0, size=(75648*s0,)),
        MemoryDep(name='buf110', index=c0, size=(197*s0, 384)),
        MemoryDep(name='buf86', index=c0, size=(75648*s0,)),
        MemoryDep(name='buf93', index=c0, size=(75648*s0,))]
buf109_buf110_buf111_buf112.met_dependencies = 
    [   MemoryDep(name='arg58_1', index=c1, size=(197*s0, 384)),
        MemoryDep(name='arg59_1', index=c1, size=(197*s0, 384))]
buf109_buf110_buf111_buf112.snodes = ['buf109', 'buf110', 'buf111', 'buf112']


buf113: ExternKernelSchedulerNode(ExternKernelOut)
buf113.writes = [StarDep(name='buf113')]
buf113.unmet_dependencies = [StarDep(name='buf112')]
buf113.met_dependencies = [StarDep(name='arg60_1'), StarDep(name='arg61_1')]
buf113.node.kernel = extern_kernels.addmm


buf114: SchedulerNode(ComputedBuffer)
buf114.writes = [MemoryDep(name='buf114', index=c0, size=(302592*s0,))]
buf114.unmet_dependencies = [MemoryDep(name='buf113', index=c0, size=(302592*s0,))]
buf114.met_dependencies = []
buf114.group.device = cuda:0
buf114.group.iteration = (302592*s0, 1)
buf114.sizes = ([302592*s0], [])
class buf114_loop_body:
    var_ranges = {z0: 302592*s0}
    index0 = z0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf113', get_index)
        to_dtype = ops.to_dtype(load, torch.float32)
        constant = ops.constant(0.5, torch.float32)
        mul = ops.mul(to_dtype, constant)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('buf113', get_index_1)
        to_dtype_1 = ops.to_dtype(load_1, torch.float32)
        constant_1 = ops.constant(0.7071067811865476, torch.float32)
        mul_1 = ops.mul(to_dtype_1, constant_1)
        erf = ops.erf(mul_1)
        constant_2 = ops.constant(1, torch.float32)
        add = ops.add(erf, constant_2)
        mul_2 = ops.mul(mul, add)
        to_dtype_2 = ops.to_dtype(mul_2, torch.float16)
        get_index_2 = self.get_index('index0')
        store = ops.store('buf114', get_index_2, to_dtype_2, None)
        return store


buf115: ExternKernelSchedulerNode(ExternKernelOut)
buf115.writes = [StarDep(name='buf115')]
buf115.unmet_dependencies = [StarDep(name='buf114')]
buf115.met_dependencies = [StarDep(name='arg62_1'), StarDep(name='arg63_1')]
buf115.node.kernel = extern_kernels.addmm


buf116_buf117_buf118_buf119: FusedSchedulerNode(NoneType)
buf116_buf117_buf118_buf119.writes = 
    [   MemoryDep(name='buf116', index=c0, size=(197*s0, 384)),
        MemoryDep(name='buf116', index=c0, size=(197*s0,)),
        MemoryDep(name='buf117', index=c0, size=(197*s0,)),
        MemoryDep(name='buf118', index=c0, size=(197*s0, 384)),
        MemoryDep(name='buf118', index=c0, size=(197*s0,)),
        MemoryDep(name='buf119', index=c0, size=(75648*s0,))]
buf116_buf117_buf118_buf119.unmet_dependencies = 
    [   MemoryDep(name='buf108', index=c0, size=(75648*s0,)),
        MemoryDep(name='buf115', index=c0, size=(75648*s0,)),
        MemoryDep(name='buf117', index=c0, size=(197*s0, 384)),
        MemoryDep(name='buf86', index=c0, size=(75648*s0,)),
        MemoryDep(name='buf93', index=c0, size=(75648*s0,))]
buf116_buf117_buf118_buf119.met_dependencies = 
    [   MemoryDep(name='arg64_1', index=c1, size=(197*s0, 384)),
        MemoryDep(name='arg65_1', index=c1, size=(197*s0, 384))]
buf116_buf117_buf118_buf119.snodes = ['buf116', 'buf117', 'buf118', 'buf119']


buf120: ExternKernelSchedulerNode(ExternKernelOut)
buf120.writes = [StarDep(name='buf120')]
buf120.unmet_dependencies = [StarDep(name='buf119')]
buf120.met_dependencies = [StarDep(name='arg66_1'), StarDep(name='arg67_1')]
buf120.node.kernel = extern_kernels.addmm


buf121: SchedulerNode(ComputedBuffer)
buf121.writes = [MemoryDep(name='buf121', index=c0, size=(75648*s0,))]
buf121.unmet_dependencies = [   MemoryDep(name='buf120', index=226944*c0 + 64*c1 + 1152*c2 + c3, size=(s0, 6, 197, 64))]
buf121.met_dependencies = []
buf121.group.device = cuda:0
buf121.group.iteration = (75648*s0, 1)
buf121.sizes = ([s0, 6, 197, 64], [])
class buf121_loop_body:
    var_ranges = {z0: s0, z1: 6, z2: 197, z3: 64}
    index0 = 226944*z0 + 64*z1 + 1152*z2 + z3
    index1 = 75648*z0 + 12608*z1 + 64*z2 + z3
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf120', get_index)
        get_index_1 = self.get_index('index1')
        store = ops.store('buf121', get_index_1, load, None)
        return store


buf122: SchedulerNode(ComputedBuffer)
buf122.writes = [MemoryDep(name='buf122', index=c0, size=(75648*s0,))]
buf122.unmet_dependencies = [   MemoryDep(name='buf120', index=226944*c0 + c1 + 1152*c2 + 384, size=(s0, 384, 197))]
buf122.met_dependencies = []
buf122.group.device = cuda:0
buf122.group.iteration = (75648*s0, 1)
buf122.sizes = ([s0, 384, 197], [])
class buf122_loop_body:
    var_ranges = {z0: s0, z1: 384, z2: 197}
    index0 = 226944*z0 + z1 + 1152*z2 + 384
    index1 = 75648*z0 + 197*z1 + z2
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf120', get_index)
        get_index_1 = self.get_index('index1')
        store = ops.store('buf122', get_index_1, load, None)
        return store


buf123: ExternKernelSchedulerNode(ExternKernelOut)
buf123.writes = [StarDep(name='buf123')]
buf123.unmet_dependencies = [StarDep(name='buf121'), StarDep(name='buf122')]
buf123.met_dependencies = []
buf123.node.kernel = extern_kernels.bmm


buf124_buf125_buf126: FusedSchedulerNode(NoneType)
buf124_buf125_buf126.writes = 
    [   MemoryDep(name='buf124', index=c0, size=(1182*s0, 197)),
        MemoryDep(name='buf124', index=c0, size=(1182*s0,)),
        MemoryDep(name='buf125', index=c0, size=(1182*s0, 197)),
        MemoryDep(name='buf125', index=c0, size=(1182*s0,)),
        MemoryDep(name='buf126', index=c0, size=(232854*s0,))]
buf124_buf125_buf126.unmet_dependencies = [MemoryDep(name='buf123', index=c0, size=(232854*s0,))]
buf124_buf125_buf126.met_dependencies = []
buf124_buf125_buf126.snodes = ['buf124', 'buf125', 'buf126']


buf127: SchedulerNode(ComputedBuffer)
buf127.writes = [MemoryDep(name='buf127', index=c0, size=(75648*s0,))]
buf127.unmet_dependencies = [   MemoryDep(name='buf120', index=226944*c0 + 64*c1 + 1152*c2 + c3 + 768, size=(s0, 6, 197, 64))]
buf127.met_dependencies = []
buf127.group.device = cuda:0
buf127.group.iteration = (75648*s0, 1)
buf127.sizes = ([s0, 6, 197, 64], [])
class buf127_loop_body:
    var_ranges = {z0: s0, z1: 6, z2: 197, z3: 64}
    index0 = 226944*z0 + 64*z1 + 1152*z2 + z3 + 768
    index1 = 75648*z0 + 12608*z1 + 64*z2 + z3
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf120', get_index)
        get_index_1 = self.get_index('index1')
        store = ops.store('buf127', get_index_1, load, None)
        return store


buf128: ExternKernelSchedulerNode(ExternKernelOut)
buf128.writes = [StarDep(name='buf128')]
buf128.unmet_dependencies = [StarDep(name='buf126'), StarDep(name='buf127')]
buf128.met_dependencies = []
buf128.node.kernel = extern_kernels.bmm


buf129: SchedulerNode(ComputedBuffer)
buf129.writes = [MemoryDep(name='buf129', index=c0, size=(75648*s0,))]
buf129.unmet_dependencies = [   MemoryDep(name='buf128', index=75648*c0 + 64*c1 + 12608*c2 + c3, size=(s0, 197, 6, 64))]
buf129.met_dependencies = []
buf129.group.device = cuda:0
buf129.group.iteration = (75648*s0, 1)
buf129.sizes = ([s0, 197, 6, 64], [])
class buf129_loop_body:
    var_ranges = {z0: s0, z1: 197, z2: 6, z3: 64}
    index0 = 75648*z0 + 64*z1 + 12608*z2 + z3
    index1 = 75648*z0 + 384*z1 + 64*z2 + z3
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf128', get_index)
        get_index_1 = self.get_index('index1')
        store = ops.store('buf129', get_index_1, load, None)
        return store


buf130: ExternKernelSchedulerNode(ExternKernelOut)
buf130.writes = [StarDep(name='buf130')]
buf130.unmet_dependencies = [StarDep(name='buf129')]
buf130.met_dependencies = [StarDep(name='arg68_1'), StarDep(name='arg69_1')]
buf130.node.kernel = extern_kernels.addmm


buf131_buf132_buf133_buf134_buf135: FusedSchedulerNode(NoneType)
buf131_buf132_buf133_buf134_buf135.writes = 
    [   MemoryDep(name='buf131', index=c0, size=(75648*s0,)),
        MemoryDep(name='buf132', index=c0, size=(197*s0, 384)),
        MemoryDep(name='buf132', index=c0, size=(197*s0,)),
        MemoryDep(name='buf133', index=c0, size=(197*s0,)),
        MemoryDep(name='buf134', index=c0, size=(197*s0, 384)),
        MemoryDep(name='buf134', index=c0, size=(197*s0,)),
        MemoryDep(name='buf135', index=c0, size=(75648*s0,))]
buf131_buf132_buf133_buf134_buf135.unmet_dependencies = 
    [   MemoryDep(name='buf108', index=c0, size=(75648*s0,)),
        MemoryDep(name='buf115', index=c0, size=(75648*s0,)),
        MemoryDep(name='buf130', index=c0, size=(75648*s0,)),
        MemoryDep(name='buf133', index=c0, size=(197*s0, 384)),
        MemoryDep(name='buf86', index=c0, size=(75648*s0,)),
        MemoryDep(name='buf93', index=c0, size=(75648*s0,))]
buf131_buf132_buf133_buf134_buf135.met_dependencies = 
    [   MemoryDep(name='arg70_1', index=c1, size=(197*s0, 384)),
        MemoryDep(name='arg71_1', index=c1, size=(197*s0, 384))]
buf131_buf132_buf133_buf134_buf135.snodes = ['buf131', 'buf132', 'buf133', 'buf134', 'buf135']


buf136: ExternKernelSchedulerNode(ExternKernelOut)
buf136.writes = [StarDep(name='buf136')]
buf136.unmet_dependencies = [StarDep(name='buf135')]
buf136.met_dependencies = [StarDep(name='arg72_1'), StarDep(name='arg73_1')]
buf136.node.kernel = extern_kernels.addmm


buf137: SchedulerNode(ComputedBuffer)
buf137.writes = [MemoryDep(name='buf137', index=c0, size=(302592*s0,))]
buf137.unmet_dependencies = [MemoryDep(name='buf136', index=c0, size=(302592*s0,))]
buf137.met_dependencies = []
buf137.group.device = cuda:0
buf137.group.iteration = (302592*s0, 1)
buf137.sizes = ([302592*s0], [])
class buf137_loop_body:
    var_ranges = {z0: 302592*s0}
    index0 = z0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf136', get_index)
        to_dtype = ops.to_dtype(load, torch.float32)
        constant = ops.constant(0.5, torch.float32)
        mul = ops.mul(to_dtype, constant)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('buf136', get_index_1)
        to_dtype_1 = ops.to_dtype(load_1, torch.float32)
        constant_1 = ops.constant(0.7071067811865476, torch.float32)
        mul_1 = ops.mul(to_dtype_1, constant_1)
        erf = ops.erf(mul_1)
        constant_2 = ops.constant(1, torch.float32)
        add = ops.add(erf, constant_2)
        mul_2 = ops.mul(mul, add)
        to_dtype_2 = ops.to_dtype(mul_2, torch.float16)
        get_index_2 = self.get_index('index0')
        store = ops.store('buf137', get_index_2, to_dtype_2, None)
        return store


buf138: ExternKernelSchedulerNode(ExternKernelOut)
buf138.writes = [StarDep(name='buf138')]
buf138.unmet_dependencies = [StarDep(name='buf137')]
buf138.met_dependencies = [StarDep(name='arg74_1'), StarDep(name='arg75_1')]
buf138.node.kernel = extern_kernels.addmm


buf139_buf140_buf141_buf142: FusedSchedulerNode(NoneType)
buf139_buf140_buf141_buf142.writes = 
    [   MemoryDep(name='buf139', index=c0, size=(197*s0, 384)),
        MemoryDep(name='buf139', index=c0, size=(197*s0,)),
        MemoryDep(name='buf140', index=c0, size=(197*s0,)),
        MemoryDep(name='buf141', index=c0, size=(197*s0, 384)),
        MemoryDep(name='buf141', index=c0, size=(197*s0,)),
        MemoryDep(name='buf142', index=c0, size=(75648*s0,))]
buf139_buf140_buf141_buf142.unmet_dependencies = 
    [   MemoryDep(name='buf131', index=c0, size=(75648*s0,)),
        MemoryDep(name='buf138', index=c0, size=(75648*s0,)),
        MemoryDep(name='buf140', index=c0, size=(197*s0, 384))]
buf139_buf140_buf141_buf142.met_dependencies = 
    [   MemoryDep(name='arg76_1', index=c1, size=(197*s0, 384)),
        MemoryDep(name='arg77_1', index=c1, size=(197*s0, 384))]
buf139_buf140_buf141_buf142.snodes = ['buf139', 'buf140', 'buf141', 'buf142']


buf143: ExternKernelSchedulerNode(ExternKernelOut)
buf143.writes = [StarDep(name='buf143')]
buf143.unmet_dependencies = [StarDep(name='buf142')]
buf143.met_dependencies = [StarDep(name='arg78_1'), StarDep(name='arg79_1')]
buf143.node.kernel = extern_kernels.addmm


buf144: SchedulerNode(ComputedBuffer)
buf144.writes = [MemoryDep(name='buf144', index=c0, size=(75648*s0,))]
buf144.unmet_dependencies = [   MemoryDep(name='buf143', index=226944*c0 + 64*c1 + 1152*c2 + c3, size=(s0, 6, 197, 64))]
buf144.met_dependencies = []
buf144.group.device = cuda:0
buf144.group.iteration = (75648*s0, 1)
buf144.sizes = ([s0, 6, 197, 64], [])
class buf144_loop_body:
    var_ranges = {z0: s0, z1: 6, z2: 197, z3: 64}
    index0 = 226944*z0 + 64*z1 + 1152*z2 + z3
    index1 = 75648*z0 + 12608*z1 + 64*z2 + z3
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf143', get_index)
        get_index_1 = self.get_index('index1')
        store = ops.store('buf144', get_index_1, load, None)
        return store


buf145: SchedulerNode(ComputedBuffer)
buf145.writes = [MemoryDep(name='buf145', index=c0, size=(75648*s0,))]
buf145.unmet_dependencies = [   MemoryDep(name='buf143', index=226944*c0 + c1 + 1152*c2 + 384, size=(s0, 384, 197))]
buf145.met_dependencies = []
buf145.group.device = cuda:0
buf145.group.iteration = (75648*s0, 1)
buf145.sizes = ([s0, 384, 197], [])
class buf145_loop_body:
    var_ranges = {z0: s0, z1: 384, z2: 197}
    index0 = 226944*z0 + z1 + 1152*z2 + 384
    index1 = 75648*z0 + 197*z1 + z2
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf143', get_index)
        get_index_1 = self.get_index('index1')
        store = ops.store('buf145', get_index_1, load, None)
        return store


buf146: ExternKernelSchedulerNode(ExternKernelOut)
buf146.writes = [StarDep(name='buf146')]
buf146.unmet_dependencies = [StarDep(name='buf144'), StarDep(name='buf145')]
buf146.met_dependencies = []
buf146.node.kernel = extern_kernels.bmm


buf147_buf148_buf149: FusedSchedulerNode(NoneType)
buf147_buf148_buf149.writes = 
    [   MemoryDep(name='buf147', index=c0, size=(1182*s0, 197)),
        MemoryDep(name='buf147', index=c0, size=(1182*s0,)),
        MemoryDep(name='buf148', index=c0, size=(1182*s0, 197)),
        MemoryDep(name='buf148', index=c0, size=(1182*s0,)),
        MemoryDep(name='buf149', index=c0, size=(232854*s0,))]
buf147_buf148_buf149.unmet_dependencies = [MemoryDep(name='buf146', index=c0, size=(232854*s0,))]
buf147_buf148_buf149.met_dependencies = []
buf147_buf148_buf149.snodes = ['buf147', 'buf148', 'buf149']


buf150: SchedulerNode(ComputedBuffer)
buf150.writes = [MemoryDep(name='buf150', index=c0, size=(75648*s0,))]
buf150.unmet_dependencies = [   MemoryDep(name='buf143', index=226944*c0 + 64*c1 + 1152*c2 + c3 + 768, size=(s0, 6, 197, 64))]
buf150.met_dependencies = []
buf150.group.device = cuda:0
buf150.group.iteration = (75648*s0, 1)
buf150.sizes = ([s0, 6, 197, 64], [])
class buf150_loop_body:
    var_ranges = {z0: s0, z1: 6, z2: 197, z3: 64}
    index0 = 226944*z0 + 64*z1 + 1152*z2 + z3 + 768
    index1 = 75648*z0 + 12608*z1 + 64*z2 + z3
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf143', get_index)
        get_index_1 = self.get_index('index1')
        store = ops.store('buf150', get_index_1, load, None)
        return store


buf151: ExternKernelSchedulerNode(ExternKernelOut)
buf151.writes = [StarDep(name='buf151')]
buf151.unmet_dependencies = [StarDep(name='buf149'), StarDep(name='buf150')]
buf151.met_dependencies = []
buf151.node.kernel = extern_kernels.bmm


buf152: SchedulerNode(ComputedBuffer)
buf152.writes = [MemoryDep(name='buf152', index=c0, size=(75648*s0,))]
buf152.unmet_dependencies = [   MemoryDep(name='buf151', index=75648*c0 + 64*c1 + 12608*c2 + c3, size=(s0, 197, 6, 64))]
buf152.met_dependencies = []
buf152.group.device = cuda:0
buf152.group.iteration = (75648*s0, 1)
buf152.sizes = ([s0, 197, 6, 64], [])
class buf152_loop_body:
    var_ranges = {z0: s0, z1: 197, z2: 6, z3: 64}
    index0 = 75648*z0 + 64*z1 + 12608*z2 + z3
    index1 = 75648*z0 + 384*z1 + 64*z2 + z3
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf151', get_index)
        get_index_1 = self.get_index('index1')
        store = ops.store('buf152', get_index_1, load, None)
        return store


buf153: ExternKernelSchedulerNode(ExternKernelOut)
buf153.writes = [StarDep(name='buf153')]
buf153.unmet_dependencies = [StarDep(name='buf152')]
buf153.met_dependencies = [StarDep(name='arg80_1'), StarDep(name='arg81_1')]
buf153.node.kernel = extern_kernels.addmm


buf154_buf155_buf156_buf157: FusedSchedulerNode(NoneType)
buf154_buf155_buf156_buf157.writes = 
    [   MemoryDep(name='buf154', index=c0, size=(197*s0, 384)),
        MemoryDep(name='buf154', index=c0, size=(197*s0,)),
        MemoryDep(name='buf155', index=c0, size=(197*s0,)),
        MemoryDep(name='buf156', index=c0, size=(197*s0, 384)),
        MemoryDep(name='buf156', index=c0, size=(197*s0,)),
        MemoryDep(name='buf157', index=c0, size=(75648*s0,))]
buf154_buf155_buf156_buf157.unmet_dependencies = 
    [   MemoryDep(name='buf131', index=c0, size=(75648*s0,)),
        MemoryDep(name='buf138', index=c0, size=(75648*s0,)),
        MemoryDep(name='buf153', index=c0, size=(75648*s0,)),
        MemoryDep(name='buf155', index=c0, size=(197*s0, 384))]
buf154_buf155_buf156_buf157.met_dependencies = 
    [   MemoryDep(name='arg82_1', index=c1, size=(197*s0, 384)),
        MemoryDep(name='arg83_1', index=c1, size=(197*s0, 384))]
buf154_buf155_buf156_buf157.snodes = ['buf154', 'buf155', 'buf156', 'buf157']


buf158: ExternKernelSchedulerNode(ExternKernelOut)
buf158.writes = [StarDep(name='buf158')]
buf158.unmet_dependencies = [StarDep(name='buf157')]
buf158.met_dependencies = [StarDep(name='arg84_1'), StarDep(name='arg85_1')]
buf158.node.kernel = extern_kernels.addmm


buf159: SchedulerNode(ComputedBuffer)
buf159.writes = [MemoryDep(name='buf159', index=c0, size=(302592*s0,))]
buf159.unmet_dependencies = [MemoryDep(name='buf158', index=c0, size=(302592*s0,))]
buf159.met_dependencies = []
buf159.group.device = cuda:0
buf159.group.iteration = (302592*s0, 1)
buf159.sizes = ([302592*s0], [])
class buf159_loop_body:
    var_ranges = {z0: 302592*s0}
    index0 = z0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf158', get_index)
        to_dtype = ops.to_dtype(load, torch.float32)
        constant = ops.constant(0.5, torch.float32)
        mul = ops.mul(to_dtype, constant)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('buf158', get_index_1)
        to_dtype_1 = ops.to_dtype(load_1, torch.float32)
        constant_1 = ops.constant(0.7071067811865476, torch.float32)
        mul_1 = ops.mul(to_dtype_1, constant_1)
        erf = ops.erf(mul_1)
        constant_2 = ops.constant(1, torch.float32)
        add = ops.add(erf, constant_2)
        mul_2 = ops.mul(mul, add)
        to_dtype_2 = ops.to_dtype(mul_2, torch.float16)
        get_index_2 = self.get_index('index0')
        store = ops.store('buf159', get_index_2, to_dtype_2, None)
        return store


buf160: ExternKernelSchedulerNode(ExternKernelOut)
buf160.writes = [StarDep(name='buf160')]
buf160.unmet_dependencies = [StarDep(name='buf159')]
buf160.met_dependencies = [StarDep(name='arg86_1'), StarDep(name='arg87_1')]
buf160.node.kernel = extern_kernels.addmm


buf161_buf162_buf163_buf164: FusedSchedulerNode(NoneType)
buf161_buf162_buf163_buf164.writes = 
    [   MemoryDep(name='buf161', index=c0, size=(197*s0, 384)),
        MemoryDep(name='buf161', index=c0, size=(197*s0,)),
        MemoryDep(name='buf162', index=c0, size=(197*s0,)),
        MemoryDep(name='buf163', index=c0, size=(197*s0, 384)),
        MemoryDep(name='buf163', index=c0, size=(197*s0,)),
        MemoryDep(name='buf164', index=c0, size=(75648*s0,))]
buf161_buf162_buf163_buf164.unmet_dependencies = 
    [   MemoryDep(name='buf131', index=c0, size=(75648*s0,)),
        MemoryDep(name='buf138', index=c0, size=(75648*s0,)),
        MemoryDep(name='buf153', index=c0, size=(75648*s0,)),
        MemoryDep(name='buf160', index=c0, size=(75648*s0,)),
        MemoryDep(name='buf162', index=c0, size=(197*s0, 384))]
buf161_buf162_buf163_buf164.met_dependencies = 
    [   MemoryDep(name='arg88_1', index=c1, size=(197*s0, 384)),
        MemoryDep(name='arg89_1', index=c1, size=(197*s0, 384))]
buf161_buf162_buf163_buf164.snodes = ['buf161', 'buf162', 'buf163', 'buf164']


buf165: ExternKernelSchedulerNode(ExternKernelOut)
buf165.writes = [StarDep(name='buf165')]
buf165.unmet_dependencies = [StarDep(name='buf164')]
buf165.met_dependencies = [StarDep(name='arg90_1'), StarDep(name='arg91_1')]
buf165.node.kernel = extern_kernels.addmm


buf166: SchedulerNode(ComputedBuffer)
buf166.writes = [MemoryDep(name='buf166', index=c0, size=(75648*s0,))]
buf166.unmet_dependencies = [   MemoryDep(name='buf165', index=226944*c0 + 64*c1 + 1152*c2 + c3, size=(s0, 6, 197, 64))]
buf166.met_dependencies = []
buf166.group.device = cuda:0
buf166.group.iteration = (75648*s0, 1)
buf166.sizes = ([s0, 6, 197, 64], [])
class buf166_loop_body:
    var_ranges = {z0: s0, z1: 6, z2: 197, z3: 64}
    index0 = 226944*z0 + 64*z1 + 1152*z2 + z3
    index1 = 75648*z0 + 12608*z1 + 64*z2 + z3
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf165', get_index)
        get_index_1 = self.get_index('index1')
        store = ops.store('buf166', get_index_1, load, None)
        return store


buf167: SchedulerNode(ComputedBuffer)
buf167.writes = [MemoryDep(name='buf167', index=c0, size=(75648*s0,))]
buf167.unmet_dependencies = [   MemoryDep(name='buf165', index=226944*c0 + c1 + 1152*c2 + 384, size=(s0, 384, 197))]
buf167.met_dependencies = []
buf167.group.device = cuda:0
buf167.group.iteration = (75648*s0, 1)
buf167.sizes = ([s0, 384, 197], [])
class buf167_loop_body:
    var_ranges = {z0: s0, z1: 384, z2: 197}
    index0 = 226944*z0 + z1 + 1152*z2 + 384
    index1 = 75648*z0 + 197*z1 + z2
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf165', get_index)
        get_index_1 = self.get_index('index1')
        store = ops.store('buf167', get_index_1, load, None)
        return store


buf168: ExternKernelSchedulerNode(ExternKernelOut)
buf168.writes = [StarDep(name='buf168')]
buf168.unmet_dependencies = [StarDep(name='buf166'), StarDep(name='buf167')]
buf168.met_dependencies = []
buf168.node.kernel = extern_kernels.bmm


buf169_buf170_buf171: FusedSchedulerNode(NoneType)
buf169_buf170_buf171.writes = 
    [   MemoryDep(name='buf169', index=c0, size=(1182*s0, 197)),
        MemoryDep(name='buf169', index=c0, size=(1182*s0,)),
        MemoryDep(name='buf170', index=c0, size=(1182*s0, 197)),
        MemoryDep(name='buf170', index=c0, size=(1182*s0,)),
        MemoryDep(name='buf171', index=c0, size=(232854*s0,))]
buf169_buf170_buf171.unmet_dependencies = [MemoryDep(name='buf168', index=c0, size=(232854*s0,))]
buf169_buf170_buf171.met_dependencies = []
buf169_buf170_buf171.snodes = ['buf169', 'buf170', 'buf171']


buf172: SchedulerNode(ComputedBuffer)
buf172.writes = [MemoryDep(name='buf172', index=c0, size=(75648*s0,))]
buf172.unmet_dependencies = [   MemoryDep(name='buf165', index=226944*c0 + 64*c1 + 1152*c2 + c3 + 768, size=(s0, 6, 197, 64))]
buf172.met_dependencies = []
buf172.group.device = cuda:0
buf172.group.iteration = (75648*s0, 1)
buf172.sizes = ([s0, 6, 197, 64], [])
class buf172_loop_body:
    var_ranges = {z0: s0, z1: 6, z2: 197, z3: 64}
    index0 = 226944*z0 + 64*z1 + 1152*z2 + z3 + 768
    index1 = 75648*z0 + 12608*z1 + 64*z2 + z3
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf165', get_index)
        get_index_1 = self.get_index('index1')
        store = ops.store('buf172', get_index_1, load, None)
        return store


buf173: ExternKernelSchedulerNode(ExternKernelOut)
buf173.writes = [StarDep(name='buf173')]
buf173.unmet_dependencies = [StarDep(name='buf171'), StarDep(name='buf172')]
buf173.met_dependencies = []
buf173.node.kernel = extern_kernels.bmm


buf174: SchedulerNode(ComputedBuffer)
buf174.writes = [MemoryDep(name='buf174', index=c0, size=(75648*s0,))]
buf174.unmet_dependencies = [   MemoryDep(name='buf173', index=75648*c0 + 64*c1 + 12608*c2 + c3, size=(s0, 197, 6, 64))]
buf174.met_dependencies = []
buf174.group.device = cuda:0
buf174.group.iteration = (75648*s0, 1)
buf174.sizes = ([s0, 197, 6, 64], [])
class buf174_loop_body:
    var_ranges = {z0: s0, z1: 197, z2: 6, z3: 64}
    index0 = 75648*z0 + 64*z1 + 12608*z2 + z3
    index1 = 75648*z0 + 384*z1 + 64*z2 + z3
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf173', get_index)
        get_index_1 = self.get_index('index1')
        store = ops.store('buf174', get_index_1, load, None)
        return store


buf175: ExternKernelSchedulerNode(ExternKernelOut)
buf175.writes = [StarDep(name='buf175')]
buf175.unmet_dependencies = [StarDep(name='buf174')]
buf175.met_dependencies = [StarDep(name='arg92_1'), StarDep(name='arg93_1')]
buf175.node.kernel = extern_kernels.addmm


buf176_buf177_buf178_buf179_buf180: FusedSchedulerNode(NoneType)
buf176_buf177_buf178_buf179_buf180.writes = 
    [   MemoryDep(name='buf176', index=c0, size=(75648*s0,)),
        MemoryDep(name='buf177', index=c0, size=(197*s0, 384)),
        MemoryDep(name='buf177', index=c0, size=(197*s0,)),
        MemoryDep(name='buf178', index=c0, size=(197*s0,)),
        MemoryDep(name='buf179', index=c0, size=(197*s0, 384)),
        MemoryDep(name='buf179', index=c0, size=(197*s0,)),
        MemoryDep(name='buf180', index=c0, size=(75648*s0,))]
buf176_buf177_buf178_buf179_buf180.unmet_dependencies = 
    [   MemoryDep(name='buf131', index=c0, size=(75648*s0,)),
        MemoryDep(name='buf138', index=c0, size=(75648*s0,)),
        MemoryDep(name='buf153', index=c0, size=(75648*s0,)),
        MemoryDep(name='buf160', index=c0, size=(75648*s0,)),
        MemoryDep(name='buf175', index=c0, size=(75648*s0,)),
        MemoryDep(name='buf178', index=c0, size=(197*s0, 384))]
buf176_buf177_buf178_buf179_buf180.met_dependencies = 
    [   MemoryDep(name='arg94_1', index=c1, size=(197*s0, 384)),
        MemoryDep(name='arg95_1', index=c1, size=(197*s0, 384))]
buf176_buf177_buf178_buf179_buf180.snodes = ['buf176', 'buf177', 'buf178', 'buf179', 'buf180']


buf181: ExternKernelSchedulerNode(ExternKernelOut)
buf181.writes = [StarDep(name='buf181')]
buf181.unmet_dependencies = [StarDep(name='buf180')]
buf181.met_dependencies = [StarDep(name='arg96_1'), StarDep(name='arg97_1')]
buf181.node.kernel = extern_kernels.addmm


buf182: SchedulerNode(ComputedBuffer)
buf182.writes = [MemoryDep(name='buf182', index=c0, size=(302592*s0,))]
buf182.unmet_dependencies = [MemoryDep(name='buf181', index=c0, size=(302592*s0,))]
buf182.met_dependencies = []
buf182.group.device = cuda:0
buf182.group.iteration = (302592*s0, 1)
buf182.sizes = ([302592*s0], [])
class buf182_loop_body:
    var_ranges = {z0: 302592*s0}
    index0 = z0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf181', get_index)
        to_dtype = ops.to_dtype(load, torch.float32)
        constant = ops.constant(0.5, torch.float32)
        mul = ops.mul(to_dtype, constant)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('buf181', get_index_1)
        to_dtype_1 = ops.to_dtype(load_1, torch.float32)
        constant_1 = ops.constant(0.7071067811865476, torch.float32)
        mul_1 = ops.mul(to_dtype_1, constant_1)
        erf = ops.erf(mul_1)
        constant_2 = ops.constant(1, torch.float32)
        add = ops.add(erf, constant_2)
        mul_2 = ops.mul(mul, add)
        to_dtype_2 = ops.to_dtype(mul_2, torch.float16)
        get_index_2 = self.get_index('index0')
        store = ops.store('buf182', get_index_2, to_dtype_2, None)
        return store


buf183: ExternKernelSchedulerNode(ExternKernelOut)
buf183.writes = [StarDep(name='buf183')]
buf183.unmet_dependencies = [StarDep(name='buf182')]
buf183.met_dependencies = [StarDep(name='arg98_1'), StarDep(name='arg99_1')]
buf183.node.kernel = extern_kernels.addmm


buf184_buf185_buf186_buf187: FusedSchedulerNode(NoneType)
buf184_buf185_buf186_buf187.writes = 
    [   MemoryDep(name='buf184', index=c0, size=(197*s0, 384)),
        MemoryDep(name='buf184', index=c0, size=(197*s0,)),
        MemoryDep(name='buf185', index=c0, size=(197*s0,)),
        MemoryDep(name='buf186', index=c0, size=(197*s0, 384)),
        MemoryDep(name='buf186', index=c0, size=(197*s0,)),
        MemoryDep(name='buf187', index=c0, size=(75648*s0,))]
buf184_buf185_buf186_buf187.unmet_dependencies = 
    [   MemoryDep(name='buf176', index=c0, size=(75648*s0,)),
        MemoryDep(name='buf183', index=c0, size=(75648*s0,)),
        MemoryDep(name='buf185', index=c0, size=(197*s0, 384))]
buf184_buf185_buf186_buf187.met_dependencies = 
    [   MemoryDep(name='arg100_1', index=c1, size=(197*s0, 384)),
        MemoryDep(name='arg101_1', index=c1, size=(197*s0, 384))]
buf184_buf185_buf186_buf187.snodes = ['buf184', 'buf185', 'buf186', 'buf187']


buf188: ExternKernelSchedulerNode(ExternKernelOut)
buf188.writes = [StarDep(name='buf188')]
buf188.unmet_dependencies = [StarDep(name='buf187')]
buf188.met_dependencies = [StarDep(name='arg102_1'), StarDep(name='arg103_1')]
buf188.node.kernel = extern_kernels.addmm


buf189: SchedulerNode(ComputedBuffer)
buf189.writes = [MemoryDep(name='buf189', index=c0, size=(75648*s0,))]
buf189.unmet_dependencies = [   MemoryDep(name='buf188', index=226944*c0 + 64*c1 + 1152*c2 + c3, size=(s0, 6, 197, 64))]
buf189.met_dependencies = []
buf189.group.device = cuda:0
buf189.group.iteration = (75648*s0, 1)
buf189.sizes = ([s0, 6, 197, 64], [])
class buf189_loop_body:
    var_ranges = {z0: s0, z1: 6, z2: 197, z3: 64}
    index0 = 226944*z0 + 64*z1 + 1152*z2 + z3
    index1 = 75648*z0 + 12608*z1 + 64*z2 + z3
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf188', get_index)
        get_index_1 = self.get_index('index1')
        store = ops.store('buf189', get_index_1, load, None)
        return store


buf190: SchedulerNode(ComputedBuffer)
buf190.writes = [MemoryDep(name='buf190', index=c0, size=(75648*s0,))]
buf190.unmet_dependencies = [   MemoryDep(name='buf188', index=226944*c0 + c1 + 1152*c2 + 384, size=(s0, 384, 197))]
buf190.met_dependencies = []
buf190.group.device = cuda:0
buf190.group.iteration = (75648*s0, 1)
buf190.sizes = ([s0, 384, 197], [])
class buf190_loop_body:
    var_ranges = {z0: s0, z1: 384, z2: 197}
    index0 = 226944*z0 + z1 + 1152*z2 + 384
    index1 = 75648*z0 + 197*z1 + z2
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf188', get_index)
        get_index_1 = self.get_index('index1')
        store = ops.store('buf190', get_index_1, load, None)
        return store


buf191: ExternKernelSchedulerNode(ExternKernelOut)
buf191.writes = [StarDep(name='buf191')]
buf191.unmet_dependencies = [StarDep(name='buf189'), StarDep(name='buf190')]
buf191.met_dependencies = []
buf191.node.kernel = extern_kernels.bmm


buf192_buf193_buf194: FusedSchedulerNode(NoneType)
buf192_buf193_buf194.writes = 
    [   MemoryDep(name='buf192', index=c0, size=(1182*s0, 197)),
        MemoryDep(name='buf192', index=c0, size=(1182*s0,)),
        MemoryDep(name='buf193', index=c0, size=(1182*s0, 197)),
        MemoryDep(name='buf193', index=c0, size=(1182*s0,)),
        MemoryDep(name='buf194', index=c0, size=(232854*s0,))]
buf192_buf193_buf194.unmet_dependencies = [MemoryDep(name='buf191', index=c0, size=(232854*s0,))]
buf192_buf193_buf194.met_dependencies = []
buf192_buf193_buf194.snodes = ['buf192', 'buf193', 'buf194']


buf195: SchedulerNode(ComputedBuffer)
buf195.writes = [MemoryDep(name='buf195', index=c0, size=(75648*s0,))]
buf195.unmet_dependencies = [   MemoryDep(name='buf188', index=226944*c0 + 64*c1 + 1152*c2 + c3 + 768, size=(s0, 6, 197, 64))]
buf195.met_dependencies = []
buf195.group.device = cuda:0
buf195.group.iteration = (75648*s0, 1)
buf195.sizes = ([s0, 6, 197, 64], [])
class buf195_loop_body:
    var_ranges = {z0: s0, z1: 6, z2: 197, z3: 64}
    index0 = 226944*z0 + 64*z1 + 1152*z2 + z3 + 768
    index1 = 75648*z0 + 12608*z1 + 64*z2 + z3
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf188', get_index)
        get_index_1 = self.get_index('index1')
        store = ops.store('buf195', get_index_1, load, None)
        return store


buf196: ExternKernelSchedulerNode(ExternKernelOut)
buf196.writes = [StarDep(name='buf196')]
buf196.unmet_dependencies = [StarDep(name='buf194'), StarDep(name='buf195')]
buf196.met_dependencies = []
buf196.node.kernel = extern_kernels.bmm


buf197: SchedulerNode(ComputedBuffer)
buf197.writes = [MemoryDep(name='buf197', index=c0, size=(75648*s0,))]
buf197.unmet_dependencies = [   MemoryDep(name='buf196', index=75648*c0 + 64*c1 + 12608*c2 + c3, size=(s0, 197, 6, 64))]
buf197.met_dependencies = []
buf197.group.device = cuda:0
buf197.group.iteration = (75648*s0, 1)
buf197.sizes = ([s0, 197, 6, 64], [])
class buf197_loop_body:
    var_ranges = {z0: s0, z1: 197, z2: 6, z3: 64}
    index0 = 75648*z0 + 64*z1 + 12608*z2 + z3
    index1 = 75648*z0 + 384*z1 + 64*z2 + z3
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf196', get_index)
        get_index_1 = self.get_index('index1')
        store = ops.store('buf197', get_index_1, load, None)
        return store


buf198: ExternKernelSchedulerNode(ExternKernelOut)
buf198.writes = [StarDep(name='buf198')]
buf198.unmet_dependencies = [StarDep(name='buf197')]
buf198.met_dependencies = [StarDep(name='arg104_1'), StarDep(name='arg105_1')]
buf198.node.kernel = extern_kernels.addmm


buf199_buf200_buf201_buf202: FusedSchedulerNode(NoneType)
buf199_buf200_buf201_buf202.writes = 
    [   MemoryDep(name='buf199', index=c0, size=(197*s0, 384)),
        MemoryDep(name='buf199', index=c0, size=(197*s0,)),
        MemoryDep(name='buf200', index=c0, size=(197*s0,)),
        MemoryDep(name='buf201', index=c0, size=(197*s0, 384)),
        MemoryDep(name='buf201', index=c0, size=(197*s0,)),
        MemoryDep(name='buf202', index=c0, size=(75648*s0,))]
buf199_buf200_buf201_buf202.unmet_dependencies = 
    [   MemoryDep(name='buf176', index=c0, size=(75648*s0,)),
        MemoryDep(name='buf183', index=c0, size=(75648*s0,)),
        MemoryDep(name='buf198', index=c0, size=(75648*s0,)),
        MemoryDep(name='buf200', index=c0, size=(197*s0, 384))]
buf199_buf200_buf201_buf202.met_dependencies = 
    [   MemoryDep(name='arg106_1', index=c1, size=(197*s0, 384)),
        MemoryDep(name='arg107_1', index=c1, size=(197*s0, 384))]
buf199_buf200_buf201_buf202.snodes = ['buf199', 'buf200', 'buf201', 'buf202']


buf203: ExternKernelSchedulerNode(ExternKernelOut)
buf203.writes = [StarDep(name='buf203')]
buf203.unmet_dependencies = [StarDep(name='buf202')]
buf203.met_dependencies = [StarDep(name='arg108_1'), StarDep(name='arg109_1')]
buf203.node.kernel = extern_kernels.addmm


buf204: SchedulerNode(ComputedBuffer)
buf204.writes = [MemoryDep(name='buf204', index=c0, size=(302592*s0,))]
buf204.unmet_dependencies = [MemoryDep(name='buf203', index=c0, size=(302592*s0,))]
buf204.met_dependencies = []
buf204.group.device = cuda:0
buf204.group.iteration = (302592*s0, 1)
buf204.sizes = ([302592*s0], [])
class buf204_loop_body:
    var_ranges = {z0: 302592*s0}
    index0 = z0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf203', get_index)
        to_dtype = ops.to_dtype(load, torch.float32)
        constant = ops.constant(0.5, torch.float32)
        mul = ops.mul(to_dtype, constant)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('buf203', get_index_1)
        to_dtype_1 = ops.to_dtype(load_1, torch.float32)
        constant_1 = ops.constant(0.7071067811865476, torch.float32)
        mul_1 = ops.mul(to_dtype_1, constant_1)
        erf = ops.erf(mul_1)
        constant_2 = ops.constant(1, torch.float32)
        add = ops.add(erf, constant_2)
        mul_2 = ops.mul(mul, add)
        to_dtype_2 = ops.to_dtype(mul_2, torch.float16)
        get_index_2 = self.get_index('index0')
        store = ops.store('buf204', get_index_2, to_dtype_2, None)
        return store


buf205: ExternKernelSchedulerNode(ExternKernelOut)
buf205.writes = [StarDep(name='buf205')]
buf205.unmet_dependencies = [StarDep(name='buf204')]
buf205.met_dependencies = [StarDep(name='arg110_1'), StarDep(name='arg111_1')]
buf205.node.kernel = extern_kernels.addmm


buf206_buf207_buf208_buf209: FusedSchedulerNode(NoneType)
buf206_buf207_buf208_buf209.writes = 
    [   MemoryDep(name='buf206', index=c0, size=(197*s0, 384)),
        MemoryDep(name='buf206', index=c0, size=(197*s0,)),
        MemoryDep(name='buf207', index=c0, size=(197*s0,)),
        MemoryDep(name='buf208', index=c0, size=(197*s0, 384)),
        MemoryDep(name='buf208', index=c0, size=(197*s0,)),
        MemoryDep(name='buf209', index=c0, size=(75648*s0,))]
buf206_buf207_buf208_buf209.unmet_dependencies = 
    [   MemoryDep(name='buf176', index=c0, size=(75648*s0,)),
        MemoryDep(name='buf183', index=c0, size=(75648*s0,)),
        MemoryDep(name='buf198', index=c0, size=(75648*s0,)),
        MemoryDep(name='buf205', index=c0, size=(75648*s0,)),
        MemoryDep(name='buf207', index=c0, size=(197*s0, 384))]
buf206_buf207_buf208_buf209.met_dependencies = 
    [   MemoryDep(name='arg112_1', index=c1, size=(197*s0, 384)),
        MemoryDep(name='arg113_1', index=c1, size=(197*s0, 384))]
buf206_buf207_buf208_buf209.snodes = ['buf206', 'buf207', 'buf208', 'buf209']


buf210: ExternKernelSchedulerNode(ExternKernelOut)
buf210.writes = [StarDep(name='buf210')]
buf210.unmet_dependencies = [StarDep(name='buf209')]
buf210.met_dependencies = [StarDep(name='arg114_1'), StarDep(name='arg115_1')]
buf210.node.kernel = extern_kernels.addmm


buf211: SchedulerNode(ComputedBuffer)
buf211.writes = [MemoryDep(name='buf211', index=c0, size=(75648*s0,))]
buf211.unmet_dependencies = [   MemoryDep(name='buf210', index=226944*c0 + 64*c1 + 1152*c2 + c3, size=(s0, 6, 197, 64))]
buf211.met_dependencies = []
buf211.group.device = cuda:0
buf211.group.iteration = (75648*s0, 1)
buf211.sizes = ([s0, 6, 197, 64], [])
class buf211_loop_body:
    var_ranges = {z0: s0, z1: 6, z2: 197, z3: 64}
    index0 = 226944*z0 + 64*z1 + 1152*z2 + z3
    index1 = 75648*z0 + 12608*z1 + 64*z2 + z3
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf210', get_index)
        get_index_1 = self.get_index('index1')
        store = ops.store('buf211', get_index_1, load, None)
        return store


buf212: SchedulerNode(ComputedBuffer)
buf212.writes = [MemoryDep(name='buf212', index=c0, size=(75648*s0,))]
buf212.unmet_dependencies = [   MemoryDep(name='buf210', index=226944*c0 + c1 + 1152*c2 + 384, size=(s0, 384, 197))]
buf212.met_dependencies = []
buf212.group.device = cuda:0
buf212.group.iteration = (75648*s0, 1)
buf212.sizes = ([s0, 384, 197], [])
class buf212_loop_body:
    var_ranges = {z0: s0, z1: 384, z2: 197}
    index0 = 226944*z0 + z1 + 1152*z2 + 384
    index1 = 75648*z0 + 197*z1 + z2
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf210', get_index)
        get_index_1 = self.get_index('index1')
        store = ops.store('buf212', get_index_1, load, None)
        return store


buf213: ExternKernelSchedulerNode(ExternKernelOut)
buf213.writes = [StarDep(name='buf213')]
buf213.unmet_dependencies = [StarDep(name='buf211'), StarDep(name='buf212')]
buf213.met_dependencies = []
buf213.node.kernel = extern_kernels.bmm


buf214_buf215_buf216: FusedSchedulerNode(NoneType)
buf214_buf215_buf216.writes = 
    [   MemoryDep(name='buf214', index=c0, size=(1182*s0, 197)),
        MemoryDep(name='buf214', index=c0, size=(1182*s0,)),
        MemoryDep(name='buf215', index=c0, size=(1182*s0, 197)),
        MemoryDep(name='buf215', index=c0, size=(1182*s0,)),
        MemoryDep(name='buf216', index=c0, size=(232854*s0,))]
buf214_buf215_buf216.unmet_dependencies = [MemoryDep(name='buf213', index=c0, size=(232854*s0,))]
buf214_buf215_buf216.met_dependencies = []
buf214_buf215_buf216.snodes = ['buf214', 'buf215', 'buf216']


buf217: SchedulerNode(ComputedBuffer)
buf217.writes = [MemoryDep(name='buf217', index=c0, size=(75648*s0,))]
buf217.unmet_dependencies = [   MemoryDep(name='buf210', index=226944*c0 + 64*c1 + 1152*c2 + c3 + 768, size=(s0, 6, 197, 64))]
buf217.met_dependencies = []
buf217.group.device = cuda:0
buf217.group.iteration = (75648*s0, 1)
buf217.sizes = ([s0, 6, 197, 64], [])
class buf217_loop_body:
    var_ranges = {z0: s0, z1: 6, z2: 197, z3: 64}
    index0 = 226944*z0 + 64*z1 + 1152*z2 + z3 + 768
    index1 = 75648*z0 + 12608*z1 + 64*z2 + z3
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf210', get_index)
        get_index_1 = self.get_index('index1')
        store = ops.store('buf217', get_index_1, load, None)
        return store


buf218: ExternKernelSchedulerNode(ExternKernelOut)
buf218.writes = [StarDep(name='buf218')]
buf218.unmet_dependencies = [StarDep(name='buf216'), StarDep(name='buf217')]
buf218.met_dependencies = []
buf218.node.kernel = extern_kernels.bmm


buf219: SchedulerNode(ComputedBuffer)
buf219.writes = [MemoryDep(name='buf219', index=c0, size=(75648*s0,))]
buf219.unmet_dependencies = [   MemoryDep(name='buf218', index=75648*c0 + 64*c1 + 12608*c2 + c3, size=(s0, 197, 6, 64))]
buf219.met_dependencies = []
buf219.group.device = cuda:0
buf219.group.iteration = (75648*s0, 1)
buf219.sizes = ([s0, 197, 6, 64], [])
class buf219_loop_body:
    var_ranges = {z0: s0, z1: 197, z2: 6, z3: 64}
    index0 = 75648*z0 + 64*z1 + 12608*z2 + z3
    index1 = 75648*z0 + 384*z1 + 64*z2 + z3
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf218', get_index)
        get_index_1 = self.get_index('index1')
        store = ops.store('buf219', get_index_1, load, None)
        return store


buf220: ExternKernelSchedulerNode(ExternKernelOut)
buf220.writes = [StarDep(name='buf220')]
buf220.unmet_dependencies = [StarDep(name='buf219')]
buf220.met_dependencies = [StarDep(name='arg116_1'), StarDep(name='arg117_1')]
buf220.node.kernel = extern_kernels.addmm


buf221_buf222_buf223_buf224_buf225: FusedSchedulerNode(NoneType)
buf221_buf222_buf223_buf224_buf225.writes = 
    [   MemoryDep(name='buf221', index=c0, size=(75648*s0,)),
        MemoryDep(name='buf222', index=c0, size=(197*s0, 384)),
        MemoryDep(name='buf222', index=c0, size=(197*s0,)),
        MemoryDep(name='buf223', index=c0, size=(197*s0,)),
        MemoryDep(name='buf224', index=c0, size=(197*s0, 384)),
        MemoryDep(name='buf224', index=c0, size=(197*s0,)),
        MemoryDep(name='buf225', index=c0, size=(75648*s0,))]
buf221_buf222_buf223_buf224_buf225.unmet_dependencies = 
    [   MemoryDep(name='buf176', index=c0, size=(75648*s0,)),
        MemoryDep(name='buf183', index=c0, size=(75648*s0,)),
        MemoryDep(name='buf198', index=c0, size=(75648*s0,)),
        MemoryDep(name='buf205', index=c0, size=(75648*s0,)),
        MemoryDep(name='buf220', index=c0, size=(75648*s0,)),
        MemoryDep(name='buf223', index=c0, size=(197*s0, 384))]
buf221_buf222_buf223_buf224_buf225.met_dependencies = 
    [   MemoryDep(name='arg118_1', index=c1, size=(197*s0, 384)),
        MemoryDep(name='arg119_1', index=c1, size=(197*s0, 384))]
buf221_buf222_buf223_buf224_buf225.snodes = ['buf221', 'buf222', 'buf223', 'buf224', 'buf225']


buf226: ExternKernelSchedulerNode(ExternKernelOut)
buf226.writes = [StarDep(name='buf226')]
buf226.unmet_dependencies = [StarDep(name='buf225')]
buf226.met_dependencies = [StarDep(name='arg120_1'), StarDep(name='arg121_1')]
buf226.node.kernel = extern_kernels.addmm


buf227: SchedulerNode(ComputedBuffer)
buf227.writes = [MemoryDep(name='buf227', index=c0, size=(302592*s0,))]
buf227.unmet_dependencies = [MemoryDep(name='buf226', index=c0, size=(302592*s0,))]
buf227.met_dependencies = []
buf227.group.device = cuda:0
buf227.group.iteration = (302592*s0, 1)
buf227.sizes = ([302592*s0], [])
class buf227_loop_body:
    var_ranges = {z0: 302592*s0}
    index0 = z0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf226', get_index)
        to_dtype = ops.to_dtype(load, torch.float32)
        constant = ops.constant(0.5, torch.float32)
        mul = ops.mul(to_dtype, constant)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('buf226', get_index_1)
        to_dtype_1 = ops.to_dtype(load_1, torch.float32)
        constant_1 = ops.constant(0.7071067811865476, torch.float32)
        mul_1 = ops.mul(to_dtype_1, constant_1)
        erf = ops.erf(mul_1)
        constant_2 = ops.constant(1, torch.float32)
        add = ops.add(erf, constant_2)
        mul_2 = ops.mul(mul, add)
        to_dtype_2 = ops.to_dtype(mul_2, torch.float16)
        get_index_2 = self.get_index('index0')
        store = ops.store('buf227', get_index_2, to_dtype_2, None)
        return store


buf228: ExternKernelSchedulerNode(ExternKernelOut)
buf228.writes = [StarDep(name='buf228')]
buf228.unmet_dependencies = [StarDep(name='buf227')]
buf228.met_dependencies = [StarDep(name='arg122_1'), StarDep(name='arg123_1')]
buf228.node.kernel = extern_kernels.addmm


buf229_buf230_buf231_buf232: FusedSchedulerNode(NoneType)
buf229_buf230_buf231_buf232.writes = 
    [   MemoryDep(name='buf229', index=c0, size=(197*s0, 384)),
        MemoryDep(name='buf229', index=c0, size=(197*s0,)),
        MemoryDep(name='buf230', index=c0, size=(197*s0,)),
        MemoryDep(name='buf231', index=c0, size=(197*s0, 384)),
        MemoryDep(name='buf231', index=c0, size=(197*s0,)),
        MemoryDep(name='buf232', index=c0, size=(75648*s0,))]
buf229_buf230_buf231_buf232.unmet_dependencies = 
    [   MemoryDep(name='buf221', index=c0, size=(75648*s0,)),
        MemoryDep(name='buf228', index=c0, size=(75648*s0,)),
        MemoryDep(name='buf230', index=c0, size=(197*s0, 384))]
buf229_buf230_buf231_buf232.met_dependencies = 
    [   MemoryDep(name='arg124_1', index=c1, size=(197*s0, 384)),
        MemoryDep(name='arg125_1', index=c1, size=(197*s0, 384))]
buf229_buf230_buf231_buf232.snodes = ['buf229', 'buf230', 'buf231', 'buf232']


buf233: ExternKernelSchedulerNode(ExternKernelOut)
buf233.writes = [StarDep(name='buf233')]
buf233.unmet_dependencies = [StarDep(name='buf232')]
buf233.met_dependencies = [StarDep(name='arg126_1'), StarDep(name='arg127_1')]
buf233.node.kernel = extern_kernels.addmm


buf234: SchedulerNode(ComputedBuffer)
buf234.writes = [MemoryDep(name='buf234', index=c0, size=(75648*s0,))]
buf234.unmet_dependencies = [   MemoryDep(name='buf233', index=226944*c0 + 64*c1 + 1152*c2 + c3, size=(s0, 6, 197, 64))]
buf234.met_dependencies = []
buf234.group.device = cuda:0
buf234.group.iteration = (75648*s0, 1)
buf234.sizes = ([s0, 6, 197, 64], [])
class buf234_loop_body:
    var_ranges = {z0: s0, z1: 6, z2: 197, z3: 64}
    index0 = 226944*z0 + 64*z1 + 1152*z2 + z3
    index1 = 75648*z0 + 12608*z1 + 64*z2 + z3
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf233', get_index)
        get_index_1 = self.get_index('index1')
        store = ops.store('buf234', get_index_1, load, None)
        return store


buf235: SchedulerNode(ComputedBuffer)
buf235.writes = [MemoryDep(name='buf235', index=c0, size=(75648*s0,))]
buf235.unmet_dependencies = [   MemoryDep(name='buf233', index=226944*c0 + c1 + 1152*c2 + 384, size=(s0, 384, 197))]
buf235.met_dependencies = []
buf235.group.device = cuda:0
buf235.group.iteration = (75648*s0, 1)
buf235.sizes = ([s0, 384, 197], [])
class buf235_loop_body:
    var_ranges = {z0: s0, z1: 384, z2: 197}
    index0 = 226944*z0 + z1 + 1152*z2 + 384
    index1 = 75648*z0 + 197*z1 + z2
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf233', get_index)
        get_index_1 = self.get_index('index1')
        store = ops.store('buf235', get_index_1, load, None)
        return store


buf236: ExternKernelSchedulerNode(ExternKernelOut)
buf236.writes = [StarDep(name='buf236')]
buf236.unmet_dependencies = [StarDep(name='buf234'), StarDep(name='buf235')]
buf236.met_dependencies = []
buf236.node.kernel = extern_kernels.bmm


buf237_buf238_buf239: FusedSchedulerNode(NoneType)
buf237_buf238_buf239.writes = 
    [   MemoryDep(name='buf237', index=c0, size=(1182*s0, 197)),
        MemoryDep(name='buf237', index=c0, size=(1182*s0,)),
        MemoryDep(name='buf238', index=c0, size=(1182*s0, 197)),
        MemoryDep(name='buf238', index=c0, size=(1182*s0,)),
        MemoryDep(name='buf239', index=c0, size=(232854*s0,))]
buf237_buf238_buf239.unmet_dependencies = [MemoryDep(name='buf236', index=c0, size=(232854*s0,))]
buf237_buf238_buf239.met_dependencies = []
buf237_buf238_buf239.snodes = ['buf237', 'buf238', 'buf239']


buf240: SchedulerNode(ComputedBuffer)
buf240.writes = [MemoryDep(name='buf240', index=c0, size=(75648*s0,))]
buf240.unmet_dependencies = [   MemoryDep(name='buf233', index=226944*c0 + 64*c1 + 1152*c2 + c3 + 768, size=(s0, 6, 197, 64))]
buf240.met_dependencies = []
buf240.group.device = cuda:0
buf240.group.iteration = (75648*s0, 1)
buf240.sizes = ([s0, 6, 197, 64], [])
class buf240_loop_body:
    var_ranges = {z0: s0, z1: 6, z2: 197, z3: 64}
    index0 = 226944*z0 + 64*z1 + 1152*z2 + z3 + 768
    index1 = 75648*z0 + 12608*z1 + 64*z2 + z3
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf233', get_index)
        get_index_1 = self.get_index('index1')
        store = ops.store('buf240', get_index_1, load, None)
        return store


buf241: ExternKernelSchedulerNode(ExternKernelOut)
buf241.writes = [StarDep(name='buf241')]
buf241.unmet_dependencies = [StarDep(name='buf239'), StarDep(name='buf240')]
buf241.met_dependencies = []
buf241.node.kernel = extern_kernels.bmm


buf242: SchedulerNode(ComputedBuffer)
buf242.writes = [MemoryDep(name='buf242', index=c0, size=(75648*s0,))]
buf242.unmet_dependencies = [   MemoryDep(name='buf241', index=75648*c0 + 64*c1 + 12608*c2 + c3, size=(s0, 197, 6, 64))]
buf242.met_dependencies = []
buf242.group.device = cuda:0
buf242.group.iteration = (75648*s0, 1)
buf242.sizes = ([s0, 197, 6, 64], [])
class buf242_loop_body:
    var_ranges = {z0: s0, z1: 197, z2: 6, z3: 64}
    index0 = 75648*z0 + 64*z1 + 12608*z2 + z3
    index1 = 75648*z0 + 384*z1 + 64*z2 + z3
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf241', get_index)
        get_index_1 = self.get_index('index1')
        store = ops.store('buf242', get_index_1, load, None)
        return store


buf243: ExternKernelSchedulerNode(ExternKernelOut)
buf243.writes = [StarDep(name='buf243')]
buf243.unmet_dependencies = [StarDep(name='buf242')]
buf243.met_dependencies = [StarDep(name='arg128_1'), StarDep(name='arg129_1')]
buf243.node.kernel = extern_kernels.addmm


buf244_buf245_buf246_buf247: FusedSchedulerNode(NoneType)
buf244_buf245_buf246_buf247.writes = 
    [   MemoryDep(name='buf244', index=c0, size=(197*s0, 384)),
        MemoryDep(name='buf244', index=c0, size=(197*s0,)),
        MemoryDep(name='buf245', index=c0, size=(197*s0,)),
        MemoryDep(name='buf246', index=c0, size=(197*s0, 384)),
        MemoryDep(name='buf246', index=c0, size=(197*s0,)),
        MemoryDep(name='buf247', index=c0, size=(75648*s0,))]
buf244_buf245_buf246_buf247.unmet_dependencies = 
    [   MemoryDep(name='buf221', index=c0, size=(75648*s0,)),
        MemoryDep(name='buf228', index=c0, size=(75648*s0,)),
        MemoryDep(name='buf243', index=c0, size=(75648*s0,)),
        MemoryDep(name='buf245', index=c0, size=(197*s0, 384))]
buf244_buf245_buf246_buf247.met_dependencies = 
    [   MemoryDep(name='arg130_1', index=c1, size=(197*s0, 384)),
        MemoryDep(name='arg131_1', index=c1, size=(197*s0, 384))]
buf244_buf245_buf246_buf247.snodes = ['buf244', 'buf245', 'buf246', 'buf247']


buf248: ExternKernelSchedulerNode(ExternKernelOut)
buf248.writes = [StarDep(name='buf248')]
buf248.unmet_dependencies = [StarDep(name='buf247')]
buf248.met_dependencies = [StarDep(name='arg132_1'), StarDep(name='arg133_1')]
buf248.node.kernel = extern_kernels.addmm


buf249: SchedulerNode(ComputedBuffer)
buf249.writes = [MemoryDep(name='buf249', index=c0, size=(302592*s0,))]
buf249.unmet_dependencies = [MemoryDep(name='buf248', index=c0, size=(302592*s0,))]
buf249.met_dependencies = []
buf249.group.device = cuda:0
buf249.group.iteration = (302592*s0, 1)
buf249.sizes = ([302592*s0], [])
class buf249_loop_body:
    var_ranges = {z0: 302592*s0}
    index0 = z0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf248', get_index)
        to_dtype = ops.to_dtype(load, torch.float32)
        constant = ops.constant(0.5, torch.float32)
        mul = ops.mul(to_dtype, constant)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('buf248', get_index_1)
        to_dtype_1 = ops.to_dtype(load_1, torch.float32)
        constant_1 = ops.constant(0.7071067811865476, torch.float32)
        mul_1 = ops.mul(to_dtype_1, constant_1)
        erf = ops.erf(mul_1)
        constant_2 = ops.constant(1, torch.float32)
        add = ops.add(erf, constant_2)
        mul_2 = ops.mul(mul, add)
        to_dtype_2 = ops.to_dtype(mul_2, torch.float16)
        get_index_2 = self.get_index('index0')
        store = ops.store('buf249', get_index_2, to_dtype_2, None)
        return store


buf250: ExternKernelSchedulerNode(ExternKernelOut)
buf250.writes = [StarDep(name='buf250')]
buf250.unmet_dependencies = [StarDep(name='buf249')]
buf250.met_dependencies = [StarDep(name='arg134_1'), StarDep(name='arg135_1')]
buf250.node.kernel = extern_kernels.addmm


buf251_buf252_buf253_buf254: FusedSchedulerNode(NoneType)
buf251_buf252_buf253_buf254.writes = 
    [   MemoryDep(name='buf251', index=c0, size=(197*s0, 384)),
        MemoryDep(name='buf251', index=c0, size=(197*s0,)),
        MemoryDep(name='buf252', index=c0, size=(197*s0,)),
        MemoryDep(name='buf253', index=c0, size=(197*s0, 384)),
        MemoryDep(name='buf253', index=c0, size=(197*s0,)),
        MemoryDep(name='buf254', index=c0, size=(75648*s0,))]
buf251_buf252_buf253_buf254.unmet_dependencies = 
    [   MemoryDep(name='buf221', index=c0, size=(75648*s0,)),
        MemoryDep(name='buf228', index=c0, size=(75648*s0,)),
        MemoryDep(name='buf243', index=c0, size=(75648*s0,)),
        MemoryDep(name='buf250', index=c0, size=(75648*s0,)),
        MemoryDep(name='buf252', index=c0, size=(197*s0, 384))]
buf251_buf252_buf253_buf254.met_dependencies = 
    [   MemoryDep(name='arg136_1', index=c1, size=(197*s0, 384)),
        MemoryDep(name='arg137_1', index=c1, size=(197*s0, 384))]
buf251_buf252_buf253_buf254.snodes = ['buf251', 'buf252', 'buf253', 'buf254']


buf255: ExternKernelSchedulerNode(ExternKernelOut)
buf255.writes = [StarDep(name='buf255')]
buf255.unmet_dependencies = [StarDep(name='buf254')]
buf255.met_dependencies = [StarDep(name='arg138_1'), StarDep(name='arg139_1')]
buf255.node.kernel = extern_kernels.addmm


buf256: SchedulerNode(ComputedBuffer)
buf256.writes = [MemoryDep(name='buf256', index=c0, size=(75648*s0,))]
buf256.unmet_dependencies = [   MemoryDep(name='buf255', index=226944*c0 + 64*c1 + 1152*c2 + c3, size=(s0, 6, 197, 64))]
buf256.met_dependencies = []
buf256.group.device = cuda:0
buf256.group.iteration = (75648*s0, 1)
buf256.sizes = ([s0, 6, 197, 64], [])
class buf256_loop_body:
    var_ranges = {z0: s0, z1: 6, z2: 197, z3: 64}
    index0 = 226944*z0 + 64*z1 + 1152*z2 + z3
    index1 = 75648*z0 + 12608*z1 + 64*z2 + z3
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf255', get_index)
        get_index_1 = self.get_index('index1')
        store = ops.store('buf256', get_index_1, load, None)
        return store


buf257: SchedulerNode(ComputedBuffer)
buf257.writes = [MemoryDep(name='buf257', index=c0, size=(75648*s0,))]
buf257.unmet_dependencies = [   MemoryDep(name='buf255', index=226944*c0 + c1 + 1152*c2 + 384, size=(s0, 384, 197))]
buf257.met_dependencies = []
buf257.group.device = cuda:0
buf257.group.iteration = (75648*s0, 1)
buf257.sizes = ([s0, 384, 197], [])
class buf257_loop_body:
    var_ranges = {z0: s0, z1: 384, z2: 197}
    index0 = 226944*z0 + z1 + 1152*z2 + 384
    index1 = 75648*z0 + 197*z1 + z2
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf255', get_index)
        get_index_1 = self.get_index('index1')
        store = ops.store('buf257', get_index_1, load, None)
        return store


buf258: ExternKernelSchedulerNode(ExternKernelOut)
buf258.writes = [StarDep(name='buf258')]
buf258.unmet_dependencies = [StarDep(name='buf256'), StarDep(name='buf257')]
buf258.met_dependencies = []
buf258.node.kernel = extern_kernels.bmm


buf259_buf260_buf261: FusedSchedulerNode(NoneType)
buf259_buf260_buf261.writes = 
    [   MemoryDep(name='buf259', index=c0, size=(1182*s0, 197)),
        MemoryDep(name='buf259', index=c0, size=(1182*s0,)),
        MemoryDep(name='buf260', index=c0, size=(1182*s0, 197)),
        MemoryDep(name='buf260', index=c0, size=(1182*s0,)),
        MemoryDep(name='buf261', index=c0, size=(232854*s0,))]
buf259_buf260_buf261.unmet_dependencies = [MemoryDep(name='buf258', index=c0, size=(232854*s0,))]
buf259_buf260_buf261.met_dependencies = []
buf259_buf260_buf261.snodes = ['buf259', 'buf260', 'buf261']


buf262: SchedulerNode(ComputedBuffer)
buf262.writes = [MemoryDep(name='buf262', index=c0, size=(75648*s0,))]
buf262.unmet_dependencies = [   MemoryDep(name='buf255', index=226944*c0 + 64*c1 + 1152*c2 + c3 + 768, size=(s0, 6, 197, 64))]
buf262.met_dependencies = []
buf262.group.device = cuda:0
buf262.group.iteration = (75648*s0, 1)
buf262.sizes = ([s0, 6, 197, 64], [])
class buf262_loop_body:
    var_ranges = {z0: s0, z1: 6, z2: 197, z3: 64}
    index0 = 226944*z0 + 64*z1 + 1152*z2 + z3 + 768
    index1 = 75648*z0 + 12608*z1 + 64*z2 + z3
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf255', get_index)
        get_index_1 = self.get_index('index1')
        store = ops.store('buf262', get_index_1, load, None)
        return store


buf263: ExternKernelSchedulerNode(ExternKernelOut)
buf263.writes = [StarDep(name='buf263')]
buf263.unmet_dependencies = [StarDep(name='buf261'), StarDep(name='buf262')]
buf263.met_dependencies = []
buf263.node.kernel = extern_kernels.bmm


buf264: SchedulerNode(ComputedBuffer)
buf264.writes = [MemoryDep(name='buf264', index=c0, size=(75648*s0,))]
buf264.unmet_dependencies = [   MemoryDep(name='buf263', index=75648*c0 + 64*c1 + 12608*c2 + c3, size=(s0, 197, 6, 64))]
buf264.met_dependencies = []
buf264.group.device = cuda:0
buf264.group.iteration = (75648*s0, 1)
buf264.sizes = ([s0, 197, 6, 64], [])
class buf264_loop_body:
    var_ranges = {z0: s0, z1: 197, z2: 6, z3: 64}
    index0 = 75648*z0 + 64*z1 + 12608*z2 + z3
    index1 = 75648*z0 + 384*z1 + 64*z2 + z3
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf263', get_index)
        get_index_1 = self.get_index('index1')
        store = ops.store('buf264', get_index_1, load, None)
        return store


buf265: ExternKernelSchedulerNode(ExternKernelOut)
buf265.writes = [StarDep(name='buf265')]
buf265.unmet_dependencies = [StarDep(name='buf264')]
buf265.met_dependencies = [StarDep(name='arg140_1'), StarDep(name='arg141_1')]
buf265.node.kernel = extern_kernels.addmm


buf266_buf267_buf268_buf269_buf270: FusedSchedulerNode(NoneType)
buf266_buf267_buf268_buf269_buf270.writes = 
    [   MemoryDep(name='buf266', index=c0, size=(75648*s0,)),
        MemoryDep(name='buf267', index=c0, size=(197*s0, 384)),
        MemoryDep(name='buf267', index=c0, size=(197*s0,)),
        MemoryDep(name='buf268', index=c0, size=(197*s0,)),
        MemoryDep(name='buf269', index=c0, size=(197*s0, 384)),
        MemoryDep(name='buf269', index=c0, size=(197*s0,)),
        MemoryDep(name='buf270', index=c0, size=(75648*s0,))]
buf266_buf267_buf268_buf269_buf270.unmet_dependencies = 
    [   MemoryDep(name='buf221', index=c0, size=(75648*s0,)),
        MemoryDep(name='buf228', index=c0, size=(75648*s0,)),
        MemoryDep(name='buf243', index=c0, size=(75648*s0,)),
        MemoryDep(name='buf250', index=c0, size=(75648*s0,)),
        MemoryDep(name='buf265', index=c0, size=(75648*s0,)),
        MemoryDep(name='buf268', index=c0, size=(197*s0, 384))]
buf266_buf267_buf268_buf269_buf270.met_dependencies = 
    [   MemoryDep(name='arg142_1', index=c1, size=(197*s0, 384)),
        MemoryDep(name='arg143_1', index=c1, size=(197*s0, 384))]
buf266_buf267_buf268_buf269_buf270.snodes = ['buf266', 'buf267', 'buf268', 'buf269', 'buf270']


buf271: ExternKernelSchedulerNode(ExternKernelOut)
buf271.writes = [StarDep(name='buf271')]
buf271.unmet_dependencies = [StarDep(name='buf270')]
buf271.met_dependencies = [StarDep(name='arg144_1'), StarDep(name='arg145_1')]
buf271.node.kernel = extern_kernels.addmm


buf272: SchedulerNode(ComputedBuffer)
buf272.writes = [MemoryDep(name='buf272', index=c0, size=(302592*s0,))]
buf272.unmet_dependencies = [MemoryDep(name='buf271', index=c0, size=(302592*s0,))]
buf272.met_dependencies = []
buf272.group.device = cuda:0
buf272.group.iteration = (302592*s0, 1)
buf272.sizes = ([302592*s0], [])
class buf272_loop_body:
    var_ranges = {z0: 302592*s0}
    index0 = z0
    def body(self, ops):
        get_index = self.get_index('index0')
        load = ops.load('buf271', get_index)
        to_dtype = ops.to_dtype(load, torch.float32)
        constant = ops.constant(0.5, torch.float32)
        mul = ops.mul(to_dtype, constant)
        get_index_1 = self.get_index('index0')
        load_1 = ops.load('buf271', get_index_1)
        to_dtype_1 = ops.to_dtype(load_1, torch.float32)
        constant_1 = ops.constant(0.7071067811865476, torch.float32)
        mul_1 = ops.mul(to_dtype_1, constant_1)
        erf = ops.erf(mul_1)
        constant_2 = ops.constant(1, torch.float32)
        add = ops.add(erf, constant_2)
        mul_2 = ops.mul(mul, add)
        to_dtype_2 = ops.to_dtype(mul_2, torch.float16)
        get_index_2 = self.get_index('index0')
        store = ops.store('buf272', get_index_2, to_dtype_2, None)
        return store


buf273: ExternKernelSchedulerNode(ExternKernelOut)
buf273.writes = [StarDep(name='buf273')]
buf273.unmet_dependencies = [StarDep(name='buf272')]
buf273.met_dependencies = [StarDep(name='arg146_1'), StarDep(name='arg147_1')]
buf273.node.kernel = extern_kernels.addmm


buf274_buf275_buf276_buf277: FusedSchedulerNode(NoneType)
buf274_buf275_buf276_buf277.writes = 
    [   MemoryDep(name='buf274', index=c0, size=(197*s0, 384)),
        MemoryDep(name='buf274', index=c0, size=(197*s0,)),
        MemoryDep(name='buf275', index=c0, size=(197*s0,)),
        MemoryDep(name='buf276', index=c0, size=(197*s0, 384)),
        MemoryDep(name='buf276', index=c0, size=(197*s0,)),
        MemoryDep(name='buf277', index=c0, size=(75648*s0,))]
buf274_buf275_buf276_buf277.unmet_dependencies = 
    [   MemoryDep(name='buf266', index=c0, size=(75648*s0,)),
        MemoryDep(name='buf273', index=c0, size=(75648*s0,)),
        MemoryDep(name='buf275', index=c0, size=(197*s0, 384))]
buf274_buf275_buf276_buf277.met_dependencies = 
    [   MemoryDep(name='arg148_1', index=c1, size=(197*s0, 384)),
        MemoryDep(name='arg149_1', index=c1, size=(197*s0, 384))]
buf274_buf275_buf276_buf277.snodes = ['buf274', 'buf275', 'buf276', 'buf277']


buf278: ExternKernelSchedulerNode(ExternKernelOut)
buf278.writes = [StarDep(name='buf278')]
buf278.unmet_dependencies = [StarDep(name='buf277')]
buf278.met_dependencies = [StarDep(name='arg150_1'), StarDep(name='arg151_1')]
buf278.node.kernel = extern_kernels.addmm


